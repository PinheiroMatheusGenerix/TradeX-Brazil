	%@(#) $Id:  M97_CARREFOUR_OUT.rte,v 1.2 2020/04/23 17:02:20 gmt Exp $
!===========================================================================================================
% File         : $RCSfile: M97_CARREFOUR_OUT.rte $   $Revision: 1.2 $
!-----------------------------------------------------------------------------------------------------------
% Description   : M97_CARREFOUR_OUT
!-----------------------------------------------------------------------------------------------------------
% Author        : GMT - GENERIX BR
!===========================================================================================================
! 2020/04/23 GMT 1.2 Creation
!===========================================================================================================
!
! M97_CARREFOUR_OUT
!
!===========================================================================================================

base "../trace/trace.cfg" TRACE,autoflush off

#define TX_PROG_INFO "M93_CARREFOUR_OUT"

#include "include/generix_func.inc"
#include "include/GEEXM93.inc"
#include "include/GEEXM97.inc"
#include "include/GEEXM97_BYPASS.inc"

!===========================================================================================================

! Initialization section

begin
	nPos := 1
	nRec := 1
	nMainIndex := 0
	SYSLOG := find(sSYSLOG,INDEX=number(pINDEX))
	load (0, build(sHOME,"/config/CRF_wms_configuration.properties"), taPARAM)
    !tToInfologPrefixFilename := taPARAM[build("ToInfologPrefixFilename",tAmbiente)]

	! Parametros do TRACE
		nMessageID := cMessageID
		tPerfil := ""
		tSentido := "O"
		tMensagem := ""
		tDataDocumento := time("now","%Y-%m-%d")
	
	!Inicio do processo
		log("------------------------------------------------------------", NL)
		log("Inicio: ", time("now","%Y-%m-%d %H:%M:%S"), NL)
		log("Arquivo de entrada: ",pEDISEND.ORIGINAL.NAME, NL)
		log("------------------------------------------------------------", NL)

	!Abertura do banco de dados - WMS
		tDbBase		:= "CRFWMS" 
		tDbUsername	:= taPARAM["WMSDBUSER"]
		tDbPassword	:= "GNXBR21"
		tDbUrl		:= taPARAM["WMSDBURL"]	
		
		bfSqlInit()
		if not bfSqlJdbc(tDbBase , tDbUsername, tDbPassword, tDbUrl) then
			bfSqlErro()
			exit(1)
		endif

	log("------------------------------------------------------------", NL)
	log("Inicio: ", time("now","%Y-%m-%d %H:%M:%S"), NL)
	log("------------------------------------------------------------", NL)
	
	!Variaveis Gerais
		bEcommerce := FALSE
		bM9740 := FALSE
endbegin

!===========================================================================================================

line(1:"00.00")
	! CAMPOS WMS
		tCODEXC0000 := S_GEEX0000_BP_CODEXC
		tSEPEXC0000 := S_GEEX0000_BP_SEPEXC
		tSCOEXC0000 := S_GEEX0000_BP_SCOEXC
		tTRTEXC0000 := S_GEEX0000_BP_TRTEXC
		tEMTEXC0000 := S_GEEX0000_BP_EMTEXC
		tRCTEXC0000 := S_GEEX0000_BP_RCTEXC
		tDATEXC0000 := S_GEEX0000_BP_DATEXC
		tHEUEXC0000 := S_GEEX0000_BP_HEUEXC
		tNUMEXC0000 := S_GEEX0000_BP_NUMEXC
		tACQEXC0000 := S_GEEX0000_BP_ACQEXC
		tVEREXC0000 := S_GEEX0000_BP_VEREXC
		tNOMSYS0000 := S_GEEX0000_BP_NOMSYS
		tNOMDTQ0000 := S_GEEX0000_BP_NOMDTQ
		tBIBDTQ0000 := S_GEEX0000_BP_BIBDTQ
		tLIBEXC0000 := S_GEEX0000_BP_LIBEXC
		tBIBDST0000 := S_GEEX0000_BP_BIBDST
		tPGMDST0000 := S_GEEX0000_BP_PGMDST
		tPARDST0000 := S_GEEX0000_BP_PARDST
		tCODACT0000 := S_GEEX0000_BP_CODACT
		tIGLSIT0000 := S_GEEX0000_BP_IGLSIT
		tEDISIT0000 := S_GEEX0000_BP_EDISIT
		tIMAEXC0000 := S_GEEX0000_BP_IMAEXC
		tIDEMSG0000 := S_GEEX0000_BP_IDEMSG
		tNATEXC0000 := S_GEEX0000_BP_NATEXC
		tEMTORI0000 := S_GEEX0000_BP_EMTORI
		tDISEXC0000 := S_GEEX0000_BP_DISEXC
	! FIM CAMPOS WMS
endline

!===========================================================================================================

line(1:"97.40")

	! VARIAVEIS
		bM9740 := TRUE
		tMensagem := "M97 - RECEBIMENTO"
	! FIM VARIAVEIS

	! IDENTIFICA O BIB
		tAmbiente := peel(S_GEEX9740_BP_EMTEXC," ")
		log("EMTEXC: ",tAmbiente,NL)
		tToInfologPrefixFilename := taPARAM[build("ToInfologPrefixFilename",substr(S_GEEX9740_BP_EMTEXC, 8, 3),"")]
		log("UL_C4.: ",tToInfologPrefixFilename,NL)
		tCODACT := S_GEEX9740_BP_CODACT
		log("CODACT: ",tCODACT,NL)
		tNUMREC := S_GEEX9740_BP_NUMREC
		log("NUMREC: ",tNUMREC,NL)
		tREFREC := peel(S_GEEX9740_BP_REFREC," ")
		tNumeroDocumento := tREFREC
		log("REFREC: ",tREFREC,NL)
		log("ETAREC: ",S_GEEX9740_BP_ETAREC,NL)
	! FIM IDENTIFICA O BIB

	! CRIACAO DOS ARQUIVOS
		tNameOut := build(tAmbiente,"M97",build(nMessageID:R10),".DAT")
		tFileOut := build(sHOME,"/ToAPIPASS/",tNameOut)
		tFileOutTemp := build(sHOME,"/ToAPIPASS/Temp/",tNameOut)
	! FIM CRIACAO DOS ARQUIVOS

	! LINHA 00.00
		R_GEEX0000_CODEXC(tCODEXC0000)
		R_GEEX0000_SEPEXC(tSEPEXC0000)
		R_GEEX0000_SCOEXC(tSCOEXC0000)
		R_GEEX0000_TRTEXC(tTRTEXC0000)
		R_GEEX0000_EMTEXC(tEMTEXC0000)
		R_GEEX0000_RCTEXC(tRCTEXC0000)
		R_GEEX0000_DATEXC(tDATEXC0000)
		R_GEEX0000_HEUEXC(tHEUEXC0000)
		R_GEEX0000_NUMEXC(tNUMEXC0000)
		R_GEEX0000_ACQEXC(tACQEXC0000)
		R_GEEX0000_VEREXC(tVEREXC0000)
		R_GEEX0000_NOMSYS(tNOMSYS0000)
		R_GEEX0000_NOMDTQ(tNOMDTQ0000)
		R_GEEX0000_BIBDTQ(tBIBDTQ0000)
		R_GEEX0000_LIBEXC(tLIBEXC0000)
		R_GEEX0000_BIBDST(tBIBDST0000)
		R_GEEX0000_PGMDST(tPGMDST0000)
		R_GEEX0000_PARDST(tPARDST0000)
		R_GEEX0000_CODACT(tCODACT0000)
		R_GEEX0000_IGLSIT(tIGLSIT0000)
		R_GEEX0000_EDISIT(tEDISIT0000)
		R_GEEX0000_IMAEXC(tIMAEXC0000)
		R_GEEX0000_IDEMSG(tIDEMSG0000)
		R_GEEX0000_NATEXC(tNATEXC0000)
		R_GEEX0000_EMTORI(tEMTORI0000)
		R_GEEX0000_DISEXC(tDISEXC0000)
		
		flush(0,0,NL) >> tFileOutTemp
	! FIM LINHA 00.00

	! 97.40
		R_GEEX9740_BP_CODEXC(S_GEEX9740_BP_CODEXC)
		R_GEEX9740_BP_SEPEXC(S_GEEX9740_BP_SEPEXC)
		R_GEEX9740_BP_SCOEXC(S_GEEX9740_BP_SCOEXC)
		R_GEEX9740_BP_TRTEXC(S_GEEX9740_BP_TRTEXC)
		R_GEEX9740_BP_EMTEXC(S_GEEX9740_BP_EMTEXC)
		R_GEEX9740_BP_RCTEXC(S_GEEX9740_BP_RCTEXC)
		R_GEEX9740_BP_DATEXC(S_GEEX9740_BP_DATEXC)
		R_GEEX9740_BP_HEUEXC(S_GEEX9740_BP_HEUEXC)
		R_GEEX9740_BP_CODACT(S_GEEX9740_BP_CODACT)
		R_GEEX9740_BP_NUMREC(S_GEEX9740_BP_NUMREC)
		R_GEEX9740_BP_SNUREC(S_GEEX9740_BP_SNUREC)
		R_GEEX9740_BP_REFREC(S_GEEX9740_BP_REFREC)
		R_GEEX9740_BP_BLOREC(S_GEEX9740_BP_BLOREC)
		R_GEEX9740_BP_ETAREC(S_GEEX9740_BP_ETAREC)
		R_GEEX9740_BP_CODFOU(S_GEEX9740_BP_CODFOU)
		R_GEEX9740_BP_CODTRE(S_GEEX9740_BP_CODTRE)
		R_GEEX9740_BP_VALRUB(S_GEEX9740_BP_VALRUB)
		R_GEEX9740_BP_DISEXC(S_GEEX9740_BP_DISEXC)

		! SQL KAIREC
			tQuery := build("SELECT KAIREC", NL," "\
							"FROM ",tAmbiente,".GERECE ", NL," "\
							"WHERE 1 = 1 ", NL," "\
							" AND NUMREC = ",S_GEEX9740_BP_NUMREC, NL," "\
							" AND SNUREC = ",S_GEEX9740_BP_SNUREC, "")   

			log("------------------------------------------------------------", NL)
			log("tQuery ",tQuery,NL)
			log("------------------------------------------------------------", NL)

			if bfSqlSet( tDbBase, "SELECTdb2", tQuery) = FALSE then
				bfSqlErro()
				exit(1)	
			endif

			if bfSqlOpen( tDbBase, "SELECTdb2") = FALSE then
				bfSqlErro()
				exit(1)	
			endif

			while bfSqlFetchArray( tDbBase, "SELECTdb2", taDb2Array) = TRUE do	
				tKAIREC := taDb2Array["KAIREC"]
				remove(taDb2Array)
			endwhile

			if bfSqlFree( tDbBase, "SELECTdb2") = FALSE then
				bfSqlErro()
				exit(1)	
			endif
		! FIM SQL KAIREC

		R_GEEX9740_BP_KAIREC(tKAIREC)

		flush(0,0,NL) >> tFileOutTemp
		nContadorLinhasEscritas++
	! FIM 97.40

endline

!===========================================================================================================

line(1:"97.50")

	tMensagem := "M93"

	tAmbiente := peel(S_GEEX9750_EMTEXC," ")
	log("EMTEXC: ",tAmbiente,NL)
	tToInfologPrefixFilename := taPARAM[build("ToInfologPrefixFilename",substr(S_GEEX9770_EMTEXC, 8, 3),"")]
	log("UL_C4.: ",tToInfologPrefixFilename,NL)
	tCODACT := S_GEEX9750_CODACT
	log("CODACT: ",tCODACT,NL)
	tNUMLIV := S_GEEX9750_NUMLIV
	log("NUMLIV: ",tNUMLIV,NL)
	log("REFLIV: ",S_GEEX9750_REFLIV,NL)
	log("ETALIV: ",S_GEEX9750_ETALIV,NL)

	!Validando status da emcomenda
	if S_GEEX9750_CODACT = "001" and S_GEEX9750_ETALIV = "50" then
		bEcommerce := TRUE
		tQuery := build("SELECT  DISTINCT DIGITS(CLE.NUMLIV) AS NUMLIV				", NL," "\
						"       ,DIGITS(CLE.SNULIV) AS SNULIV						", NL," "\
						"       ,TRIM(CLE.REFLIV) AS REFLIV							", NL," "\
						"       ,CLE.CUMLIG											", NL," "\
						"       ,CLE.CUMUVC											", NL," "\
						"       ,CLE.CUMCOL											", NL," "\
						"       ,CSD.INDMAS											", NL," "\
						"FROM ",tAmbiente,".GESUPD AS CSD							", NL," "\
						"JOIN ",tAmbiente,".GESUPE AS CSE							", NL," "\
						"ON CSD.NUMSUP = CSE.NUMSUP AND CSE.TYPSUP != '3'			", NL," "\
						"JOIN ",tAmbiente,".GELIVE AS CLE							", NL," "\
						"ON CSD.LIVNUM = CLE.NUMLIV AND CSD.LIVSNU = CLE.SNULIV		", NL," "\
						"WHERE SUBSTR(CLE.REFLIV,1,2) = 'EC' 						", NL," "\
						"AND CSD.INDMAS IN ('0', '1') 								", NL," "\
						"AND CSE.CODLDP != 'PCK'									", NL," "\
						"AND EXISTS (												", NL," "\
						"SELECT  1													", NL," "\
						"FROM ",tAmbiente,".GESUPD AS MSD							", NL," "\
						"WHERE 1 = 1												", NL," "\
						"AND MSD.NUMLIV IN (",tNUMLIV,")							", NL," "\
						"AND ((MSD.NUMMAS = CSD.NUMMAS AND MSD.SEQMAS = CSD.SEQMAS	", NL," "\
						"	AND MSD.INDMAS != '0')									", NL," "\
						" OR 														", NL," "\
						"	  (MSD.NUMLIV = CSD.LIVNUM AND MSD.SNULIV = CSD.LIVSNU)	", NL," "\
						"	))														", NL," "\
						"AND NOT EXISTS (											", NL," "\
						"SELECT  1													", NL," "\
						"FROM ",tAmbiente,".GESUPE									", NL," "\
						"WHERE NUMLIV IN (",tNUMLIV,") AND CODLDP = 'PCK')			", NL," "\
						"ORDER BY 1, 2												")
		
		log("------------------------------------------------------------", NL)
		log(tQuery,NL)
		log("------------------------------------------------------------", NL)

		if not bfSqlSet( tDbBase, "SELECTdb2", tQuery) then
			print("FATAL ", tfSqlErrorStr())
			bfMajtrace(	"Erro de Traducao" \
						,"1" \
						,tNumeroDocumento \
						,tDataDocumento \
						,tFileInput \
						,tFileOut \
						,"Produtos" \
						,build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()) \
					)
			exit(1)
		endif

		if not bfSqlOpen( tDbBase , "SELECTdb2" ) then
			print("FATAL ", tfSqlErrorStr())
			bfMajtrace(	"Erro de Traducao" \
						,"1" \
						,tNumeroDocumento \
						,tDataDocumento \
						,tFileInput \
						,tFileOut \
						,"Produtos" \
						,build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()) \
					)
			exit(1)
		endif

		nContPED := 0

		while bfSqlFetchArray( tDbBase, "SELECTdb2", taDb2Array) = TRUE do
			nContPED++
			
			taNUMLIV[nContPED] := peel(taDb2Array["NUMLIV"]," ")
			taSNULIV[nContPED] := peel(taDb2Array["SNULIV"]," ")
			taREFLIV[nContPED] := peel(taDb2Array["REFLIV"]," ")
			taCUMLIG[nContPED] := peel(taDb2Array["CUMLIG"]," ")
			taCUMUVC[nContPED] := peel(taDb2Array["CUMUVC"]," ")
			taCUMCOL[nContPED] := peel(taDb2Array["CUMCOL"]," ")
			taINDMAS[nContPED] := peel(taDb2Array["INDMAS"]," ")
			log("Linha: ", nContPED, NL)
			log("CLIENTE NUMLIV: ", taNUMLIV[nContPED],NL)
			log("CLIENTE REFLIV: ", taREFLIV[nContPED],NL)
			log("CLIENTE CUMUVC: ", taCUMUVC[nContPED],NL)
			log("CLIENTE INDMAS: ", taINDMAS[nContPED],NL)
			log("------------------------------------------------------------", NL)
			remove(taDb2Array)
		endwhile
		
		log("------------------------------------------------------------", NL)
	endif

endline

!===========================================================================================================

! Default statements section
default

enddefault

!===========================================================================================================

! End statements section

end
	if bEcommerce = TRUE then
		while tIndex in taNUMLIV do
			log("Linha: ", tIndex, NL)
			log("CLIENTE NUMLIV: ", taNUMLIV[tIndex],NL)
			log("CLIENTE REFLIV: ", taREFLIV[tIndex],NL)
			log("CLIENTE CUMUVC: ", taCUMUVC[tIndex],NL)
			log("CLIENTE INDMAS: ", taINDMAS[tIndex],NL)

			if (tNUMLIV = taNUMLIV[tIndex] and (number(taCUMUVC[tIndex]) > 1 or taINDMAS[tIndex] = "0")) or \
			   (tNUMLIV <> taNUMLIV[tIndex] and number(taCUMUVC[tIndex]) = 1) then

				tQuery := build("SELECT  A.CODACT 												", NL," "\
								"       ,A.REFLIV 												", NL," "\
								"       ,DIGITS(A.NUMLIV) AS NUMLIV								", NL," "\
								"       ,DIGITS(A.SNULIV) AS SNULIV								", NL," "\
								"       ,A.CODCLI 												", NL," "\
								"       ,A.CUMLIG 												", NL," "\
								"       ,A.CODTRA 												", NL," "\
								"       ,COUNT(B.NUMSUP) AS VOLSUP 								", NL," "\
								"       ,CASE C.VARMSG WHEN 'PESADO' 							", NL," "\
								"			THEN 0 ELSE 1 END AS LIVPAC							", NL," "\
								"       ,COALESCE(D.IPMOUT1,'') AS CODIMP						", NL," "\
								"       ,COALESCE(D.IPMOUT2,'') AS CODZEB						", NL," "\
								"       ,E.CODPRO 												", NL," "\
								"       ,COALESCE(F.CODSER,'') AS CODSER						", NL," "\
								"       ,SUM(E.UVCLIV) AS UVCLIV								", NL," "\
								"       ,E.NUMSUP 												", NL," "\
								"FROM ",tAmbiente,".GELIVE 			AS A						", NL," "\
								"JOIN ",tAmbiente,".GESUPE 			AS B						", NL," "\
								"	ON A.NUMLIV = B.NUMLIV					 					", NL," "\
								"JOIN ",tAmbiente,".GESUPD 			AS E						", NL," "\
								"	ON B.NUMSUP = E.NUMSUP 										", NL," "\
								"	AND A.NUMLIV = E.NUMLIV 									", NL," "\
								" 	AND A.SNULIV = E.SNULIV 									", NL," "\
								"JOIN ",tAmbiente,".GEVAG  			AS C						", NL," "\
								"	ON A.NUMVAG = C.NUMVAG					 					", NL," "\
								"LEFT JOIN ",tAmbiente,".GEZATP 	AS D						", NL," "\
								"	ON B.ZONSTS = D.ZONATP AND B.ALLSTS = D.ALLATP				", NL," "\
								"LEFT JOIN ",tAmbiente,".GESERI 	AS F						", NL," "\
								"	ON E.REFLIV = F.REFLIV AND E.CODPRO = F.CODPRO 				", NL," "\
								"WHERE 1 = 1 													", NL," "\
								"AND B.CODLDP != 'PCK'											", NL," "\
								"AND A.NUMLIV='",taNUMLIV[tIndex],"' 							", NL," "\
								"GROUP BY  A.CODACT 											", NL," "\
								"         ,A.REFLIV 											", NL," "\
								"         ,A.NUMLIV 											", NL," "\
								"         ,A.SNULIV 											", NL," "\
								"         ,A.CODTRA 											", NL," "\
								"         ,C.VARMSG 											", NL," "\
								"         ,D.IPMOUT1											", NL," "\
								"         ,D.IPMOUT2											", NL," "\
								"         ,E.CODPRO 											", NL," "\
								"         ,E.NUMSUP 											", NL," "\
								"         ,F.CODSER 											", NL," "\
								"         ,A.CODCLI 											", NL," "\
								"         ,A.CUMLIG 											", NL," "\
								"ORDER BY A.REFLIV 												")

				log("------------------------------------------------------------", NL)
				log(tQuery,NL)
				log("------------------------------------------------------------", NL)

				if not bfSqlSet( tDbBase, "SELECTdb2", tQuery) then
					print("FATAL ", tfSqlErrorStr())
					bfMajtrace(	"Erro de Traducao" \
								,"1" \
								,tNumeroDocumento \
								,tDataDocumento \
								,tFileInput \
								,tFileOut \
								,"Produtos" \
								,build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()) \
							)
					exit(1)
				endif

				if not bfSqlOpen( tDbBase, "SELECTdb2" ) then
					print("FATAL ", tfSqlErrorStr())
					bfMajtrace(	"Erro de Traducao" \
								,"1" \
								,tNumeroDocumento \
								,tDataDocumento \
								,tFileInput \
								,tFileOut \
								,"Produtos" \
								,build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()) \
							)
					exit(1)
				endif

				nContQuery := 0

				while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
					nContQuery++

					tREFLIV := peel(taDb2Array["REFLIV"]," ")
					tCODIMP := peel(taDb2Array["CODIMP"]," ")
					tCODTRA := peel(taDb2Array["CODTRA"]," ")
					tVOLSUP := peel(taDb2Array["VOLSUP"]," ")
					tLIVPAC := peel(taDb2Array["LIVPAC"]," ")
					tCODZEB := peel(taDb2Array["CODZEB"]," ")
					tSNULIV := peel(taDb2Array["SNULIV"]," ")
					tCODCLI := peel(taDb2Array["CODCLI"]," ")
					tCUMLIG := peel(taDb2Array["CUMLIG"]," ")

					taNUMSUP[nContQuery] := peel(taDb2Array["NUMSUP"]," ")
					taCODPRO[nContQuery] := peel(taDb2Array["CODPRO"]," ")
					taUVCLIV[nContQuery] := peel(taDb2Array["UVCLIV"]," ")
					taCODSER[nContQuery] := peel(taDb2Array["CODSER"]," ")

					remove(taDb2Array)
				endwhile

				if not bfSqlFree( tDbBase , "SELECTdb2" ) then
					print("FATAL", tfSqlErrorStr())
					bfMajtrace(	"Erro de Traducao" \
								,"1" \
								,tNumeroDocumento \
								,tDataDocumento \
								,tFileInput \
								,tFileOut \
								,"Produtos" \
								,build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()) \
							)
					exit(1)
				endif

				if compare(tREFLIV,"") then
					log(tREFLIV,NL)
					exit(1)
				endif

				tFileOut := build(sHOME,"/ToInfolog/",tToInfologPrefixFilename,"M93",taREFLIV[tIndex],".DAT")
				tFileOutTemp := build(sHOME,"/ToInfolog/Temp/",tToInfologPrefixFilename,"M93",taREFLIV[tIndex],".DAT")
				tNameOut := build(tToInfologPrefixFilename,"M93",taREFLIV[tIndex],".DAT")

				nContLinhasEscritas := 0

				! ESCRITA 00.00
				R_GEEX0000_CODEXC("00")
				R_GEEX0000_SEPEXC(".")
				R_GEEX0000_SCOEXC("00")
				R_GEEX0000_TRTEXC("2")
				R_GEEX0000_EMTEXC(tAmbiente)
				R_GEEX0000_RCTEXC("TIBCO")
				R_GEEX0000_DATEXC(time("now" ,"%Y%m%d"))
				R_GEEX0000_HEUEXC(time("now" ,"%H%M%S"))
				R_GEEX0000_NUMEXC("0000000")
				R_GEEX0000_ACQEXC("0")
				R_GEEX0000_VEREXC("5.00")
				R_GEEX0000_NOMDTQ("M93")
				R_GEEX0000_BIBDTQ(tAmbiente)
				R_GEEX0000_IGLSIT("000")

				flush(0,0,NL) >> tFileOutTemp
				nContLinhasEscritas++

				! ESCRITA 9300
				R_GEEX9300_CODEXC("93")
				R_GEEX9300_SEPEXC(".")
				R_GEEX9300_SCOEXC("00")
				R_GEEX9300_TRTEXC("1")
				R_GEEX9300_CODACT(tCODACT)
				R_GEEX9300_REFLIV(tREFLIV)
				tNumeroDocumento := tREFLIV
				R_GEEX9300_IGLSIT("000")
				R_GEEX9300_CODIMP(tCODIMP)
				R_GEEX9300_CODTRA(tCODTRA)
				R_GEEX9300_VOLSUP(build(number(tVOLSUP):R06))
				R_GEEX9300_LIVPAC(tLIVPAC)
				R_GEEX9300_CODZEB(tCODZEB)

				flush(0,0,NL) >> tFileOutTemp
				nContLinhasEscritas++

				!ESCRITA 9320
				!Uma linha 93.20 para cada CODPRO por NUMSUP
				nCountProd := 0

				while nCountProd < nContQuery do
					nCountProd++

					R_GEEX9320_CODEXC("93")
					R_GEEX9320_SEPEXC(".")
					R_GEEX9320_SCOEXC("20")
					R_GEEX9320_TRTEXC("1")
					R_GEEX9320_CODACT(tCODACT)
					R_GEEX9320_REFLIV(tREFLIV)
					R_GEEX9320_CODPRO(taCODPRO[nCountProd])
					R_GEEX9320_UVCLIV(build(number(taUVCLIV[nCountProd]):R09))
					!R_GEEX9320_NUMSUP(taNUMSUP[nCountProd])

					flush(0,0,NL) >> tFileOutTemp
					nContLinhasEscritas++

					if length(taCODSER[nCountProd]) > 0 then
						!ESCRITA 9330
						!Criar 93.30 quando houver CODSER
						R_GEEX9330_CODEXC("93")
						R_GEEX9330_SEPEXC(".")
						R_GEEX9330_SCOEXC("30")
						R_GEEX9330_TRTEXC("1")
						R_GEEX9330_CODACT(tCODACT)
						R_GEEX9330_REFLIV(tREFLIV)
						R_GEEX9330_CODPRO(taCODPRO[nCountProd])
						R_GEEX9330_CODSER(taCODSER[nCountProd])

						flush(0,0,NL) >> tFileOutTemp
						nContLinhasEscritas++
					endif
				endwhile

				!ESCRITA 9399
				R_GEEX9399_CODEXC("93")
				R_GEEX9399_SEPEXC(".")
				R_GEEX9399_SCOEXC("99")
				R_GEEX9399_TRTEXC("10")
				R_GEEX9399_NUMLIV(tNUMLIV)
				R_GEEX9399_SNULIV(tSNULIV)
				R_GEEX9399_CODACT(tCODACT)
				R_GEEX9399_CODCLI(tCODCLI)
				R_GEEX9399_REFLIV(tREFLIV)
				R_GEEX9399_CUMLIG(build(number(tCUMLIG):R04))
				R_GEEX9399_COLTOT(build(number(tVOLSUP):R09))

				flush(0,0,NL) >> tFileOutTemp
				nContLinhasEscritas++

				!ESCRITA 9900
				R_GEEX9900_CODEXC("99")
				R_GEEX9900_SEPEXC(".")
				R_GEEX9900_SCOEXC("00")
				R_GEEX9900_DATEXC(time("now" ,"%Y%m%d"))
				R_GEEX9900_HEUEXC(time("now" ,"%H%M%S"))
				R_GEEX9900_NUMEXC("0000000")
				R_GEEX9900_CPTEXC(build(nContLinhasEscritas))

				flush(0,0,NL) >> tFileOutTemp

				close(tFileOutTemp)

				copy(tFileOutTemp,tFileOut)
				close(tFileOutTemp)
				remove(tFileOutTemp)
				close(tFileOut)

				bfMajtrace(	"Recebida" \
							,"0" \
							,tNumeroDocumento \
							,tDataDocumento \
							,tFileInput \
							,tFileOut \
							,"" \
							,"" \
						)

				! Enviar interface para o cliente
				tCmd := build("edisend ToInfolog ", tFileOut)
				log("executando o comando - ", tCmd, NL)
				system(tCmd)

			endif
		endwhile

	endif

	if bM9740 then
		! 99.00
			R_GEEX9900_CODEXC("99")
			R_GEEX9900_SEPEXC(".")
			R_GEEX9900_SCOEXC("00")
			R_GEEX9900_DATEXC(time("now" ,"%Y%m%d"))
			R_GEEX9900_HEUEXC(time("now" ,"%H%M%S"))
			R_GEEX9900_NUMEXC("0000000")
			R_GEEX9900_CPTEXC(build(nContadorLinhasEscritas))

			flush(0,0,NL) >> tFileOutTemp
		! FIM 99.00

		! TRATAMENTO FINAL DOS ARQUIVOS
			close(tFileOutTemp)
			copy(tFileOutTemp,tFileOut)
			close(tFileOutTemp)
			remove(tFileOutTemp)
			close(tFileOut)
		! FIM TRATAMENTO FINAL DOS ARQUIVOS

		! TRACE
			bfMajtrace(	"Recebida" \
						,"0" \
						,tNumeroDocumento \
						,tDataDocumento \
						,tFileInput \
						,tFileOut \
						,"" \
						,"" \
					)
		! FIM TRACE

		! Enviar interface para o cliente
			tCmd := build("edisend APIPASS_SFTP ", tFileOut)
			log("executando o comando - ", tCmd, NL)
			system(tCmd)

	endif

	bfSqlClose(tDbBase)
	log("------------------------------------------------------------", NL)
	log("Fim...: ", time("now","%Y-%m-%d %H:%M:%S"), NL)
	log("------------------------------------------------------------", NL)

endend

!===========================================================================================================

function bfMajtrace(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErro)
	TRACE:=new(build(sHOME,"/trace"))
	TRACE.ESTADO := tStatus
	TRACE.ERRO := tError
	TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
	TRACE.PERFIL := tToInfologPrefixFilename
	TRACE.SENTIDO := tSentido
	TRACE.MENSAGEM := tMensagem
	TRACE.NUMDOC := tNumDoc
	TRACE.DATDOC := tDataDoc
	TRACE.MESSAGEID := build(nMessageID:R10)
	if pEDISEND.ORIGINAL.NAME <> build(SYSLOG.INDEX) then
		TRACE.REDE := pEDISEND.ORIGINAL.NAME
	else
		TRACE.REDE := "REPROCESSADO"
	endif
	TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
	TRACE.FICHEIROSAIDA := tNameOut
	TRACE.LIBEXC := tLIBEXC

	if tError = "0" then
		print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
		print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
		print("Traduzida com Sucesso",NL) >> TRACE.Detail
	else
		if tError = "1" then
			print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
			print("Erro de Traducao",NL) >> TRACE.Detail
			print(tMensagemErro,NL) >> TRACE.Detail
		endif
	endif

	close(TRACE.Detail)

	if nMainIndex = 0 then
		close(SYSLOG.a)
		copy(SYSLOG.a,TRACE.In)
		close(SYSLOG.a)
		close(TRACE.In)

		nMainIndex := TRACE.INDEX
	else
		tCmd := build("ln -s ", sHOME, "/trace/files/In/", nMainIndex, " ", TRACE.In)
		system(tCmd)
	endif

	if tError = "0" then
		close(tFileOut)
		copy(tFileOut,TRACE.Out)
		close(tFileOut)
		close(TRACE.Out)
	endif

	system("sleep 1")
	flush(TRACE)

endfunction

!===========================================================================================================

function bfToInfolog()

	tCmd := build("edisend ToInfolog ", tFileOut)
	log("executando o comando - ", tCmd, NL)
	system(tCmd)

endfunction

!===========================================================================================================

function bfSqlErro()
    print("FATAL: ",tfSqlErrorStr())
    bfMajtrace(	"Erro de Traducao" \
                ,"1" \
                ,tNumeroDocumento \
                ,tDataDocumento \
                ,tFileInput \
                ,tFileOut \
                ,tMensagem \
                ,build("Erro no banco de dados: ",tfSqlErrorStr()))     
endfunction
