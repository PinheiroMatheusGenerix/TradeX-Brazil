%@(#)  M59_CARREFOUR.rte     modif:15-01-2023
!==============================================================================
% File          : M59_CARREFOUR.rte   version 1.0.0
!------------------------------------------------------------------------------
% Description   : <short program description>
!------------------------------------------------------------------------------
% Author        : Richard - Generix BR
!==============================================================================
! 15-01-2023  XX  Creation / Copy
! 00-00-0000  XX  <comments>
!==============================================================================
!
! <detailed program description>
!
!==============================================================================
! input file     : <name or rule for naming input file>
! output file    : <name or rule for naming output file> 
! temporary file : <name or rule for naming temporary file> 
!==============================================================================

!base "syslog.cfg" SYSLOG
base "../trace/trace.cfg" TRACE,autoflush off

!==============================================================================

! Input/output macros file
#define TX_PROG_INFO "M59_CARREFOUR_OUT"
#include "include/generix_func.inc"
#include "include/GEEXM59.inc"
#include "include/GEEXM59_BYPASS.inc"
#include "include/GEEXM93.inc"

!==============================================================================

! Initialization section

begin
	nPos := 1
	nRec := 1
	nMainIndex := 0
	SYSLOG := find(sSYSLOG,INDEX=number(pINDEX))
    load(0, build(sHOME,"/config/CRF_wms_configuration.properties"), taPARAM)
    !tToInfologPrefixFilename := taPARAM[build("ToInfologPrefixFilename",tAmbiente)]

    ! Parametros do TRACE
		nMessageID := cMessageID
		tPerfil := ""
		tSentido := "O"
		tMensagem := ""
		tDataDocumento := time("now","%Y-%m-%d")
	
	!Inicio do processo
		log("------------------------------------------------------------", NL)
		log("Inicio: ", time("now","%Y-%m-%d %H:%M:%S"), NL)
		log("Arquivo de entrada: ", pEDISEND.ORIGINAL.NAME, NL)
		log("------------------------------------------------------------", NL)

	!Abertura do banco de dados - WMS
        tDbBase		:= "CRFWMS" 
        tDbUsername	:= taPARAM["WMSDBUSER"]
        tDbPassword	:= "GNXBR21"
        tDbUrl		:= taPARAM["WMSDBURL"]	

        bfSqlInit()
        if not bfSqlJdbc(tDbBase , tDbUsername, tDbPassword, tDbUrl) then
            bfSqlClose(tDbBase)
            bfSqlErro()
            exit(1)
        endif

    !Variaveis Gerais
		bEcommerce := FALSE
		bM9740 := FALSE

endbegin

!==============================================================================

line(1:"00.00")
    tCODACT := S_GEEX0000_CODACT
	tAmbiente := peel(S_GEEX0000_EMTEXC," ")
	tToInfologPrefixFilename := taPARAM[build("ToInfologPrefixFilename",substr(tAmbiente, 8, 3),"")]
    tPerfil := tToInfologPrefixFilename

	! CAMPOS WMS
		tCODEXC0000 := S_GEEX0000_BP_CODEXC
		tSEPEXC0000 := S_GEEX0000_BP_SEPEXC
		tSCOEXC0000 := S_GEEX0000_BP_SCOEXC
		tTRTEXC0000 := S_GEEX0000_BP_TRTEXC
		tEMTEXC0000 := S_GEEX0000_BP_EMTEXC
		tRCTEXC0000 := S_GEEX0000_BP_RCTEXC
		tDATEXC0000 := S_GEEX0000_BP_DATEXC
		tHEUEXC0000 := S_GEEX0000_BP_HEUEXC
		tNUMEXC0000 := S_GEEX0000_BP_NUMEXC
		tACQEXC0000 := S_GEEX0000_BP_ACQEXC
		tVEREXC0000 := S_GEEX0000_BP_VEREXC
		tNOMSYS0000 := S_GEEX0000_BP_NOMSYS
		tNOMDTQ0000 := S_GEEX0000_BP_NOMDTQ
		tBIBDTQ0000 := S_GEEX0000_BP_BIBDTQ
		tLIBEXC0000 := S_GEEX0000_BP_LIBEXC
		tBIBDST0000 := S_GEEX0000_BP_BIBDST
		tPGMDST0000 := S_GEEX0000_BP_PGMDST
		tPARDST0000 := S_GEEX0000_BP_PARDST
		tCODACT0000 := S_GEEX0000_BP_CODACT
		tIGLSIT0000 := S_GEEX0000_BP_IGLSIT
		tEDISIT0000 := S_GEEX0000_BP_EDISIT
		tIMAEXC0000 := S_GEEX0000_BP_IMAEXC
		tIDEMSG0000 := S_GEEX0000_BP_IDEMSG
		tNATEXC0000 := S_GEEX0000_BP_NATEXC
		tEMTORI0000 := S_GEEX0000_BP_EMTORI
		tDISEXC0000 := S_GEEX0000_BP_DISEXC
	! FIM CAMPOS WMS

endline

!==============================================================================

line(1:"59.20")

	! VARIAVEIS
        tMensagem := "M93"
        tNUMSUP := S_GEEX5920_NUMSUP
        tCLILIV := S_GEEX5920_CLILIV
        tTYPSUP := S_GEEX5920_TYPSUP
        tETASUP := S_GEEX5920_ETASUP
        tTRTEXC := S_GEEX5920_TRTEXC
	! FIM VARIAVEIS

    ! Primeira validação
        log("------------------------------------------------------------", NL)
        log("EMTEXC: ",tAmbiente,NL)
        log("UL_C4.: ",tToInfologPrefixFilename,NL)
        log("CODACT: ",tCODACT,NL)
        log("NUMSUP: ",tNUMSUP, NL)
        log("CLILIV: ",tCLILIV, NL)
        log("TYPSUP: ",tTYPSUP, NL)
        log("ETASUP: ",tETASUP, NL)
        log("TRTEXC: ",tTRTEXC, NL)
        log("------------------------------------------------------------", NL)

        if not (tETASUP = "30" \
            and tTYPSUP = "1" \
            and tCLILIV = "MASSIFICATION") then
            bfSqlClose(tDbBase)
            log("------------------------------------------------------------", NL)
            log("Não gerar.", NL)
            log("------------------------------------------------------------", NL)
            exit(0)
        endif

	!Validando status da emcomenda
		tQuery := build("SELECT  DISTINCT DIGITS(CLE.NUMLIV) AS NUMLIV				", NL," "\
						"       ,DIGITS(CLE.SNULIV) AS SNULIV						", NL," "\
						"       ,TRIM(CLE.REFLIV) AS REFLIV							", NL," "\
						"       ,CLE.CUMLIG											", NL," "\
						"       ,CLE.CUMUVC											", NL," "\
						"       ,CLE.CUMCOL											", NL," "\
						"       ,CSD.INDMAS											", NL," "\
						"FROM ",tAmbiente,".GESUPD AS CSD							", NL," "\
						"JOIN ",tAmbiente,".GESUPE AS CSE							", NL," "\
						"ON CSD.NUMSUP = CSE.NUMSUP AND CSE.TYPSUP != '3'			", NL," "\
						"JOIN ",tAmbiente,".GELIVE AS CLE							", NL," "\
						"ON CSD.LIVNUM = CLE.NUMLIV AND CSD.LIVSNU = CLE.SNULIV		", NL," "\
						"WHERE SUBSTR(CLE.REFLIV,1,2) = 'EC' 						", NL," "\
						"AND CSD.INDMAS IN ('0', '1') 								", NL," "\
						"AND CSE.CODLDP != 'PCK'									", NL," "\
						"AND EXISTS ( SELECT  1 FROM ",tAmbiente,".GESUPD AS MSD	", NL," "\
						"WHERE 1 = 1												", NL," "\
						"AND MSD.NUMSUP IN (",tNUMSUP,") AND MSD.UVCLIV > 0 		", NL," "\
						"AND ((MSD.NUMMAS = CSD.NUMMAS AND MSD.SEQMAS = CSD.SEQMAS	", NL," "\
						"	AND MSD.CPTMAS = CSD.CPTMAS AND MSD.INDMAS != '0')		", NL," "\
						" OR 														", NL," "\
						"	  (MSD.NUMLIV = CSD.LIVNUM AND MSD.SNULIV = CSD.LIVSNU)	", NL," "\
						"	))														", NL," "\
						"ORDER BY 1, 2												")
		
		log("------------------------------------------------------------", NL)
		log(tQuery,NL)
		log("------------------------------------------------------------", NL)

		if not bfSqlSet(tDbBase, "SELECTdb2", tQuery) then
            bfSqlErro()
            exit(1)
		endif

		if not bfSqlOpen(tDbBase, "SELECTdb2") then
            bfSqlErro()
            exit(1)
		endif

		nContPED := 0

		while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
			nContPED++
			
			taNUMLIV[nContPED] := peel(taDb2Array["NUMLIV"]," ")
			taSNULIV[nContPED] := peel(taDb2Array["SNULIV"]," ")
			taREFLIV[nContPED] := peel(taDb2Array["REFLIV"]," ")
			taCUMLIG[nContPED] := peel(taDb2Array["CUMLIG"]," ")
			taCUMUVC[nContPED] := peel(taDb2Array["CUMUVC"]," ")
			taCUMCOL[nContPED] := peel(taDb2Array["CUMCOL"]," ")
			taINDMAS[nContPED] := peel(taDb2Array["INDMAS"]," ")
			log("Linha: ", nContPED, NL)
			log("CLIENTE NUMLIV: ", taNUMLIV[nContPED],NL)
			log("CLIENTE REFLIV: ", taREFLIV[nContPED],NL)
			log("CLIENTE CUMUVC: ", taCUMUVC[nContPED],NL)
			log("CLIENTE INDMAS: ", taINDMAS[nContPED],NL)
			log("------------------------------------------------------------", NL)
		    log("------------------------------------------------------------", NL)
			remove(taDb2Array)
		endwhile

    ! Resultado da SQL e gerando o M93
        if nContPED > 0 then
            while tIndex in taNUMLIV do
                log("Linha: ", tIndex, NL)
                log("CLIENTE NUMLIV: ", taNUMLIV[tIndex],NL)
                log("CLIENTE REFLIV: ", taREFLIV[tIndex],NL)
                log("CLIENTE CUMUVC: ", taCUMUVC[tIndex],NL)
                log("CLIENTE INDMAS: ", taINDMAS[tIndex],NL)

                if number(taCUMUVC[tIndex]) = 1 then
                    tQuery := build("SELECT  A.CODACT 												", NL," "\
                                    "       ,A.REFLIV 												", NL," "\
                                    "       ,DIGITS(A.NUMLIV) AS NUMLIV								", NL," "\
                                    "       ,DIGITS(A.SNULIV) AS SNULIV								", NL," "\
                                    "       ,A.CODCLI 												", NL," "\
                                    "       ,A.CUMLIG 												", NL," "\
                                    "       ,A.CODTRA 												", NL," "\
                                    "       ,COUNT(B.NUMSUP) AS VOLSUP 								", NL," "\
                                    "       ,CASE C.VARMSG WHEN 'PESADO' 							", NL," "\
                                    "			THEN 0 ELSE 1 END AS LIVPAC							", NL," "\
                                    "       ,COALESCE(D.IPMOUT1,'') AS CODIMP						", NL," "\
                                    "       ,COALESCE(D.IPMOUT2,'') AS CODZEB						", NL," "\
                                    "       ,E.CODPRO 												", NL," "\
                                    "       ,COALESCE(F.CODSER,'') AS CODSER						", NL," "\
                                    "       ,SUM(E.UVCLIV) AS UVCLIV								", NL," "\
                                    "       ,E.NUMSUP 												", NL," "\
                                    "FROM ",tAmbiente,".GELIVE 			AS A						", NL," "\
                                    "JOIN ",tAmbiente,".GESUPE 			AS B						", NL," "\
                                    "	ON A.NUMLIV = B.NUMLIV					 					", NL," "\
                                    "JOIN ",tAmbiente,".GESUPD 			AS E						", NL," "\
                                    "	ON B.NUMSUP = E.NUMSUP 										", NL," "\
                                    "	AND A.NUMLIV = E.NUMLIV 									", NL," "\
                                    " 	AND A.SNULIV = E.SNULIV 									", NL," "\
                                    "JOIN ",tAmbiente,".GEVAG  			AS C						", NL," "\
                                    "	ON A.NUMVAG = C.NUMVAG					 					", NL," "\
                                    "LEFT JOIN ",tAmbiente,".GEZATP 	AS D						", NL," "\
                                    "	ON B.ZONSTS = D.ZONATP AND B.ALLSTS = D.ALLATP				", NL," "\
                                    "LEFT JOIN ",tAmbiente,".GESERI 	AS F						", NL," "\
                                    "	ON E.REFLIV = F.REFLIV AND E.CODPRO = F.CODPRO 				", NL," "\
                                    "WHERE 1 = 1 													", NL," "\
                                    "AND B.CODLDP != 'PCK'											", NL," "\
                                    "AND A.NUMLIV='",taNUMLIV[tIndex],"' 							", NL," "\
                                    "GROUP BY  A.CODACT 											", NL," "\
                                    "         ,A.REFLIV 											", NL," "\
                                    "         ,A.NUMLIV 											", NL," "\
                                    "         ,A.SNULIV 											", NL," "\
                                    "         ,A.CODTRA 											", NL," "\
                                    "         ,C.VARMSG 											", NL," "\
                                    "         ,D.IPMOUT1											", NL," "\
                                    "         ,D.IPMOUT2											", NL," "\
                                    "         ,E.CODPRO 											", NL," "\
                                    "         ,E.NUMSUP 											", NL," "\
                                    "         ,F.CODSER 											", NL," "\
                                    "         ,A.CODCLI 											", NL," "\
                                    "         ,A.CUMLIG 											", NL," "\
                                    "ORDER BY A.REFLIV 												")

                    log("------------------------------------------------------------", NL)
                    log(tQuery,NL)
                    log("------------------------------------------------------------", NL)

                    if not bfSqlSet(tDbBase, "SELECTdb2", tQuery) then
                        bfSqlErro()
                        exit(1)
                    endif

                    if not bfSqlOpen(tDbBase, "SELECTdb2") then
                        bfSqlErro()
                        exit(1)
                    endif

                    nContQuery := 0

                    while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
                        nContQuery++

                        tREFLIV := peel(taDb2Array["REFLIV"]," ")
                        tCODIMP := peel(taDb2Array["CODIMP"]," ")
                        tCODTRA := peel(taDb2Array["CODTRA"]," ")
                        tVOLSUP := peel(taDb2Array["VOLSUP"]," ")
                        tLIVPAC := peel(taDb2Array["LIVPAC"]," ")
                        tCODZEB := peel(taDb2Array["CODZEB"]," ")
                        tNUMLIV := peel(taDb2Array["NUMLIV"]," ")
                        tSNULIV := peel(taDb2Array["SNULIV"]," ")
                        tCODCLI := peel(taDb2Array["CODCLI"]," ")
                        tCUMLIG := peel(taDb2Array["CUMLIG"]," ")

                        taNUMSUP[nContQuery] := peel(taDb2Array["NUMSUP"]," ")
                        taCODPRO[nContQuery] := peel(taDb2Array["CODPRO"]," ")
                        taUVCLIV[nContQuery] := peel(taDb2Array["UVCLIV"]," ")
                        taCODSER[nContQuery] := peel(taDb2Array["CODSER"]," ")

                        remove(taDb2Array)
                    endwhile

                    if not bfSqlFree(tDbBase, "SELECTdb2") then
                        bfSqlErro()
                        exit(1)
                    endif

                    if compare(tREFLIV, "") then
                        log(tREFLIV,NL)
                        exit(1)
                    endif

                    tNumeroDocumento := tREFLIV

                    ! Criação do arquivo
                        tNameOut := build(tToInfologPrefixFilename,"M93",taREFLIV[tIndex],".DAT")
                        tFileOut := build(sHOME,"/ToInfolog/",tNameOut)
                        tFileOutTemp := build(sHOME,"/ToInfolog/Temp/",tNameOut)

                    nContLinhasEscritas := 0

                    ! ESCRITA 00.00
                    R_GEEX0000_CODEXC("00")
                    R_GEEX0000_SEPEXC(".")
                    R_GEEX0000_SCOEXC("00")
                    R_GEEX0000_TRTEXC("2")
                    R_GEEX0000_EMTEXC(tAmbiente)
                    R_GEEX0000_RCTEXC("TIBCO")
                    R_GEEX0000_DATEXC(time("now" ,"%Y%m%d"))
                    R_GEEX0000_HEUEXC(time("now" ,"%H%M%S"))
                    R_GEEX0000_NUMEXC("0000000")
                    R_GEEX0000_ACQEXC("0")
                    R_GEEX0000_VEREXC("5.00")
                    R_GEEX0000_NOMDTQ("M93")
                    R_GEEX0000_BIBDTQ(tAmbiente)
                    R_GEEX0000_IGLSIT("000")

                    flush(0,0,NL) >> tFileOutTemp
                    nContLinhasEscritas++

                    ! ESCRITA 9300
                    R_GEEX9300_CODEXC("93")
                    R_GEEX9300_SEPEXC(".")
                    R_GEEX9300_SCOEXC("00")
                    R_GEEX9300_TRTEXC("1")
                    R_GEEX9300_CODACT(tCODACT)
                    R_GEEX9300_REFLIV(tREFLIV)
                    R_GEEX9300_IGLSIT("000")
                    R_GEEX9300_CODIMP(tCODIMP)
                    R_GEEX9300_CODTRA(tCODTRA)
                    R_GEEX9300_VOLSUP(build(number(tVOLSUP):R06))
                    R_GEEX9300_LIVPAC(tLIVPAC)
                    R_GEEX9300_CODZEB(tCODZEB)

                    flush(0,0,NL) >> tFileOutTemp
                    nContLinhasEscritas++

                    !ESCRITA 9320
                    !Uma linha 93.20 para cada CODPRO por NUMSUP
                    nCountProd := 0

                    while nCountProd < nContQuery do
                        nCountProd++

                        R_GEEX9320_CODEXC("93")
                        R_GEEX9320_SEPEXC(".")
                        R_GEEX9320_SCOEXC("20")
                        R_GEEX9320_TRTEXC("1")
                        R_GEEX9320_CODACT(tCODACT)
                        R_GEEX9320_REFLIV(tREFLIV)
                        R_GEEX9320_CODPRO(taCODPRO[nCountProd])
                        R_GEEX9320_UVCLIV(build(number(taUVCLIV[nCountProd]):R09))

                        flush(0,0,NL) >> tFileOutTemp
                        nContLinhasEscritas++

                        if length(taCODSER[nCountProd]) > 0 then
                            !ESCRITA 9330
                            !Criar 93.30 quando houver CODSER
                            R_GEEX9330_CODEXC("93")
                            R_GEEX9330_SEPEXC(".")
                            R_GEEX9330_SCOEXC("30")
                            R_GEEX9330_TRTEXC("1")
                            R_GEEX9330_CODACT(tCODACT)
                            R_GEEX9330_REFLIV(tREFLIV)
                            R_GEEX9330_CODPRO(taCODPRO[nCountProd])
                            R_GEEX9330_CODSER(taCODSER[nCountProd])

                            flush(0,0,NL) >> tFileOutTemp
                            nContLinhasEscritas++
                        endif
                    endwhile

                    !ESCRITA 9399
                    R_GEEX9399_CODEXC("93")
                    R_GEEX9399_SEPEXC(".")
                    R_GEEX9399_SCOEXC("99")
                    R_GEEX9399_TRTEXC("10")
                    R_GEEX9399_NUMLIV(tNUMLIV)
                    R_GEEX9399_SNULIV(tSNULIV)
                    R_GEEX9399_CODACT(tCODACT)
                    R_GEEX9399_CODCLI(tCODCLI)
                    R_GEEX9399_REFLIV(tREFLIV)
                    R_GEEX9399_CUMLIG(build(number(tCUMLIG):R04))
                    R_GEEX9399_COLTOT(build(number(tVOLSUP):R09))

                    flush(0,0,NL) >> tFileOutTemp
                    nContLinhasEscritas++

                    !ESCRITA 9900
                    R_GEEX9900_CODEXC("99")
                    R_GEEX9900_SEPEXC(".")
                    R_GEEX9900_SCOEXC("00")
                    R_GEEX9900_DATEXC(time("now" ,"%Y%m%d"))
                    R_GEEX9900_HEUEXC(time("now" ,"%H%M%S"))
                    R_GEEX9900_NUMEXC("0000000")
                    R_GEEX9900_CPTEXC(build(nContLinhasEscritas))

                    flush(0,0,NL) >> tFileOutTemp

                    close(tFileOutTemp)

                    copy(tFileOutTemp,tFileOut)
                    close(tFileOutTemp)
                    remove(tFileOutTemp)
                    close(tFileOut)

                    bfMajtrace(	"Recebida" \
                                ,"0" \
                                ,tNumeroDocumento \
                                ,tDataDocumento \
                                ,tFileInput \
                                ,tFileOut \
                                ,tMensagem \
                                ,"" \
                            )

                    ! Enviar interface para o cliente
                    tCmd := build("edisend ToInfolog ", tFileOut)
                    log("executando o comando - ", tCmd, NL)
                    system(tCmd)
                else
                    bfSqlClose(tDbBase)
                    log("------------------------------------------------------------", NL)
                    log("CUMUVC <> 1. Não gerar.", NL)
                    log("------------------------------------------------------------", NL)
                    exit(0)
                endif
            endwhile
            
            bfSqlClose(tDbBase)
        endif

	log("------------------------------------------------------------", NL)
	log("Fim...: ", time("now","%Y-%m-%d %H:%M:%S"), NL)
	log("------------------------------------------------------------", NL)

endline

!==============================================================================

line(1:"59.50")

	! VARIAVEIS
		bM5950 := TRUE
		tMensagem := "M59.50"
        tNumeroDocumento := S_GEEX5950_BP_NUMSUP
        tNUMMIT := S_GEEX5950_BP_NUMTOU
	! FIM VARIAVEIS

	! IDENTIFICA O BIB
		log("EMTEXC: ",tAmbiente,NL)
		log("UL_C4.: ",tToInfologPrefixFilename,NL)
		log("CODACT: ",tCODACT,NL)
		tNUMSUP := S_GEEX5950_BP_NUMSUP
		log("NUMSUP: ",tNUMSUP,NL)
		tNUMTOU := peel(S_GEEX5950_BP_NUMTOU," ")
		log("NUMTOU: ",tNUMTOU,NL)
		log("ETASUP: ",S_GEEX5950_BP_ETASUP,NL)
	! FIM IDENTIFICA O BIB

	! CRIACAO DOS ARQUIVOS
		tNameOut := build(tToInfologPrefixFilename,"M59",build(nMessageID:R010),".DAT")
		tFileOut := build(sHOME,"/ToAPIPASS/",tNameOut)
		tFileOutTemp := build(sHOME,"/ToAPIPASS/Temp/",tNameOut)
	! FIM CRIACAO DOS ARQUIVOS

	! LINHA 00.00
		R_GEEX0000_CODEXC(tCODEXC0000)
		R_GEEX0000_SEPEXC(tSEPEXC0000)
		R_GEEX0000_SCOEXC(tSCOEXC0000)
		R_GEEX0000_TRTEXC(tTRTEXC0000)
		R_GEEX0000_EMTEXC(tEMTEXC0000)
		R_GEEX0000_RCTEXC(tRCTEXC0000)
		R_GEEX0000_DATEXC(tDATEXC0000)
		R_GEEX0000_HEUEXC(tHEUEXC0000)
		R_GEEX0000_NUMEXC(tNUMEXC0000)
		R_GEEX0000_ACQEXC(tACQEXC0000)
		R_GEEX0000_VEREXC(tVEREXC0000)
		R_GEEX0000_NOMSYS(tNOMSYS0000)
		R_GEEX0000_NOMDTQ(tNOMDTQ0000)
		R_GEEX0000_BIBDTQ(tBIBDTQ0000)
		R_GEEX0000_LIBEXC(tLIBEXC0000)
		R_GEEX0000_BIBDST(tBIBDST0000)
		R_GEEX0000_PGMDST(tPGMDST0000)
		R_GEEX0000_PARDST(tPARDST0000)
		R_GEEX0000_CODACT(tCODACT0000)
		R_GEEX0000_IGLSIT(tIGLSIT0000)
		R_GEEX0000_EDISIT(tEDISIT0000)
		R_GEEX0000_IMAEXC(tIMAEXC0000)
		R_GEEX0000_IDEMSG(tIDEMSG0000)
		R_GEEX0000_NATEXC(tNATEXC0000)
		R_GEEX0000_EMTORI(tEMTORI0000)
		R_GEEX0000_DISEXC(tDISEXC0000)
		
		flush(0,0,NL) >> tFileOutTemp
	! FIM LINHA 00.00

    ! LINHA 59.50
        R_GEEX5950_BP_CODEXC(S_GEEX5950_BP_CODEXC)
        R_GEEX5950_BP_SEPEXC(S_GEEX5950_BP_SEPEXC)
        R_GEEX5950_BP_SCOEXC(S_GEEX5950_BP_SCOEXC)
        R_GEEX5950_BP_TRTEXC(S_GEEX5950_BP_TRTEXC)
        R_GEEX5950_BP_NUMSUP(S_GEEX5950_BP_NUMSUP)
        R_GEEX5950_BP_SNUSUP(S_GEEX5950_BP_SNUSUP)
        R_GEEX5950_BP_TYPSUP(S_GEEX5950_BP_TYPSUP)
        R_GEEX5950_BP_ETASUP(S_GEEX5950_BP_ETASUP)
        R_GEEX5950_BP_TOPMNQ(S_GEEX5950_BP_TOPMNQ)
        R_GEEX5950_BP_LIBSUP(S_GEEX5950_BP_LIBSUP)
        R_GEEX5950_BP_CODEMB(S_GEEX5950_BP_CODEMB)
        R_GEEX5950_BP_DATPRP(S_GEEX5950_BP_DATPRP)
        R_GEEX5950_BP_NUMVAG(S_GEEX5950_BP_NUMVAG)
        R_GEEX5950_BP_NUMTOU(S_GEEX5950_BP_NUMTOU)
        R_GEEX5950_BP_DATLIV(S_GEEX5950_BP_DATLIV)
        R_GEEX5950_BP_TOULIV(S_GEEX5950_BP_TOULIV)
        R_GEEX5950_BP_ORDLIV(S_GEEX5950_BP_ORDLIV)
        R_GEEX5950_BP_KAILIV(S_GEEX5950_BP_KAILIV)
        R_GEEX5950_BP_NUMLIV(S_GEEX5950_BP_NUMLIV)
        R_GEEX5950_BP_SNULIV(S_GEEX5950_BP_SNULIV)
        R_GEEX5950_BP_REFLIV(S_GEEX5950_BP_REFLIV)
        R_GEEX5950_BP_CLILIV(S_GEEX5950_BP_CLILIV)
        R_GEEX5950_BP_CUMPOI(S_GEEX5950_BP_CUMPOI)
        R_GEEX5950_BP_CUMVOL(S_GEEX5950_BP_CUMVOL)
        R_GEEX5950_BP_CODACT(S_GEEX5950_BP_CODACT)
        R_GEEX5950_BP_CIRPIC(S_GEEX5950_BP_CIRPIC)
        R_GEEX5950_BP_REFMIT(S_GEEX5950_BP_REFMIT)
        R_GEEX5950_BP_DATCRE(S_GEEX5950_BP_DATCRE)
        R_GEEX5950_BP_NUMSUG(S_GEEX5950_BP_NUMSUG)
        R_GEEX5950_BP_SNUSUG(S_GEEX5950_BP_SNUSUG)
        R_GEEX5950_BP_SURTPT(S_GEEX5950_BP_SURTPT)
        R_GEEX5950_BP_TOPPAQ(S_GEEX5950_BP_TOPPAQ)
        R_GEEX5950_BP_CODLDE(S_GEEX5950_BP_CODLDE)
        R_GEEX5950_BP_NUMCMP(S_GEEX5950_BP_NUMCMP)
        R_GEEX5950_BP_SNUCMP(S_GEEX5950_BP_SNUCMP)
        R_GEEX5950_BP_TOPRCN(S_GEEX5950_BP_TOPRCN)
        R_GEEX5950_BP_DISEXC(S_GEEX5950_BP_DISEXC)
        R_GEEX5950_BP_NUMMIT("00000000")
        R_GEEX5950_BP_INDMMI("0")
        R_GEEX5950_BP_ETAMIT("00")
        R_GEEX5950_BP_CUMSU1("000")
        R_GEEX5950_BP_CUMSU2("000")
        R_GEEX5950_BP_CUMSU3("000")
        R_GEEX5950_BP_CUMSU4("000")
        R_GEEX5950_BP_CUMSUP("000")
    ! FIM LINHA 59.50

    ! VERIFICA SE JA TEM TRACER E SE JA PERTENCE A UMA MISSAO
        if S_GEEX5950_BP_NUMTOU = "99999999" then
            TRACE := find(build(sHOME,"/trace") \
                            ,MENSAGEM=tMensagem \
                            ,PERFIL=tToInfologPrefixFilename \
                            ,NUMDOC=tNUMSUP \
                            )dINDEX
            if valid(TRACE) then !and TRACE.LIBEXC = tNUMVAG and S_GEEX9750_ETALIV = "30" then
                log("TRACE: ", TRACE.INDEX, NL)
                if TRACE.LIBEXC <> "99999999" then
                    tNUMMIT := TRACE.LIBEXC
		            log("NUMMIT: ",tNUMMIT,NL)
                    log("Exclusao de rota.", NL)
                    R_GEEX5950_BP_NUMMIT(TRACE.LIBEXC)
                    R_GEEX5950_BP_INDMMI("2")
                else
                    R_GEEX5950_BP_INDMMI("0")
                endif
            else 
                log("Primeiro TRACE.", NL)
                R_GEEX5950_BP_INDMMI("2")
            endif
        else
            TRACE := find(build(sHOME,"/trace") \
                            ,MENSAGEM=tMensagem \
                            ,PERFIL=tToInfologPrefixFilename \
                            ,NUMDOC=tNUMSUP \
                            )dLIBEXC
            if valid(TRACE) then !and TRACE.LIBEXC = tNUMVAG and S_GEEX9750_ETALIV = "30" then
                log("TRACE: ", TRACE.INDEX, NL)
                if S_GEEX5950_BP_NUMTOU = TRACE.LIBEXC then
                    log("Mesma rota.", NL)
                    R_GEEX5950_BP_INDMMI("0")
                else
                    log("Inclusão de rota", NL)
                    R_GEEX5950_BP_INDMMI("1")
                endif
            else 
                log("Primeiro TRACE.", NL)
                R_GEEX5950_BP_INDMMI("0")
            endif
        endif
    ! FIM VERIFICA SE JA TEM TRACER E SE JA PERTENCE A UMA MISSAO

    ! SQL COMPLEMENTO
        tQuery := build("SELECT", NL," "\
                        "	 MT.NUMMIT", NL," "\
                        "	,MT.ETAMIT", NL," "\
                        "	,SUM(CASE ETASUP WHEN '10' THEN 1 ELSE 0 END) AS SUPE10", NL," "\
                        "	,SUM(CASE ETASUP WHEN '20' THEN 1 ELSE 0 END) AS SUPE20", NL," "\
                        "	,SUM(CASE ETASUP WHEN '30' THEN 1 ELSE 0 END) AS SUPE30", NL," "\
                        "	,SUM(CASE ETASUP WHEN '40' THEN 1 ELSE 0 END) AS SUPE40", NL," "\
                        "	,COUNT(NUMSUP)                                AS CUMSUP", NL," "\
                        "FROM ",tAmbiente,".GEMITS  AS MT", NL," "\
                        "JOIN ",tAmbiente,".GESUPE  AS SE ", NL," "\
                        " ON MT.NUMTOU = SE.NUMTOU", NL," "\
                        "WHERE MT.NUMTOU = ",tNUMMIT, NL," "\
                        "GROUP BY ", NL," "\
                        "	 MT.NUMMIT", NL," "\
                        "	,MT.ETAMIT", "")   

        log("------------------------------------------------------------", NL)
        log("tQuery: ", NL, tQuery,NL)
        log("------------------------------------------------------------", NL)

        if bfSqlSet( tDbBase, "SELECTdb2", tQuery) = FALSE then
            bfSqlErro()
            exit(1)	
        endif

        if bfSqlOpen( tDbBase, "SELECTdb2") = FALSE then
            bfSqlErro()
            exit(1)	
        endif

        while bfSqlFetchArray( tDbBase, "SELECTdb2", taDb2Array) = TRUE do
            R_GEEX5950_BP_NUMMIT(taDb2Array["NUMMIT"])
            R_GEEX5950_BP_ETAMIT(taDb2Array["ETAMIT"])
            R_GEEX5950_BP_CUMSU1(taDb2Array["SUPE10"])
            R_GEEX5950_BP_CUMSU2(taDb2Array["SUPE20"])
            R_GEEX5950_BP_CUMSU3(taDb2Array["SUPE30"])
            R_GEEX5950_BP_CUMSU4(taDb2Array["SUPE40"])
            R_GEEX5950_BP_CUMSUP(taDb2Array["CUMSUP"])
            remove(taDb2Array)
        endwhile

        if bfSqlFree( tDbBase, "SELECTdb2") = FALSE then
            bfSqlErro()
            exit(1)	
        endif
    ! FIM SQL COMPLEMENTO

    flush(0,0,NL) >> tFileOutTemp
    nContadorLinhasEscritas++

    !ESCRITA 9900
        R_GEEX9900_BP_CODEXC("99")
        R_GEEX9900_BP_SEPEXC(".")
        R_GEEX9900_BP_SCOEXC("00")
        R_GEEX9900_BP_DATEXC(time("now" ,"%Y%m%d"))
        R_GEEX9900_BP_HEUEXC(time("now" ,"%H%M%S"))
        R_GEEX9900_BP_NUMEXC("0000000")
        R_GEEX9900_BP_CPTEXC(build(nContLinhasEscritas))

        flush(0,0,NL) >> tFileOutTemp
    !FIM ESCRITA 9900

    ! TRATAMENTO FINAL DOS ARQUIVOS
        close(tFileOutTemp)
        copy(tFileOutTemp,tFileOut)
        close(tFileOutTemp)
        remove(tFileOutTemp)
        close(tFileOut)
    ! FIM TRATAMENTO FINAL DOS ARQUIVOS

    ! TRACE
        bfMajtrace(	"Recebida" \
                    ,"0" \
                    ,tNumeroDocumento \
                    ,tDataDocumento \
                    ,tFileInput \
                    ,tFileOut \
                    ,tMensagem \
                    ,"" \
                )
    ! FIM TRACE

    ! Enviar interface para o cliente
        tCmd := build("edisend APIPASS_SFTP ", tFileOut)
        log("executando o comando - ", tCmd, NL)
        system(tCmd)

endline

!==============================================================================

! Default statements section
default

enddefault

!==============================================================================

! End statements section
end

	bfSqlClose(tDbBase)
	log("------------------------------------------------------------", NL)
	log("Fim...: ", time("now","%Y-%m-%d %H:%M:%S"), NL)
	log("------------------------------------------------------------", NL)

endend

!==============================================================================

function bfMajtrace(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErro)
	TRACE:=new(build(sHOME,"/trace"))
	TRACE.ESTADO := tStatus
	TRACE.ERRO := tError
	TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
	TRACE.PERFIL := tPerfil
	TRACE.SENTIDO := tSentido
	TRACE.MENSAGEM := tMensagem
	TRACE.NUMDOC := tNumDoc
	TRACE.DATDOC := tDataDoc
	TRACE.MESSAGEID := build(nMessageID:R010)
	TRACE.LIBEXC := tNUMTOU
	if pEDISEND.ORIGINAL.NAME <> build(SYSLOG.INDEX) then
		TRACE.REDE := pEDISEND.ORIGINAL.NAME
	else
		TRACE.REDE := "REPROCESSADO"
	endif
	TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
	TRACE.FICHEIROSAIDA := tNameOut

	SYSLOG.REFERENCE := tREFLIV

	if tStatus = "Recebida" then
		print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
		print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
		print("Traduzida com Sucesso",NL) >> TRACE.Detail
	else
		if tStatus = "Erro de Traducao" then
			print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
			print("Erro de Traducao",NL) >> TRACE.Detail
			print(tMensagemErro,NL) >> TRACE.Detail	   
		endif
	endif
	close(TRACE.Detail)
	close(SYSLOG.a)

	copy(SYSLOG.a,TRACE.In)
	close(SYSLOG.a)
	close(TRACE.In)
	flush(TRACE)

	if tError="0" then
		close(tFileOut)
		copy(tFileOut,TRACE.Out)
		close(tFileOut)
		close(TRACE.Out)
	endif

	flush(TRACE)
endfunction

!==============================================================================

function bfSqlErro()
    print("FATAL: ",tfSqlErrorStr())
    bfMajtrace(	"Erro de Traducao" \
                ,"1" \
                ,tNumeroDocumento \
                ,tDataDocumento \
                ,tFileInput \
                ,tFileOut \
                ,tMensagem \
                ,build("Erro na abertura do banco de dados: ",tfSqlErrorStr()))     
endfunction

!==============================================================================
