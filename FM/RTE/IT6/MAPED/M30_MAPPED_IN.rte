%@(#) $Id:  M30_MAPED_CRMAT_IN.rte,v 1.2 2020/04/23 17:02:20 gmt Exp $
!===========================================================================================================
% File         : $RCSfile: M30_MAPED_CRMAT_IN.rte $   $Revision: 1.2 $
!-----------------------------------------------------------------------------------------------------------
% Description   : M30_MAPED_CRMAT_IN
!-----------------------------------------------------------------------------------------------------------
% Author        : GMT - GENERIX BR
!===========================================================================================================
! 2020/04/23 GMT 1.2 Creation
!===========================================================================================================
!
! M30_MAPED_CRMAT_IN
!
!===========================================================================================================

base "syslog.cfg" SYSLOG
base "../trace/trace.cfg" TRACE,autoflush off
 
!===========================================================

! Input/output macros file
#include "include/ProdutosMAPPED.inc"
#include "include/M30.inc"
#define PROG_NAME "$RCSfile: $"
#define PROG_VER  "$Revision: $"
#define PROG_DATE "$Date: $"
#define PROG_INFO build(PROG_NAME,PROG_VER,PROG_DATE)
#define TX_PROG_INFO build(PROG_NAME,PROG_VER,PROG_DATE)
!===========================================================

! Initialization section

begin
	!PROCESS_ERRONEOUS := TRUE
	nPos := 1
	nRec := 1
	SYSLOG := find(sSYSLOG,INDEX=number(pINDEX))
	nMessageID := cMessageID

	load (0, build(sHOME,"/config/FM_wms_configuration.properties"), taPARAM)

	tToInfologPrefixFilename := taPARAM["ToInfologPrefixFilenameMAPED"]  

	nNumeroLinha := 0
	tCODACTConst := "MAP"
	nContadorLinhasEscritas  := 0
	tANAPRO := ""
	tNomeMaterialPT := ""
	tNBJFVI := ""
	tNBJDLV := ""
	tSECDLV := ""
	bFazM30 := FALSE

	tFileOut := build(sHOME,"/ToInfolog/",tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
	tFileOutTemp := build(sHOME,"/ToInfolog/Temp/",tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
	!tFileOut := build(sHOME,"/rte/",tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
	tNameOut := build(tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
	nContadorProdutos := 0
endbegin

!===========================================================

line(1:"06")
	if S_MONO_CodigoDepositante = "05317331000416" then
		bFazM30 := TRUE
		nContadorProdutos++
		taCODACT[nContadorProdutos] := "MAP"
		taFOUPRO[nContadorProdutos] := S_MONO_CodigoDepositante
		taCODPRO[nContadorProdutos] := S_MONO_CodigoProduto
		taDS1PRO[nContadorProdutos] := S_MONO_Descricao
		taFAMPRO[nContadorProdutos] := S_MONO_CodigoGrupo
		taLNGUVC2[nContadorProdutos] := S_MONO_Comprimento
		taLRGUVC2[nContadorProdutos] := S_MONO_Largura
		taHAUUVC2[nContadorProdutos] := S_MONO_Altura
		taPDNUVC[nContadorProdutos] := S_MONO_PesoLiquido
		taPDBUVC[nContadorProdutos] := S_MONO_PesoBruto
		taCodigoBarras[nContadorProdutos] := S_MONO_CodigoBarras
		taUNIPRO[nContadorProdutos] := S_MONO_PrimUOM
		taSPCPRO[nContadorProdutos] := S_MONO_QtdInnerSegUOM
		taPCBPRO[nContadorProdutos] := S_MONO_QtdMasterTerUOM
		taCodigoBarrasInner[nContadorProdutos] := S_MONO_CodigoBarrasInner
		taPCBPRO[nContadorProdutos] := S_MONO_QtdMasterTerUOM
		taLRGSPC2[nContadorProdutos] := S_MONO_LarguraINNER
		taLNGSPC2[nContadorProdutos] := S_MONO_ComprimentoINNER
		taHAUSPC2[nContadorProdutos] := S_MONO_AlturaINNER
		taPDBSPC[nContadorProdutos] := S_MONO_PesoBrutoINNER
		taLRGCOL2[nContadorProdutos] := S_MONO_LarguraMaster
		taLNGCOL2[nContadorProdutos] := S_MONO_ComprimentoMaster
		taHAUCOU2[nContadorProdutos] := S_MONO_AlturaMaster 
		taHAUCOL2[nContadorProdutos] := S_MONO_AlturaMaster 
		taPDBCOL[nContadorProdutos] := S_MONO_PesoBrutoMaster
		taCodigoBarrasMaster[nContadorProdutos] :=  S_MONO_CodigoBarrasMaster
	endif
endline

!===========================================================

! End statements section

end
	if bFazM30 = TRUE then
		if nContadorLinhasEscritas = 0 then
			R_00HEADER_CODEXC("00")
			R_00HEADER_SEPEXC(".")
			R_00HEADER_SCOEXC("00")
			R_00HEADER_TRTEXC("")
			R_00HEADER_EMTEXC("FM") 
			R_00HEADER_RCTEXC("")
			R_00HEADER_DATEXC(time("now" ,"%Y%m%d"))
			R_00HEADER_HEUEXC(time("now" ,"%H%M%S"))
			R_00HEADER_NUMEXC("0000000")
			R_00HEADER_ACQEXC("0")
			R_00HEADER_VEREXC("5.00") 
			R_00HEADER_NOMSYS("")  
			R_00HEADER_NOMDTQ("M30")
			R_00HEADER_BIBDTQ("")
			R_00HEADER_LIBEXC(build(nMessageID:R010))
			R_00HEADER_BIBDST("")
			R_00HEADER_PGMDST("")
			R_00HEADER_PARDST("")
			R_00HEADER_CODACT("")
			R_00HEADER_IGLSIT("")
			R_00HEADER_EDISIT(build(number(tCentro_De_Custo)))
			R_00HEADER_IMAEXC("")  
			R_00HEADER_DISEXC("")
			
			flush(0,0,NL) >> tFileOutTemp
		endif
		   
		nTempContadorProdutos := 1
		
		while nTempContadorProdutos <= nContadorProdutos do	
			R_30PRODUCTINFORMATION_CODEXC("30")
			R_30PRODUCTINFORMATION_SEPEXC(".")
			R_30PRODUCTINFORMATION_SCOEXC("00")
			R_30PRODUCTINFORMATION_TRTEXC(tTRTEXC)
			R_30PRODUCTINFORMATION_CODACT(taCODACT[nTempContadorProdutos]) 
			R_30PRODUCTINFORMATION_CODPRO(taFOUPRO[nTempContadorProdutos]) 				   
			R_30PRODUCTINFORMATION_CODPRO(taCODPRO[nTempContadorProdutos])  
			R_30PRODUCTINFORMATION_DS1PRO(substr(taDS1PRO[nTempContadorProdutos],1,30))
			R_30PRODUCTINFORMATION_DS2PRO(substr(taDS1PRO[nTempContadorProdutos],31,10))
			R_30PRODUCTINFORMATION_PCBPRO(build(number(taPCBPRO[nTempContadorProdutos]):R05))
			R_30PRODUCTINFORMATION_UNIPRO(taUNIPRO[nTempContadorProdutos])
			taPDBCOL[nTempContadorProdutos] := build(number(taPDBCOL[nTempContadorProdutos])/10)
			R_30PRODUCTINFORMATION_PDBCOL(build(number(taPDBCOL[nTempContadorProdutos]):R07)) 
			R_30PRODUCTINFORMATION_FAMPRO(taFAMPRO[nTempContadorProdutos])
			R_30PRODUCTINFORMATION_ZONPRF("G")
			R_30PRODUCTINFORMATION_ALLPRF("")
			R_30PRODUCTINFORMATION_CODMDR("STD")
			R_30PRODUCTINFORMATION_CODMDS("STD")
			taPDNUVC[nTempContadorProdutos] := build(number(taPDNUVC[nTempContadorProdutos])/10)
			R_30PRODUCTINFORMATION_PDNUVC(taPDNUVC[nTempContadorProdutos])
			taPDBUVC[nTempContadorProdutos] := build(number(taPDBUVC[nTempContadorProdutos])/10)
			R_30PRODUCTINFORMATION_PDBUVC(taPDBUVC[nTempContadorProdutos])
			R_30PRODUCTINFORMATION_SPCPRO(taSPCPRO[nTempContadorProdutos])
			taCOLCOU2[nTempContadorProdutos] := build(number(taCOLCOU2[nTempContadorProdutos]) / 100)
			R_30PRODUCTINFORMATION_COLCOU2(build(number(taCOLCOU2[nTempContadorProdutos]):04))

			
			nContadorLinhasEscritas++
			flush(0,0,NL) >> tFileOutTemp

			R_3001_CODEXC("30")
			R_3001_SEPEXC(".")
			R_3001_SCOEXC("01") 
			R_3001_TRTEXC(tTRTEXC)
			R_3001_CODACT(taCODACT[nTempContadorProdutos])
			R_3001_CODPRO(taCODPRO[nTempContadorProdutos])
			R_3001_CODMRQ(taCODMRQ[nTempContadorProdutos])
			R_3001_CIRDET("000")
			
			nContadorLinhasEscritas++
			flush(0,0,NL) >> tFileOutTemp

			R_GEEX3002_CODEXC("30")
			R_GEEX3002_SEPEXC(".")
			R_GEEX3002_SCOEXC("02") 
			R_GEEX3002_TRTEXC(tTRTEXC)
			R_GEEX3002_CODACT(taCODACT[nTempContadorProdutos])
			R_GEEX3002_CODPRO(taCODPRO[nTempContadorProdutos])

			taHAUUVC2[nTempContadorProdutos] := build(number(taHAUUVC2[nTempContadorProdutos]) / 100)
			R_GEEX3002_HAUUVC2(build(number(taHAUUVC2[nTempContadorProdutos]):05))
			
			taLNGUVC2[nTempContadorProdutos] := build(number(taLNGUVC2[nTempContadorProdutos])  / 100)
			R_GEEX3002_LNGUVC2(build(number(taLNGUVC2[nTempContadorProdutos]):05))
			
			taLRGUVC2[nTempContadorProdutos] := build(number(taLRGUVC2[nTempContadorProdutos]) / 100)
			R_GEEX3002_LRGUVC2(build(number(taLRGUVC2[nTempContadorProdutos]):05))
			
			taHAUSPC2[nTempContadorProdutos] := build(number(taHAUSPC2[nTempContadorProdutos]) / 100)
			R_GEEX3002_HAUSPC2(build(number(taHAUSPC2[nTempContadorProdutos]):05))
			
			taLRGSPC2[nTempContadorProdutos] := build(number(taLRGSPC2[nTempContadorProdutos]) / 100)
			R_GEEX3002_LRGSPC2(build(number(taLRGSPC2[nTempContadorProdutos]):05))
			
			taLNGSPC2[nTempContadorProdutos] := build(number(taLNGSPC2[nTempContadorProdutos]) / 100)
			R_GEEX3002_LNGSPC2(build(number(taLNGSPC2[nTempContadorProdutos]):05))

			taPDBSPC[nTempContadorProdutos] := build(number(taPDBSPC[nTempContadorProdutos]) / 10)
			R_GEEX3002_PDBSPC(build(number(taPDBSPC[nTempContadorProdutos]):05))
			
			taHAUCOL2[nTempContadorProdutos] := build(number(taHAUCOL2[nTempContadorProdutos]) / 100)
			R_GEEX3002_HAUCOL2(build(number(taHAUCOL2[nTempContadorProdutos]):05))
			R_GEEX3002_HAUCOU2(build(number(taHAUCOL2[nTempContadorProdutos]):05))
						
			taLRGCOL2[nTempContadorProdutos] := build(number(taLRGCOL2[nTempContadorProdutos])  / 100)
			R_GEEX3002_LRGCOL2(build(number(taLRGCOL2[nTempContadorProdutos]):05))

			taLNGCOL2[nTempContadorProdutos] := build(number(taLNGCOL2[nTempContadorProdutos])  / 100)
			R_GEEX3002_LNGCOL2(build(number(taLNGCOL2[nTempContadorProdutos]):05))

			R_GEEX3002_CODMNN("   ")
			
			nContadorLinhasEscritas++
			flush(0,0,NL) >> tFileOutTemp

			if length(taCodigoBarras[nTempContadorProdutos]) > 0 then
				R_30EANINFORMATION_CODEXC("30")
				R_30EANINFORMATION_SEPEXC(".")
				R_30EANINFORMATION_SCOEXC("20")
				R_30EANINFORMATION_TRTEXC(tTRTEXC)
				R_30EANINFORMATION_CODACT(taCODACT[nTempContadorProdutos]) 
				R_30EANINFORMATION_CODPRO(taCODPRO[nTempContadorProdutos])
				R_30EANINFORMATION_EDIPRO(taCodigoBarras[nTempContadorProdutos])
				R_30EANINFORMATION_EDIPRN("0")
				R_30EANINFORMATION_EDIQLF("0")
				R_30EANINFORMATION_DS1PRO(substr(taDS1PRO[nTempContadorProdutos],1,30))
				R_30EANINFORMATION_EANDS1("EAN13")
				
				nContadorLinhasEscritas++
				flush(0,0,NL) >> tFileOutTemp 
			endif

			if length(taCodigoBarrasInner[nTempContadorProdutos]) > 0 then
				R_30EANINFORMATION_CODEXC("30")
				R_30EANINFORMATION_SEPEXC(".")
				R_30EANINFORMATION_SCOEXC("20")
				R_30EANINFORMATION_TRTEXC(tTRTEXC)
				R_30EANINFORMATION_CODACT(taCODACT[nTempContadorProdutos]) 
				R_30EANINFORMATION_CODPRO(taCODPRO[nTempContadorProdutos])
				R_30EANINFORMATION_EDIPRO(taCodigoBarrasInner[nTempContadorProdutos])
				R_30EANINFORMATION_EDIPRN("0")
				R_30EANINFORMATION_EDIQLF("2")
				R_30EANINFORMATION_DS1PRO(substr(taDS1PRO[nTempContadorProdutos],1,30))
				R_30EANINFORMATION_EANDS1("EAN13")

				nContadorLinhasEscritas++
				flush(0,0,NL) >> tFileOutTemp 
			endif
					
			if length(taCodigoBarrasMaster[nTempContadorProdutos]) > 0 then
				R_30EANINFORMATION_CODEXC("30")
				R_30EANINFORMATION_SEPEXC(".")
				R_30EANINFORMATION_SCOEXC("20")
				R_30EANINFORMATION_TRTEXC(tTRTEXC)
				R_30EANINFORMATION_CODACT(taCODACT[nTempContadorProdutos]) 
				R_30EANINFORMATION_CODPRO(taCODPRO[nTempContadorProdutos])
				R_30EANINFORMATION_EDIPRO(taCodigoBarrasMaster[nTempContadorProdutos])
				R_30EANINFORMATION_EDIPRN("1")
				R_30EANINFORMATION_EDIQLF("3")
				R_30EANINFORMATION_DS1PRO(substr(taDS1PRO[nTempContadorProdutos],1,30))
				R_30EANINFORMATION_EANDS1("DUN14")

				nContadorLinhasEscritas++
				flush(0,0,NL) >> tFileOutTemp 
			endif
			nTempContadorProdutos++
		endwhile

		R_99FILEFOOTER_CODEXC("99")
		R_99FILEFOOTER_SEPEXC(".")
		R_99FILEFOOTER_SCOEXC("00")
		R_99FILEFOOTER_TRTEXC("")
		R_99FILEFOOTER_EMTEXC("FM")
		R_99FILEFOOTER_RCTEXC("")
		R_99FILEFOOTER_DATEXC(time("now" ,"%Y%m%d"))
		R_99FILEFOOTER_HEUEXC(time("now" ,"H%M%S"))
		R_99FILEFOOTER_NUMEXC("")
		tContadorLinhasEscritas := build(nContadorLinhasEscritas)
		R_99FILEFOOTER_CPTEXC(build(number(tContadorLinhasEscritas):R08.0))

		flush(0,0,NL)  >> tFileOutTemp
		close(tFileOutTemp)

		copy(tFileOutTemp,tFileOut)
		close(tFileOutTemp)
		remove(tFileOutTemp)
		close(tFileOut)

		bfMajtrace("Recebida","0",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos","")
	endif
	exit(0)
endend

!===========================================================

function bfMajtrace(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
	TRACE:=new(build(sHOME,"/trace"))
	TRACE.ESTADO := tStatus
	TRACE.ERRO := tError
	TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
	TRACE.MENSAGEM := tTipoDocumento
	TRACE.PERFIL := "MAPED"
	TRACE.SENTIDO := "I"
	TRACE.MENSAGEM := "PRODUTOS"
	TRACE.NUMDOC := time("now","%Y-%m-%d")
	TRACE.DATDOC := time("now","%Y-%m-%d")
	TRACE.MESSAGEID := build(nMessageID:R010)   
	TRACE.REDE := pEDISEND.ORIGINAL.NAME
	TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
	TRACE.FICHEIROSAIDA := tNameOut

	if tStatus = "Recebida" then
		print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
		print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
		print("Traduzida com Sucesso",NL) >> TRACE.Detail
	else
		if tStatus = "Erro de Traducao" then
			print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
			print("Erro de Traducao",NL) >> TRACE.Detail
			print(tMensagemErrro,NL) >> TRACE.Detail
		endif
	endif

	close(TRACE.Detail)
	close(SYSLOG.a)
	copy(SYSLOG.a,TRACE.In)
	close(SYSLOG.a)
	close(TRACE.In)

	if tError="0" then
		copy(tFileOut,TRACE.Out)
		close(tFileOut)
		close(TRACE.Out)
	endif
		flush(TRACE)
endfunction

!===========================================================

function nfRetornaMenorValor(nContComprimento,nContAltura,nContLargura )
	if nContComprimento <= nContAltura and nContComprimento <= nContLargura then 
		return nContComprimento
	else
		if nContAltura <= nContComprimento  and nContAltura <= nContLargura then 
			return nContAltura 
		else
			if nContLargura <= nContComprimento  and nContLargura  <= nContAltura then 
				return nContLargura 
			endif
		endif
	endif
endfunction
