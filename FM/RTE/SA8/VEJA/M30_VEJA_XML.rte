%@(#)  M30_VEJA_XML.rte.rte     modif:27/11/2023
!==============================================================================
% File          : M30_VEJA_XML.rte.rte   version 1.0
!------------------------------------------------------------------------------
% Description   : <short program description>
!------------------------------------------------------------------------------
% Author        : <developer name> - COMPANY
!==============================================================================
! 27/11/2023  XX  Creation
! 27/11/2023  XX  <comments>
!==============================================================================
!
! <detailed program description>
!
!==============================================================================
! input file     : <name or rule for naming input file>
! output file    : <name or rule for naming output file> 
! temporary file : <name or rule for naming temporary file> 
!==============================================================================

! Message definition
message "XML/FMBrasil/VEJA/VEJA_M30.dtd" receiving

base "../trace/trace.cfg" TRACE
#define TX_PROG_INFO "M30_VEJA_XML"

#include "include/generix_func.inc"
#include "include/GEEXM30.inc"

!===========================================================

! Initialization section

begin
	SYSLOG := find(sSYSLOG,INDEX=number(pINDEX))
	nMainIndex := 0
	PROCESS_ERRONEOUS := TRUE
	pXML.INCONVIN := "UTF-8"
	pXML.INCOVIN := "UTF-8"
	pXML.ENCODING := "UTF-8"
	nMessageID := cMessageID

	nPos := 1
	nRec := 1

	load(0, build(sHOME,"/config/FM_wms_configuration.properties"), taPARAM)
	tToInfologPrefixFilename := taPARAM["ToInfologPrefixFilenameSA8"]

	tDbBase		:= "FMWMS"
	tDbUsername	:= taPARAM["WMSDBUSER"]
	tDbPassword	:= taPARAM["WMSDBPASS"]
	tDbUrl		:= taPARAM["WMSDBURL"]

    bfSqlInit()
	if not bfSqlJdbc(tDbBase, tDbUsername, tDbPassword, tDbUrl) then
		print("FATAL ",tfSqlErrorStr())
		bfSqlClose(tDbBase)
		bfMajtrace("Erro de Traducao", \
                    "1", \
                    "", \
                    time("now","%Y-%m-%d"), \
                    tFileOut, \
                    build("Erro na abertura do banco de dados: ",tfSqlErrorStr()))
		exit(1)
	endif

    tFileOut := build(sHOME,"/ToInfolog/",tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
    tFileOutTemp := build(sHOME,"/ToInfolog/Temp/",tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
    tNameOut := build(tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")

    nCountSku := 0
    tCODACT := "VEJ"
endbegin

!===========================================================

segment Ssku gGcatalog,gGcatalog_body,gGsku
    nCountSku++
endsegment

segment Scolor gGcatalog,gGcatalog_body,gGsku
    taDS3PRO[nCountSku] := eEcolor
endsegment

segment Ssize gGcatalog,gGcatalog_body,gGsku
    taANAPRO[nCountSku] := build("BR: ", eEsize)
    taCODMRQ[nCountSku] := build("EUR:", number(eEsize) + 2)
endsegment

segment Sbarcode_sku gGcatalog,gGcatalog_body,gGsku
    taCODPRO[nCountSku] := eEbarcode_sku
endsegment

segment Sbarcode_ean gGcatalog,gGcatalog_body,gGsku
    taEDIPRO[nCountSku] := eEbarcode_ean
    taEDIPRM[nCountSku] := "1"
    taEDIQLF[nCountSku] := "0"
endsegment

segment Swholesale_price gGcatalog,gGcatalog_body,gGsku
    taPRXPRO1[nCountSku] := eEwholesale_price
endsegment

segment Sretail_price gGcatalog,gGcatalog_body,gGsku
    taPRXPRO2[nCountSku] := eEretail_price
endsegment

segment Senglish_description gGcatalog,gGcatalog_body,gGsku
    taDS1PRO_DS2PRO[nCountSku] := eEenglish_description
endsegment

segment Snrf_color gGcatalog,gGcatalog_body,gGsku
    taDS3PRO[nCountSku] := build("Color:", eEnrf_color, " ", taDS3PRO[nCountSku])
endsegment

segment Sproduct_id gGcatalog,gGcatalog_body,gGsku
    taFAMPRO[nCountSku] := eEproduct_id
endsegment

segment Scatalog_provider gGcatalog,gGcatalog_body,gGsku
    taDESFOU[nCountSku] := eEcatalog_provider
endsegment

segment Sselection_code gGcatalog,gGcatalog_body,gGsku
    taDESFOU[nCountSku] := build("Cat:", taDESFOU[nCountSku], " - ", eEselection_code)
endsegment

segment Sgross_weight gGcatalog,gGcatalog_body,gGsku
    taPDBUVC[nCountSku] := eEgross_weight
endsegment

segment Snet_weight gGcatalog,gGcatalog_body,gGsku
    taPDNUVC[nCountSku] := eEnet_weight
endsegment

segment Slength gGcatalog,gGcatalog_body,gGsku
    taLNGUVC[nCountSku] := substr(eElength, 1, index(eElength, ".") - 1)
endsegment

segment Swidth gGcatalog,gGcatalog_body,gGsku
    taLRGUVC[nCountSku] := substr(eEwidth, 1, index(eEwidth, ".") - 1)
endsegment

segment Sheight gGcatalog,gGcatalog_body,gGsku
    taHAUUVC[nCountSku] := eEheight
endsegment


! Default statements section
default

enddefault

!===========================================================

! End statements section

end
    log("Foram encontrados ", nCountSku, " produtos", NL, NL)

    R_GEEX0000_CODEXC("00")
    R_GEEX0000_SEPEXC(".")
    R_GEEX0000_SCOEXC("00")
    R_GEEX0000_EMTEXC("FM") 
    R_GEEX0000_DATEXC(time("now" ,"%Y%m%d"))
    R_GEEX0000_HEUEXC(time("now" ,"%H%M%S"))
    R_GEEX0000_NUMEXC("0000000")
    R_GEEX0000_ACQEXC("0")
    R_GEEX0000_VEREXC("5.00") 
    R_GEEX0000_NOMDTQ("M40")
    R_GEEX0000_LIBEXC(build(nMessageID:R010))

    flush(0,0,NL) >> tFileOutTemp

    nCountLine := 0
    while nCountLine < nCountSku do
        nCountLine++

        R_GEEX3000_CODEXC("30")
        R_GEEX3000_SEPEXC(".")
        R_GEEX3000_SCOEXC("00")
        R_GEEX3000_CODACT(tCODACT)
        R_GEEX3000_TRTEXC("2")
        if length(taDS1PRO_DS2PRO[nCountLine]) > 30 then
            R_GEEX3000_DS1PRO(substr(taDS1PRO_DS2PRO[nCountLine], 1, 30))
            R_GEEX3000_DS2PRO(substr(taDS1PRO_DS2PRO[nCountLine], 31, EOL))
        else
            R_GEEX3000_DS1PRO(taDS1PRO_DS2PRO[nCountLine])
        endif
        R_GEEX3000_CODPRO(taCODPRO[nCountLine])
        R_GEEX3000_EDIPRO(taEDIPRO[nCountLine])
        R_GEEX3000_FAMPRO(taFAMPRO[nCountLine])
        R_GEEX3000_ANAPRO(taANAPRO[nCountLine])
        R_GEEX3000_PDBUVC(strip(taPDBUVC[nCountLine], "."))
        R_GEEX3000_PDNUVC(strip(taPDNUVC[nCountLine], "."))
        R_GEEX3000_LRGUVC(taLRGUVC[nCountLine])
        R_GEEX3000_LNGUVC(taLNGUVC[nCountLine])
        R_GEEX3000_HAUUVC(taHAUUVC[nCountLine])
        R_GEEX3000_UNIPRO("UNI")
        R_GEEX3000_CODEMB("PBR")
        R_GEEX3000_ABCPRO("C")
        R_GEEX3000_ABCSTS("C")
        R_GEEX3000_CODMDR("VEJ")
        R_GEEX3000_CODMDP("VEJ")
        R_GEEX3000_CODMDS("VEJ")

        flush(0,0,NL) >> tFileOutTemp

        R_GEEX3001_CODEXC("30")
        R_GEEX3001_SEPEXC(".")
        R_GEEX3001_SCOEXC("01")
        R_GEEX3001_CODACT(tCODACT)
        R_GEEX3001_TRTEXC("2")
        R_GEEX3001_DESFOU(taDESFOU[nCountLine])
        R_GEEX3001_CODPRO(taCODPRO[nCountLine])
        R_GEEX3001_CIRDET("000")
        R_GEEX3001_CODMRQ(taCODMRQ[nCountLine])
        taPRXPRO1[nCountLine] := build(number(substr(taPRXPRO1[nCountLine], 1, index(taPRXPRO1[nCountLine], "."))) * 1000:R09)
        taPRXPRO2[nCountLine] := build(number(substr(taPRXPRO2[nCountLine], 1, index(taPRXPRO2[nCountLine], "."))) * 1000:R09)
        R_GEEX3001_PRXPRO(build(taPRXPRO1[nCountLine], taPRXPRO2[nCountLine]))


        flush(0,0,NL) >> tFileOutTemp

        R_GEEX3003_CODEXC("30")
        R_GEEX3003_SEPEXC(".")
        R_GEEX3003_SCOEXC("03")
        R_GEEX3003_CODACT(tCODACT)
        R_GEEX3003_TRTEXC("2")
        if length(taDS1PRO_DS2PRO[nCountLine]) > 35 then
            R_GEEX3003_DS1PRO(substr(taDS1PRO_DS2PRO[nCountLine], 1, 35))
            R_GEEX3003_DS2PRO(substr(taDS1PRO_DS2PRO[nCountLine], 36, EOL))
        else
            R_GEEX3003_DS1PRO(taDS1PRO_DS2PRO[nCountLine])
        endif
        R_GEEX3003_DS3PRO(taDS3PRO[nCountLine])
        R_GEEX3003_CODPRO(taCODPRO[nCountLine])

        flush(0,0,NL) >> tFileOutTemp

        R_GEEX3020_CODEXC("30")
        R_GEEX3020_SEPEXC(".")
        R_GEEX3020_SCOEXC("20")
        R_GEEX3020_CODACT(tCODACT)
        R_GEEX3020_TRTEXC("2")
        R_GEEX3020_CODPRO(taCODPRO[nCountLine])
        R_GEEX3020_EDIPRO(taEDIPRO[nCountLine])
        R_GEEX3020_EDIPRM(taEDIPRM[nCountLine])
        R_GEEX3020_EDIQLF(taEDIQLF[nCountLine])

        flush(0,0,NL) >> tFileOutTemp
    endwhile

	R_GEEX9900_CODEXC("99")
	R_GEEX9900_SEPEXC(".")
	R_GEEX9900_SCOEXC("00")
	R_GEEX9900_EMTEXC("FM")
	R_GEEX9900_DATEXC(time("now", "%Y%m%d"))
	R_GEEX9900_HEUEXC(time("now", "H%M%S"))

    flush(0,0,NL) >> tFileOutTemp

    close(tFileOutTemp)
	copy(tFileOutTemp,tFileOut)
	close(tFileOutTemp)
	remove(tFileOutTemp)
	close(tFileOut)

    bfMajtrace("Recebida", \
                "0", \
                tREFREC, \
                time("now","%Y-%m-%d"), \
                tFileOut, \
                "")
endend

!===========================================================

function bfMajtrace(tStatus,tError,tNumDoc,tDataDoc,tFileOut,tMensagemErro)
	TRACE:=new(build(sHOME,"/trace"))
	TRACE.ESTADO := tStatus
	TRACE.ERRO := tError
	TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
	TRACE.PERFIL := "VEJA"
	TRACE.MENSAGEM := "M30 - PRODUTOS"
	TRACE.SENTIDO := "I"
	TRACE.NUMDOC := tNumDoc
	TRACE.DATDOC := tDataDoc
	TRACE.MESSAGEID := build(nMessageID)   
	if TRACE.REDE <> build(SYSLOG.INDEX) then
		TRACE.REDE := pEDISEND.ORIGINAL.NAME
	else
		TRACE.REDE := "REPROCESSADO"
	endif
	TRACE.FICHEIROSAIDA := tNameOut
	TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)

	SYSLOG.REFERENCE := build(nMessageID)

	if tStatus = "Recebida" then
		print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
		print("Traduzida com Sucesso",NL) >> TRACE.Detail
	else
		if substr(tStatus,1,13) = "Erro de Tradu" then
			print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
			print("Erro de Traducao",NL) >> TRACE.Detail
			print(tMensagemErro,NL) >> TRACE.Detail
		endif
	endif

	close(TRACE.Detail)
	close(SYSLOG.a)

	copy(SYSLOG.a,TRACE.In)
	close(SYSLOG.a)
	close(TRACE.In)

	close(tFileOut)
	copy(tFileOut,TRACE.Out)
	close(tFileOut)
	close(TRACE.Out)
endfunction

!===========================================================
