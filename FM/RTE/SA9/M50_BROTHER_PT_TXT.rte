%@(#) $Id:  M50_BROTHER_PT_TXT.rte,v 1.2 2020/04/23 17:02:20 gmt Exp $
!===========================================================================================================
% File         : $RCSfile: M50_BROTHER_PT_TXT.rte $   $Revision: 1.2 $
!-----------------------------------------------------------------------------------------------------------
% Description   : M50_BROTHER_PT_TXT
!-----------------------------------------------------------------------------------------------------------
% Author        : GMT - GENERIX BR
!===========================================================================================================
! 2020/04/23 GMT 1.2 Creation
!===========================================================================================================
!
! M50_BROTHER_PT_TXT
!
!===========================================================================================================

!base "syslog.cfg" SYSLOG
base "../trace/trace.cfg" TRACE,autoflush off

!===========================================================================================================

! Input/output macros file
#define TX_PROG_INFO "M50_BROTHER_PT_TXT"
#include "include/generix_func.inc"
#include "include/M50_BROTHER_PT_CSV.inc"
#include "include/GEEXM20.inc"
#include "include/GEEXM30.inc"
#include "include/GEEXM50.inc"

!===========================================================================================================

! Initialization section
begin
	nPos := 1
	nRec := 1
	nMainIndex := 0
	SYSLOG := find(sSYSLOG,INDEX=number(pINDEX))
	load(0, build(sHOME,"/config/FM_wms_configuration.properties"), taPARAM)
	tToInfologPrefixFilename := taPARAM["ToInfologPrefixFilenameSA9"]

	! Parametros do TRACE
		nMessageID := cMessageID
		tPerfil := "BROTHER"
		tSentido := "I"
		tMensagem := "PEDIDO"
		tDataDocumento := time("now","%Y-%m-%d")

	!Inicio do processo
		log("------------------------------------------------------------", NL)
		log("Inicio: ", time("now","%Y-%m-%d %H:%M:%S"), NL)
		log("Arquivo de entrada: ",pEDISEND.ORIGINAL.NAME, NL)
		log("------------------------------------------------------------", NL)

	!Abertura do banco de dados - WMS
		tDbBase		:= "FMWMS"
		tDbUsername	:= taPARAM["WMSDBUSER"]
		tDbPassword	:= taPARAM["WMSDBPASS"]
		tDbUrl		:= taPARAM["WMSDBURL"]

		tDbUsernameUPDATES := taPARAM["WMSDBUSERUPDATES"]
		tDbPasswordUPDATES := taPARAM["WMSDBPASSUPDATES"]
		tDbUrlUPDATES	   := taPARAM["WMSDBURLUPDATES"]

		bfSqlInit()
		if not bfSqlJdbc(tDbBase, tDbUsername, tDbPassword, tDbUrl) then
			bfSqlErro()
			exit(1)
		endif

		if not bfSqlJdbc(tDbBase2 , tDbUsernameUPDATES, tDbPasswordUPDATES, tDbUrlUPDATES) then
			bfSqlClose(tDbBase2)
			bfSqlErro()
			exit(1)
		endif

	!Variaveis Gerais
		nCurrLine := 0
endbegin

!===========================================================================================================
line(not "")
	S_REGISTRO

	nNRegistro++
	taCODACT[nNRegistro] := "BRO"
	taCODMOP[nNRegistro] := "BRO"

	! Cliente
		taCATCLI[nNRegistro] := "STD"
		taCODCLI[nNRegistro] := S_REGISTRO_CODCLI
		taNOMCLI[nNRegistro] := S_REGISTRO_NOMCLI
		taREFCLI[nNRegistro] := S_REGISTRO_REFCLI
		taFAXCLI[nNRegistro] := build("IE:", S_REGISTRO_FAXCLI)
		taCPICLI[nNRegistro] := S_REGISTRO_CPICLI
		taDTILIV[nNRegistro] := tfConvertDate(S_REGISTRO_DTILIV, "MMDDYYYY", "YYYYMMDD")
		taDIPLIV[nNRegistro] := S_REGISTRO_DIPLIV
		taCODRGT[nNRegistro] := S_REGISTRO_VILCLI2
		taPAYCLI[nNRegistro] := "BRA"
	
	! TRTEXC e Produto
		taNLILIV[nNRegistro] := S_REGISTRO_NLILIV
		taCODPRO[nNRegistro] := S_REGISTRO_CODPRO 
		taUNICDE[nNRegistro] := S_REGISTRO_UNICDE
		taUVCCDE[nNRegistro] := S_REGISTRO_UVCCDE
		taMOTIMM[nNRegistro] := S_REGISTRO_MOTIMM

	! MRQ para rubrica 50.05
		tQuery := build("SELECT TRIM(CODMRQ) AS CODMRQ ", NL," "\
				"  FROM FGE50FM",tToInfologPrefixFilename,".GEPRO ", NL," "\
				"  WHERE CODPRO='",taCODPRO[nNRegistro],"'")

		log("------------------------------------------------------------", NL)
		log(tQuery,NL)
		log("------------------------------------------------------------", NL)

		if bfSqlSet( tDbBase ,"SELECTdb2", tQuery) = FALSE then
			bfSqlErro()
			exit(1)				
		endif

		if bfSqlOpen( tDbBase , "SELECTdb2") = FALSE then
			bfSqlErro()
			exit(1)		
		endif

		while bfSqlFetchArray( tDbBase , "SELECTdb2", taDb2Array) = TRUE do
			if length(peel(taDb2Array["CODMRQ"], " ")) > 0 then
				taCODMRQ[nNRegistro] := peel(taDb2Array["CODMRQ"], " ")
				bEscreve5005 := TRUE
				log("tCODMRQ = ", taCODMRQ[nNRegistro], NL)
				log("tCODMRQ(L) = ", length(taCODMRQ[nNRegistro]), NL)
			endif
			remove(taDb2Array)
		endwhile

		if bfSqlFree( tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro()
			exit(1)
		endif

	! Endereco
		tADRESS := build(S_REGISTRO_ADRCLI5, " ", S_REGISTRO_ADRCLI1, ",", S_REGISTRO_ADRCLI4)
		if length(tADRESS) > 77 then
			taAD1CLI[nNRegistro] := substr(tADRESS,  1,  38)
			taAD2CLI[nNRegistro] := substr(tADRESS, 39,  77)
		else
			if length(tADRESS) > 38 then
				taAD1CLI[nNRegistro] := substr(tADRESS,  1,  38)
				taAD2CLI[nNRegistro] := substr(tADRESS, 39,  77)
			else
				taAD1CLI[nNRegistro] := substr(tADRESS,  1,  38)
				taAD2CLI[nNRegistro] := ""
			endif
		endif
		taAD3CLI[nNRegistro] := S_REGISTRO_DESTINATION_DISTRICT

	! Municipio / UF
		if length(S_REGISTRO_VILCLI1) = 0 and length(S_REGISTRO_VILCLI2) > 0 then
			taVILCLI[nNRegistro] := S_REGISTRO_VILCLI2
		else
			if length(S_REGISTRO_VILCLI1) > 0 and length(S_REGISTRO_VILCLI2) = 0 then
				taVILCLI[nNRegistro] := S_REGISTRO_VILCLI1
			else
				if length(S_REGISTRO_VILCLI1) = 0 and length(S_REGISTRO_VILCLI2) = 0 then
					taVILCLI[nNRegistro] := ""
				else
					taVILCLI[nNRegistro] := build(S_REGISTRO_VILCLI1,"/",S_REGISTRO_VILCLI2)
				endif
			endif
		endif
	
	! Definicao de REFLIV
		if length(S_REGISTRO_REFLIV2) = 0 or number(S_REGISTRO_REFLIV2) = 0 then
			taREFLIV[nNRegistro] := S_REGISTRO_REFLIV1
		else
			taREFLIV[nNRegistro] := build(number(S_REGISTRO_REFLIV1),".",number(S_REGISTRO_REFLIV2))
		endif

	! Referencia para Pedido anterior
		if nNRegistro = 1 then
			nNPedido++
			taNPedido[nNPedido] := taREFLIV[nNRegistro]
			naRef[nNPedido] := nNRegistro
		else
			if taREFLIV[nNRegistro-1] <> taREFLIV[nNRegistro] then
				nNPedido++
				taNPedido[nNPedido] := taREFLIV[nNRegistro]
				naRef[nNPedido] := nNRegistro
			endif
		endif

endline

!===========================================================================================================
! Default statements section
default

enddefault

!===========================================================================================================
! End statements section
end
	! Total de Ref
		log("------------------------------------------------------------", NL)
		log("Total de REF: ", nNPedido, NL)
		log("------------------------------------------------------------", NL)

	while tIndex in taNPedido do

		! Variaveis
			nContadorLinhasEscritas := 0
			nContadorNLILIV := 0
			nRef := naRef[tIndex]

		! QUERY taTRTEXC, bPedidoExiste
			tQuery := build("SELECT  REFLIV", NL," "\
							"FROM FGE50FM",tToInfologPrefixFilename,".GELIVE", NL," "\
							"WHERE REFLIV = '",taREFLIV[nRef],"'")

			log("------------------------------------------------------------", NL)
			log(tQuery, NL)
			log("------------------------------------------------------------", NL)

			if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
				bfSqlErro()
				exit(1)	
			endif

			if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
				bfSqlErro()
				exit(1)	
			endif

			bPedidoExiste := FALSE
			taTRTEXC[nRef] := ""
			taTRTEXC20[nRef] := ""
			if bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE then
				bPedidoExiste := TRUE
				remove(taDb2Array)
			endif

			if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
				bfSqlErro()
				exit(1)	
			endif

		! Criação dos arquivos
			tNameOut := build(tToInfologPrefixFilename,"50",build(nMessageID:R010),build(number(tIndex):R02),".DAT")
			tFileOutTemp := build(sHOME,"/ToInfolog/Temp/",tNameOut)
			tFileOut := build(sHOME,"/ToInfolog/",tNameOut)

		if bPedidoExiste = FALSE then
			! 00.00
				R_GEEX0000_CODEXC("00")
				R_GEEX0000_SEPEXC(".")
				R_GEEX0000_SCOEXC("00")
				R_GEEX0000_EMTEXC("FM")
				R_GEEX0000_DATEXC(time("now" ,"%Y%m%d"))
				R_GEEX0000_HEUEXC(time("now" ,"%H%M%S"))
				R_GEEX0000_NUMEXC("0000000")
				R_GEEX0000_ACQEXC("0")
				R_GEEX0000_VEREXC("5.00") 
				R_GEEX0000_NOMDTQ("M50")
				R_GEEX0000_LIBEXC(build(nMessageID:R010))
				flush(0,0,NL) >> tFileOutTemp
				nContadorLinhasEscritas++

			! Retorna CATCLI
				tQuery := build("SELECT CATCLI, CODCLI", NL," "\
								"FROM FGE50FM",tToInfologPrefixFilename,".GECLI ", NL," "\
								"WHERE CODACT = '",taCODACT[nRef],"'", NL," "\
								"  AND CODCLI = '",taCODCLI[nRef],"'")   

				log("------------------------------------------------------------", NL)
				log(tQuery,NL)
				log("------------------------------------------------------------", NL)

				if bfSqlSet( tDbBase, "SELECTdb2", tQuery) = FALSE then
					bfSqlErro()
					exit(1)	
				endif

				if bfSqlOpen( tDbBase, "SELECTdb2") = FALSE then
					bfSqlErro()
					exit(1)	
				endif

				while bfSqlFetchArray( tDbBase, "SELECTdb2", taDb2Array) = TRUE do	
					taCATCLI[nRef] := taDb2Array["CATCLI"]
					remove(taDb2Array)
				endwhile

				if bfSqlFree( tDbBase, "SELECTdb2") = FALSE then
					bfSqlErro()
					exit(1)	
				endif

			! 20.00
				R_GEEX2000_CODEXC("20")
				R_GEEX2000_SEPEXC(".")
				R_GEEX2000_SCOEXC("00")
				R_GEEX2000_TRTEXC(taTRTEXC20[nRef])
				R_GEEX2000_CODACT(taCODACT[nRef])
				R_GEEX2000_CODCLI(taCODCLI[nRef])
				if length(taCATCLI[nRef]) > 0 then
					R_GEEX2000_CATCLI(taCATCLI[nRef])
				else
					R_GEEX2000_CATCLI("STD")
				endif
				R_GEEX2000_NOMCLI(taNOMCLI[nRef])
				R_GEEX2000_AD1CLI(taAD1CLI[nRef])
				R_GEEX2000_AD2CLI(taAD2CLI[nRef])
				R_GEEX2000_VILCLI(taVILCLI[nRef])
				R_GEEX2000_PAYCLI(taPAYCLI[nRef])
				R_GEEX2000_FAXCLI(taFAXCLI[nRef])
				flush(0,0,NL) >> tFileOutTemp
				nContadorLinhasEscritas++

			! 20.01
				R_GEEX2001_CODEXC("20")
				R_GEEX2001_SEPEXC(".")
				R_GEEX2001_SCOEXC("01")
				R_GEEX2001_TRTEXC(taTRTEXC20[nRef])
				R_GEEX2001_CODACT(taCODACT[nRef])
				R_GEEX2001_CODCLI(taCODCLI[nRef])
				R_GEEX2001_CPICLI(taCPICLI[nRef])
				R_GEEX2001_PTYDES(taPTYDES[nRef])
				R_GEEX2001_CODMOP(taCODMOP[nRef])
				flush(0,0,NL) >> tFileOutTemp
				nContadorLinhasEscritas++

			! 20.02
				R_GEEX2002_CODEXC("20")
				R_GEEX2002_SEPEXC(".")
				R_GEEX2002_SCOEXC("02")
				R_GEEX2002_TRTEXC(taTRTEXC20[nRef])
				R_GEEX2002_CODACT(taCODACT[nRef])
				R_GEEX2002_CODCLI(taCODCLI[nRef])
				flush(0,0,NL) >> tFileOutTemp
				nContadorLinhasEscritas++

			! 20.04
				R_GEEX2004_CODEXC("20")
				R_GEEX2004_SEPEXC(".")
				R_GEEX2004_SCOEXC("04")
				R_GEEX2004_TRTEXC(taTRTEXC20[nRef])
				R_GEEX2004_CODACT(taCODACT[nRef])
				R_GEEX2004_CODCLI(taCODCLI[nRef])
				R_GEEX2004_NOMCLI(taNOMCLI[nRef])
				R_GEEX2004_AD1CLI(taAD1CLI[nRef])
				R_GEEX2004_AD2CLI(taAD2CLI[nRef])
				R_GEEX2004_AD3CLI(taAD3CLI[nRef])
				R_GEEX2004_VILCLI(taVILCLI[nRef])
				flush(0,0,NL) >> tFileOutTemp
				nContadorLinhasEscritas++

			! 50.00
				R_GEEX5000_CODEXC("50")
				R_GEEX5000_SEPEXC(".")
				R_GEEX5000_SCOEXC("00")
				R_GEEX5000_TRTEXC(taTRTEXC[nRef])
				R_GEEX5000_CODACT(taCODACT[nRef])
				R_GEEX5000_CODTLI(taCODTLI[nRef])
				R_GEEX5000_CODCLI(taCODCLI[nRef]) 
				R_GEEX5000_REFLIV(taREFLIV[nRef])
				R_GEEX5000_CODTRA(taCODTRA[nRef])
				R_GEEX5000_CODRGT(taCODRGT[nRef])
				
				flush(0,0,NL) >> tFileOutTemp
				nContadorLinhasEscritas++

			! 50.01
				R_GEEX5001_CODEXC("50")
				R_GEEX5001_SEPEXC(".")
				R_GEEX5001_SCOEXC("01")
				R_GEEX5001_TRTEXC(taTRTEXC[nRef])
				R_GEEX5001_CODACT(taCODACT[nRef])
				R_GEEX5001_CODCLI(taCODCLI[nRef])  
				R_GEEX5001_DIPLIV(taDIPLIV[nRef]) 
				R_GEEX5001_REFLIV(taREFLIV[nRef])
				R_GEEX5001_REFCLI(taREFCLI[nRef])
				flush(0,0,NL) >> tFileOutTemp
				nContadorLinhasEscritas++		   
			
			! 50.05
				if bPedidoExiste = FALSE then
					R_GEEX5005_CODEXC("50")
					R_GEEX5005_SEPEXC(".")
					R_GEEX5005_SCOEXC("05")
					R_GEEX5005_TRTEXC(taTRTEXC[nRef])
					R_GEEX5005_CODACT(taCODACT[nRef])
					R_GEEX5005_CODCLI(taCODCLI[nRef])
					R_GEEX5005_REFLIV(taREFLIV[nRef]) 
					R_GEEX5005_CODRUB("GNRE")
					R_GEEX5005_VALRUB("SEM GNRE")
					flush(0,0,NL) >> tFileOutTemp
					nContadorLinhasEscritas++
				endif

			! 50.05
				if bEscreve5005 then
					! Retorna Rubrica
						R_GEEX5005_CODEXC("50")
						R_GEEX5005_SEPEXC(".")
						R_GEEX5005_SCOEXC("05")
						R_GEEX5005_TRTEXC(taTRTEXC[nRef])
						R_GEEX5005_CODACT(taCODACT[nRef])
						R_GEEX5005_CODCLI(taCODCLI[nRef])
						R_GEEX5005_REFLIV(taREFLIV[nRef]) 
						R_GEEX5005_CODRUB("ZMRQ")
						R_GEEX5005_VALRUB(taCODMRQ[nRef])
						flush(0,0,NL) >> tFileOutTemp
						nContadorLinhasEscritas++
				endif

			! 50.10
				R_GEEX5010_CODEXC("50")
				R_GEEX5010_SEPEXC(".")
				R_GEEX5010_SCOEXC("10")
				R_GEEX5010_TRTEXC(taTRTEXC[nRef])
				R_GEEX5010_CODACT(taCODACT[nRef])
				R_GEEX5010_CODCLI(taCODCLI[nRef]) 
				R_GEEX5010_REFLIV(taREFLIV[nRef])
				R_GEEX5010_VILCLI(taVILCLI[nRef])
				R_GEEX5010_AD1CLI(taAD1CLI[nRef])
				R_GEEX5010_AD2CLI(taAD2CLI[nRef])
				R_GEEX5010_NOMCLI(taNOMCLI[nRef])
				R_GEEX5010_CPICLI(taCPICLI[nRef])
				R_GEEX5010_PAYCLI(taPAYCLI[nRef])
				flush(0,0,NL) >> tFileOutTemp
				nContadorLinhasEscritas++

			! 50.11
				R_GEEX5011_CODEXC("50")
				R_GEEX5011_SEPEXC(".")
				R_GEEX5011_SCOEXC("11")
				R_GEEX5011_TRTEXC(taTRTEXC[nRef])
				R_GEEX5011_CODACT(taCODACT[nRef])
				R_GEEX5011_CODCLI(taCODCLI[nRef])
				R_GEEX5011_REFLIV(taREFLIV[nRef]) 
				R_GEEX5011_AD1CLI(taAD1CLI[nRef])
				R_GEEX5011_AD2CLI(taAD2CLI[nRef])
				R_GEEX5011_AD3CLI(taAD3CLI[nRef])

				flush(0,0,NL) >> tFileOutTemp
				nContadorLinhasEscritas++

			! 50.20 e 50.25
				while tLinha in taREFLIV do
					if taREFLIV[tLinha] = taNPedido[tIndex] then
						nContadorNLILIV++

						! QUERY tIMMFRG
							tQuery := build("SELECT  mo.ediimo, mo.motimm", NL," "\
											"FROM FGE50FM",tToInfologPrefixFilename,".gezzru ru", NL," "\
											"JOIN FGE50FM",tToInfologPrefixFilename,".gezimo mo", NL," "\
											"ON mo.motimm = ru.valcle", NL," "\
											"WHERE codrub = 'STCK'", NL," "\
											"AND valrub = '",taMOTIMM[tLinha],"'")

							log("------------------------------------------------------------", NL)
							log(tQuery,NL)
							log("------------------------------------------------------------", NL)

							if bfSqlSet( tDbBase, "SELECTdb2", tQuery) = FALSE then
								bfSqlErro()
								exit(1)				
							endif

							if bfSqlOpen( tDbBase, "SELECTdb2") = FALSE then
								bfSqlErro()
								exit(1)	
							endif

							while bfSqlFetchArray( tDbBase, "SELECTdb2", taDb2Array) = TRUE do	
								if peel(taDb2Array["ediimo"]," ") = "LIV" then
									tIMMFRG := ""
								else
									tIMMFRG := peel(taDb2Array["motimm"]," ")
								endif
								remove(taDb2Array)
							endwhile

							if bfSqlFree( tDbBase, "SELECTdb2") = FALSE then
								bfSqlErro()
								exit(1)	
							endif
						! FIM QUERY tIMMFRG

						R_GEEX5020_CODEXC("50")
						R_GEEX5020_SEPEXC(".")
						R_GEEX5020_SCOEXC("20")
						R_GEEX5020_TRTEXC(taTRTEXC[nRef])
						R_GEEX5020_CODACT(taCODACT[tLinha])
						R_GEEX5020_CODCLI(taCODCLI[tLinha])
						R_GEEX5020_CODPRO(taCODPRO[tLinha])
						R_GEEX5020_UNICDE(taUNICDE[tLinha])
						R_GEEX5020_CODLOT(taCODLOT[tLinha])
						R_GEEX5020_UVCCDE(taUVCCDE[tLinha])
						R_GEEX5020_REFLIV(taREFLIV[tLinha])
						R_GEEX5020_NLILIV(build(nContadorNLILIV:R05.0))
						R_GEEX5020_IMMFRG(tIMMFRG)
						
						flush(0,0,NL) >> tFileOutTemp
						nContadorLinhasEscritas++			
					endif
				endwhile

			! 50.80
				R_GEEX5080_CODEXC("50")
				R_GEEX5080_SEPEXC(".")
				R_GEEX5080_SCOEXC("80")
				R_GEEX5080_TRTEXC(taTRTEXC[nRef])
				R_GEEX5080_CODACT(taCODACT[nRef])
				R_GEEX5080_CODCLI(taCODCLI[nRef])
				R_GEEX5080_REFLIV(taREFLIV[nRef])
				R_GEEX5080_SEQTXL("0010")
				R_GEEX5080_LIBTXL(taDIPLIV[nRef])
				flush(0,0,NL) >> tFileOutTemp
				nContadorLinhasEscritas++

			! 50.99
				R_GEEX5099_CODEXC("50")
				R_GEEX5099_SEPEXC(".")
				R_GEEX5099_SCOEXC("99")
				R_GEEX5099_TRTEXC(taTRTEXC[nRef])
				R_GEEX5099_CUMLIG(build(nContadorNLILIV))
				R_GEEX5099_CODACT(taCODACT[nRef])
				R_GEEX5099_CODCLI(taCODCLI[nRef])
				R_GEEX5099_REFLIV(taREFLIV[nRef])
				flush(0,0,NL) >> tFileOutTemp
				nContadorLinhasEscritas++
			
			! 99.00
			R_GEEX9900_CODEXC("99")
			R_GEEX9900_SEPEXC(".")
			R_GEEX9900_SCOEXC("00")
			R_GEEX9900_EMTEXC("FM")
			R_GEEX9900_DATEXC(time("now" ,"%Y%m%d"))
			R_GEEX9900_HEUEXC(time("now" ,"%H%M%S"))
			R_GEEX9900_CPTEXC(build(nContadorLinhasEscritas:R08.0))
			flush(0,0,NL)  >> tFileOutTemp
			nContadorLinhasEscritas++
		else
			log("bPedidoExiste = FALSE",NL)
			while tLinha in taREFLIV do
				! QUERY tIMMFRG
					tQuery := build("SELECT  VALCLE", NL," "\
									"FROM FGE50FM",tToInfologPrefixFilename,".GEZZRU", NL," "\
									"WHERE CODRUB = 'STCK'", NL," "\
									"AND VALRUB = '",taMOTIMM[tLinha],"'")

					log("------------------------------------------------------------", NL)
					log(tQuery,NL)
					print(tQuery,NL) >> tFileOutTemp
					log("------------------------------------------------------------", NL)

					if bfSqlSet( tDbBase, "SELECTdb2", tQuery) = FALSE then
						bfSqlErro()
						exit(1)				
					endif

					if bfSqlOpen( tDbBase, "SELECTdb2") = FALSE then
						bfSqlErro()
						exit(1)	
					endif

					while bfSqlFetchArray( tDbBase, "SELECTdb2", taDb2Array) = TRUE do	
						tIMMFRG := peel(taDb2Array["VALCLE"]," ")
						remove(taDb2Array)
					endwhile

					if bfSqlFree( tDbBase, "SELECTdb2") = FALSE then
						bfSqlErro()
						exit(1)	
					endif
				! FIM QUERY tIMMFRG

				! UPDATE IMMFRG
					tQueryUpdate := build("UPDATE FGE50FM",tToInfologPrefixFilename,".GELIVD", NL," "\
											"SET IMMFRG = '",tIMMFRG,"'", NL," "\
											"WHERE REFLIV = '",taREFLIV[tLinha],"'", NL," "\
											"AND CODPRO = '",taCODPRO[tLinha],"'", NL," "\
											"WITH NONE")
					
					log("------------------------------------------------------------", NL)
					log(tQueryUpdate,NL)
					print(tQueryUpdate, NL, NL) >> tFileOutTemp
					log("------------------------------------------------------------", NL)
					
					if not bfSqlSet(tDbBase2, "Updatedb2", tQueryUpdate) then
						bfSqlErro()
						exit(1)
					endif

					if not bfSqlExec(tDbBase2, "Updatedb2") then
						bfSqlErro()
						exit(1)
					endif

					if not bfSqlCommit(tDbBase2, "Updatedb2") then
						bfSqlErro()
						exit(1)
					endif

					if not bfSqlFree(tDbBase2, "Updatedb2") then
						bfSqlErro()
						exit(1)
					endif
				! FIM UPDATE IMMFRG
			endwhile

			! UPDATE REFCLI
				tQueryUpdate := build("UPDATE FGE50FM",tToInfologPrefixFilename,".GELIVE", NL," "\
										"SET REFCLI = '",taREFCLI[nRef],"'", NL," "\
										"WHERE REFLIV = '",taREFLIV[nRef],"'", NL," "\
										"WITH NONE")
				
				log("------------------------------------------------------------", NL)
				log(tQueryUpdate,NL)
				print(tQueryUpdate, NL, NL) >> tFileOutTemp
				log("------------------------------------------------------------", NL)
				
				if not bfSqlSet(tDbBase2, "Updatedb2", tQueryUpdate) then
					bfSqlErro()
					exit(1)
				endif

				if not bfSqlExec(tDbBase2, "Updatedb2") then
					bfSqlErro()
					exit(1)
				endif

				if not bfSqlCommit(tDbBase2, "Updatedb2") then
					bfSqlErro()
					exit(1)
				endif

				if not bfSqlFree(tDbBase2, "Updatedb2") then
					bfSqlErro()
					exit(1)
				endif
			! FIM UPDATE REFCLI
		endif

		! Tratamento final dos arquivos
			close(tFileOutTemp)
			copy(tFileOutTemp,tFileOut)
			close(tFileOutTemp)
			remove(tFileOutTemp)
			close(tFileOut)

		! Finalizando com TRACE
			bfMajtrace(	"Recebida" \
						,"0" \
						,taREFLIV[nRef] \
						,tDataDocumento \
						,tFileInput \
						,tFileOut \
						,tMensagem \
						,"")
		
		if bPedidoExiste = TRUE then
			remove(tFileOut)
		endif

		! Enviar interface para o cliente
			bfToInfolog()
	endwhile
   
	bfSqlClose(tDbBase)

	log("------------------------------------------------------------", NL)
	log("Fim...: ", time("now","%Y-%m-%d %H:%M:%S"), NL)
	log("------------------------------------------------------------", NL)

	exit(0)

endend

!===========================================================================================================

function bfMajtrace(tStatus, tError, tNumDoc, tDataDoc, tFileInput, tFileOut, tMensagem, tMensagemErro)
	TRACE:=new(build(sHOME,"/trace"))
	TRACE.ESTADO := tStatus
	TRACE.ERRO := tError
	TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
    TRACE.PERFIL := tPerfil
	TRACE.SENTIDO := tSentido
	TRACE.MENSAGEM := tMensagem
	TRACE.NUMDOC := tNumDoc
	TRACE.DATDOC := tDataDoc
	TRACE.MESSAGEID := build(nMessageID)
	if pEDISEND.ORIGINAL.NAME <> build(SYSLOG.INDEX) then
		TRACE.REDE := pEDISEND.ORIGINAL.NAME
	else
		TRACE.REDE := "REPROCESSADO"
	endif
	TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
	TRACE.FICHEIROSAIDA := tNameOut

	if tError = "0" then
		print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
		print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
		print("Traduzida com Sucesso",NL) >> TRACE.Detail
	else
		if tError = "1" then
			print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
			print("Erro de Traducao",NL) >> TRACE.Detail
			print(tMensagemErro,NL) >> TRACE.Detail
		endif
	endif

	close(TRACE.Detail)

	if nMainIndex = 0 then
		close(SYSLOG.a)
		copy(SYSLOG.a,TRACE.In)
		close(SYSLOG.a)
		close(TRACE.In)
		nMainIndex := TRACE.INDEX
	else
		tCmd := build("ln -s ", sHOME, "/trace/files/In/", nMainIndex, " ", TRACE.In)
		system(tCmd)
	endif

	if tError = "0" then
		close(tFileOut)
		copy(tFileOut,TRACE.Out)
		close(tFileOut)
		close(TRACE.Out)
	endif

	flush(TRACE)

endfunction

!===========================================================================================================

function bfSqlErro()
    print("FATAL: ",tfSqlErrorStr())
    bfMajtrace(	"Erro de Traducao" \
                ,"1" \
                ,tNumeroDocumento \
                ,tDataDocumento \
                ,tFileInput \
                ,tFileOut \
                ,tMensagem \
                ,build("Erro no banco de dados: ",tfSqlErrorStr()))     
endfunction

!===========================================================================================================

function bfToInfolog()

	tCmd := build("edisend ToInfolog ", tFileOut)
	log("executando o comando - ", tCmd, NL)
	system(tCmd)

endfunction

!===========================================================================================================
