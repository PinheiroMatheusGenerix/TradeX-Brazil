%@(#)  M90_BROTHER_CSV.rte     modif:08-12-2017
!==============================================================================
% File          : M90_BROTHER_CSV.rte   version 1.0
!------------------------------------------------------------------------------
% Description   : <short program description>
!------------------------------------------------------------------------------
% Author        : <developer name> - COMPANY
!==============================================================================
! 08-12-2017  XX  Creation
! 08-12-2017  XX  <comments>
!==============================================================================
!
! <detailed program description>
!
!==============================================================================
! input file     : <name or rule for naming input file>
! output file    : <name or rule for naming output file> 
! temporary file : <name or rule for naming temporary file> 
!==============================================================================

base "../trace/trace.cfg" TRACE,autoflush off ! Batimento
base "../trace/trace.cfg" TRACE2,autoflush off ! P5
base "../trace/trace.cfg" TRACE3,autoflush off ! Shelflife
base "../trace/trace.cfg" TRACE4,autoflush off ! M90 Inventory
base "../fmbrasil_gama_ajustes_estoque/fmbrasil_gama_ajustes_estoque.cfg" fmbrasil_gama_ajustes_estoque
base "../fmbrasil_batimento_p5/fmbrasil_batimento_p5.cfg" fmbrasil_batimento_p5_batimento
base "../fmbrasil_batimento_p5/fmbrasil_batimento_p5.cfg" fmbrasil_batimento_p5_p5
base "../fmbrasil_batimento_p5/fmbrasil_batimento_p5.cfg" fmbrasil_batimento_p5_Shelf

!==============================================================================

! Traces names
! M90
#define TRACE_MESSAGE_M90 "M90 - BROTHER"
#define TRACE_NUMDOC_M90 "M90 - BROTHER"
#define TRACE_DATE_M90 time("now","%Y-%m-%d")

! P5
#define TRACE_MESSAGE_P5 "P5 - BRO"
#define TRACE_NUMDOC_P5 "P5 - BRO"
#define TRACE_DATE_P5 time("now","%Y-%m-%d")

! Batimento
#define TRACE_MESSAGE_BAT "BATIMENTO - BRO"
#define TRACE_NUMDOC_BAT "BATIMENTO - BRO"
#define TRACE_DATE_BAT time("now","%Y-%m-%d")

! Shelflife
#define TRACE_MESSAGE_SHLF "SHELF LIFE"
#define TRACE_NUMDOC_SHLF "SHELF LIFE"
#define TRACE_DATE_SHLF time("now","%Y-%m-%d")

! Geral
#define TRACE_PROFILE "BROTHER"

!==============================================================================

! Input/output macros file
#define TX_PROG_INFO "M90_BROTHER_CSV"
#include "include/generix_func.inc"
#include "include/GEEXM90.inc"
#include "include/GEEXM06.inc"
#include "include/M90_BROTHER_TXT.inc"
!==============================================================================

! Initialization section
begin
	nPos := 1
	nRec := 1
	nMainIndex := 0
	SYSLOG := find(sSYSLOG,INDEX=number(pINDEX))

	load(0, build(sHOME,"/config/FM_wms_configuration.properties"), taPARAM)
	tToInfologPrefixFilename := taPARAM["ToInfologPrefixFilenameSA9"]

	!Inicio do processo
		log("------------------------------------------------------------", NL)
		log("Inicio: ", time("now","%Y-%m-%d %H:%M:%S"), NL)
		log("Arquivo de entrada: ",pEDISEND.ORIGINAL.NAME, NL)
		log("------------------------------------------------------------", NL)

	!Abertura do banco de dados - WMS
		tDbBase		:= "FMWMS"
		tDbUsername	:= taPARAM["WMSDBUSER"]
		tDbPassword	:= taPARAM["WMSDBPASS"]
		tDbUrl		:= taPARAM["WMSDBURL"]

		bfSqlInit()
		if not bfSqlJdbc(tDbBase, tDbUsername, tDbPassword, tDbUrl) then
			bfSqlErro("", "1")
			exit(1)
		endif
endbegin

!==============================================================================

line(1:"00.00")
	tHora := S_GEEX0000_HEUEXC

	if S_GEEX0000_CODACT <> "BRO" then
		exit(1)
	endif
endline

!==============================================================================

line("90.00")
	tCODACT := S_GEEX9000_CODACT
	bTem9000 := TRUE
endline

!==============================================================================

line("90.70")
	tCODACT := S_GEEX9070_CODACT
	tDATMVT := S_GEEX9070_DATMVT
	bTem9070 := TRUE
endline

!==============================================================================

line("99.00")

endline

!==============================================================================

! Default statements section
default

enddefault

!==============================================================================

! End statements section
end
	if bTem9000 = TRUE then
		! BATIMENTO
			TRACE:=new(build(sHOME,"/trace"))
			! Verifica se o horário de execução é permitido
				fmbrasil_batimento_p5_batimento := find(build(sHOME,"/fmbrasil_batimento_p5"),CODACT=tCODACT,TIPO="BATIMENTO")
				if valid(fmbrasil_batimento_p5_batimento) then
					log("Verificação de horarios permitidos para batimento", NL)
					tHorariosPermitidos_batimento := replace(fmbrasil_batimento_p5_batimento.HORARIOSPERMITIDOS,",",";")
					split(tHorariosPermitidos_batimento, taHorariosPermitidos_batimento, ";")
					
					log("Horário atual: ", number(substr(tHora, 1, 2)), NL)
					while tIndex in taHorariosPermitidos_batimento do
						if number(tIndex) = number(substr(tHora, 1, 2)) then
							log("Horário atual cadastrado", NL)
							bFazBatimento := TRUE
							break
						endif
					endwhile
				else
					bfMajtrace("Erro de Traducao" \
								,"1" \
								,TRACE_PROFILE \
								,TRACE_MESSAGE_BAT \
								,TRACE_DATE_BAT \
								,TRACE_MESSAGE_BAT)
				endif

			! Coleta de informações Batimento
				tBeginSubj_batimento := fmbrasil_batimento_p5_batimento.BEGINSUBJ
				tToEmail_batimento := fmbrasil_batimento_p5_batimento.TOEMAIL
				tCcEmail_batimento := fmbrasil_batimento_p5_batimento.CCEMAIL

			! Escrita de consultas
				bfBatimento_Resumo()
				bfBatimento_EstoqueProduto()
				bfBatimento_PaleteLocacao()
				bfBatimento_Checkin()
				bfBatimento_Putaway()
				bfBatimento_SeparadoNaoConf()
				bfBatimento_OndaSolta()
				bfBatimento_PedidoSemOnda()

				bfMajtrace("Recebida" \
							,"0" \
							,TRACE_PROFILE \
							,TRACE_MESSAGE_BAT \
							,TRACE_DATE_BAT \
							,TRACE_MESSAGE_BAT)

		! P5
			TRACE2:=new(build(sHOME,"/trace"))
			! Verifica se o horário de execução é permitido
				fmbrasil_batimento_p5_p5 := find(build(sHOME,"/fmbrasil_batimento_p5"),CODACT=tCODACT,TIPO="P5")
				if valid(fmbrasil_batimento_p5_p5) then
					log(NL, "Verificação de horarios permitidos para P5", NL)
					tHorariosPermitidos_p5 := replace(fmbrasil_batimento_p5_p5.HORARIOSPERMITIDOS,",",";")
					split(tHorariosPermitidos_p5, taHorariosPermitidos_p5, ";")
										
					log("Horário atual: ", number(substr(tHora, 1, 2)), NL)
					while tIndex in taHorariosPermitidos_p5 do
						if number(tIndex) = number(substr(tHora, 1, 2)) then
							log("Horário atual cadastrado", NL)
							bFazP5 := TRUE
							break
						endif
					endwhile
				else
					bfMajtrace("Erro de Traducao" \
								,"1" \
								,TRACE_PROFILE \
								,TRACE_MESSAGE_P5 \
								,TRACE_DATE_P5 \
								,TRACE_MESSAGE_P5)
				endif
			! Coleta de informações Batimento
				tBeginSubj_P5 := fmbrasil_batimento_p5_p5.BEGINSUBJ
				tToEmail_P5 := fmbrasil_batimento_p5_p5.TOEMAIL
				tCcEmail_P5 := fmbrasil_batimento_p5_p5.CCEMAIL

			! Escrita de consultas
				bfP5_EstoqueOficial()
				bfP5_InfSepExpDia()
				bfP5_InfSepNaoExp()
				bfP5_EstoqueResumo()

				bfMajtrace2("Recebida" \
							,"0" \
							,TRACE_PROFILE \
							,TRACE_MESSAGE_P5 \
							,TRACE_DATE_P5 \
							,TRACE_MESSAGE_P5)

		! M90 INVENTORY
			TRACE4:=new(build(sHOME,"/trace"))
			tNameOut := build("FM", tToInfologPrefixFilename, tCODACT, "_Brother_", time("now" ,"%Y%m%d%H%M%S"), ".txt")
			tFileOutTemp := build(sHOME,"/mdn/auto/Temp/",tNameOut)
			tFileOut := build(sHOME,"/mdn/auto/",tNameOut)

			tQuery := build("SELECT  GL.CODPRO                       AS PRODUCT_CODE",NL," "\
							"       ,LPAD(TRIM(RB2.VALRUB), 15, '0') AS CNPJ_ORIGIN",NL," "\
							"       ,'",tData,"'                     AS CURRENT_DATA",NL," "\
							"       ,'",substr(tHora, 1, 4),"'       AS CURRENT_TIME",NL," "\
							"       ,CASE WHEN ZRU.VALRUB = 'SIM'",NL," "\
							"            THEN SUM(GL.UVCSTO)",NL," "\
							"            ELSE 0",NL," "\
							"        END                             AS DAMAGED_QUANTITY_OF_PRODUCT",NL," "\
							"       ,SUM(GL.UVCSTO - GL.UVCDES)      AS PRODUCT_QUANTITY",NL," "\
							"       ,GL.UNIPRO                       AS PRODUCT_MEASUREMENT_UNIT",NL," "\
							"       ,CASE WHEN GL.MOTIMM = ''",NL," "\
							"            THEN ZR3.VALRUB",NL," "\
							"            ELSE ZR2.VALRUB",NL," "\
							"        END                             AS STOCK_TYPE",NL," "\
							"       ,''                              AS CODSER",NL," "\
							"FROM FGE50FM",tToInfologPrefixFilename,".GEPAL AS GL",NL," "\
							"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO AS GP",NL," "\
							"    ON GP.CODPRO = GL.CODPRO",NL," "\
							"    AND GP.CODACT = GL.CODACT",NL," "\
							"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU AS ZR2",NL," "\
							"    ON ZR2.VALCLE = GL.MOTIMM",NL," "\
							"    AND ZR2.CODRUB = 'STCK'",NL," "\
							"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB RB",NL," "\
							"    ON RB.CODACT = '",tCODACT,"'",NL," "\
							"    AND RB.CODRUB = '",tCODACT,"'",NL," "\
							"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB RB2",NL," "\
							"    ON RB2.CODACT = '",tCODACT,"'",NL," "\
							"    AND RB2.CODRUB = 'CDFM'",NL," "\
							"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU AS ZR3",NL," "\
							"    ON ZR3.CODRUB = 'STCK'",NL," "\
							"    AND ZR3.VALCLE = RB.VALRUB",NL," "\
							"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU AS ZRU",NL," "\
							"    ON ZRU.VALCLE = GL.MOTIMM",NL," "\
							"    AND ZRU.CODRUB = 'AVAR'",NL," "\
							"    AND ZRU.VALRUB = 'SIM'",NL," "\
							"WHERE GL.CODACT = '",tCODACT,"'",NL," "\
							"GROUP BY  GL.CODPRO",NL," "\
							"         ,RB2.VALRUB",NL," "\
							"         ,GL.UNIPRO",NL," "\
							"         ,CASE WHEN GL.MOTIMM = ''",NL," "\
							"                THEN ZR3.VALRUB",NL," "\
							"                ELSE ZR2.VALRUB",NL," "\
							"          END",NL," "\
							"         ,ZRU.VALRUB",NL," "\
							"ORDER BY  GL.CODPRO")

			log("------------------------------------------------------------", NL)
			log(tQuery,NL)
			log("------------------------------------------------------------", NL)

			if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
				bfSqlErro("BROTHER", "4")
				exit(1)
			endif

			if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
				bfSqlErro("BROTHER", "4")
				exit(1)
			endif

			nCountQueryResult := 0
			while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
				nCountQueryResult++
				R_VALUE_PRODUCT_CODE(peel(taDb2Array["PRODUCT_CODE"]," "))
				R_VALUE_CNPJ_ORIGIN(peel(taDb2Array["CNPJ_ORIGIN"]," "))
				R_VALUE_CURRENT_DATA(peel(taDb2Array["CURRENT_DATA"]," "))
				R_VALUE_CURRENT_TIME(peel(taDb2Array["CURRENT_TIME"]," "))
				R_VALUE_DAMAGED_QUANTITY_OF_PRODUCT(peel(taDb2Array["DAMAGED_QUANTITY_OF_PRODUCT"]," "))
				R_VALUE_PRODUCT_QUANTITY(peel(taDb2Array["PRODUCT_QUANTITY"]," "))
				R_VALUE_PRODUCT_MEASUREMENT_UNIT(peel(taDb2Array["PRODUCT_MEASUREMENT_UNIT"]," "))
				R_VALUE_STOCK_TYPE(peel(taDb2Array["STOCK_TYPE"]," "))
				R_VALUE_SERIAL_NUMBER(peel(taDb2Array["CODSER"]," "))
			
				print(taVALUE[1],";", \
						taVALUE[2],";", \
						taVALUE[3],";", \
						taVALUE[4],";", \
						taVALUE[5],";", \
						taVALUE[6],";", \
						taVALUE[7],";", \
						taVALUE[8],";", \
						taVALUE[9], NL) >> tFileOutTemp
				remove(taVALUE)

				remove(taDb2Array)
			endwhile

			if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
				bfSqlErro("BROTHER", "4")
				exit(1)
			endif

			if nCountQueryResult > 0 then
				close(tFileOutTemp)
				copy(tFileOutTemp,tFileOut)
				close(tFileOutTemp)
				remove(tFileOutTemp)
				close(tFileOut)

				bfMajtrace4("Recebida" \
								,"0" \
								,TRACE_PROFILE \
								,TRACE_MESSAGE_M90 \
								,TRACE_DATE_M90 \
								,TRACE_MESSAGE_M90)
			else
				remove(tFileOutTemp)
				remove(tFileOut)
			endif
	endif

	if bTem9070 = TRUE then
		TRACE3:=new(build(sHOME,"/trace"))
		! SHLEFLIFE
			! Verifica se o horário de execução é permitido
				fmbrasil_batimento_p5_Shelf := find(build(sHOME,"/fmbrasil_batimento_p5"),CODACT=tCODACT,TIPO="SHELFLIFE")
				if valid(fmbrasil_batimento_p5_Shelf) then
					log(NL, "Verificação de horarios permitidos para Shelf Life", NL)
					tHorariosPermitidos_Shelflife := replace(fmbrasil_batimento_p5_Shelf.HORARIOSPERMITIDOS,",",";")
					split(tHorariosPermitidos_Shelflife, taHorariosPermitidos_Shelflife, ";")
										
					log("Horário atual: ", number(substr(tHora, 1, 2)), NL)
					while tIndex in taHorariosPermitidos_Shelflife do
						if number(tIndex) = number(substr(tHora, 1, 2)) then
							log("Horário atual cadastrado", NL)
							bFazP5 := TRUE
							break
						endif
					endwhile
				else
					bfMajtrace("Erro de Traducao" \
								,"1" \
								,TRACE_MESSAGE_SHLF \
								,TRACE_DATE_SHLF \
								,TRACE_MESSAGE_SHLF)
				endif
			! Coleta de informações Shelflife
				tBeginSubj_shelflife := fmbrasil_batimento_p5_Shelf.BEGINSUBJ
				tToEmail_shelflife := fmbrasil_batimento_p5_Shelf.TOEMAIL
				tCcEmail_shelflife := fmbrasil_batimento_p5_Shelf.CCEMAIL

			! Escrita de consultas
				bfP5_Shelflife()

				bfMajtrace3("Recebida" \
							,"0" \
							,TRACE_PROFILE \
							,TRACE_MESSAGE_SHLF \
							,TRACE_DATE_SHLF \
							,TRACE_MESSAGE_SHLF)
	endif

	bfSqlClose(tDbBase)

	log("------------------------------------------------------------", NL)
	log("Fim...: ", time("now","%Y-%m-%d %H:%M:%S"), NL)
	log("------------------------------------------------------------", NL)

	exit(0)
endend

!==============================================================================

function bfSqlErro(tlProfile, tlTrace)
    print("FATAL: ",tfSqlErrorStr())
	switch tlTrace
		case "1" :
			bfMajtrace("Erro de Traducao" \
						,"1" \
						,tlProfile \
						,"" \
						,"" \
						,"")     
		case "2" :
			bfMajtrace2("Erro de Traducao" \
						,"1" \
						,tlProfile \
						,"" \
						,"" \
						,"")     
		case "3" :			
			bfMajtrace3("Erro de Traducao" \
						,"1" \
						,tlProfile \
						,"" \
						,"" \
						,"")     
		case "4" :			
			bfMajtrace4("Erro de Traducao" \
						,"1" \
						,tlProfile \
						,"" \
						,"" \
						,"")     
	endswitch
endfunction

!==============================================================================

! MAJTRACE
	function bfMajtrace(tlStatus, tlError, tlProfile, tlNumDoc, tlDataDoc, tlMessage)
		TRACE.ESTADO := tlStatus
		TRACE.ERRO := tlError
		TRACE.DATATRADUCAO := tlDataDoc
		TRACE.MENSAGEM := tlMessage
		TRACE.PERFIL := tlProfile
		TRACE.SENTIDO := "O"
		TRACE.NUMDOC := tlNumDoc
		TRACE.DATDOC := tlDataDoc
		TRACE.MESSAGEID := build(nMessageID)
		if pEDISEND.ORIGINAL.NAME <> build(SYSLOG.INDEX) then
			TRACE.REDE := pEDISEND.ORIGINAL.NAME
		else
			TRACE.REDE := "REPROCESSADO"
		endif
		TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
		TRACE.FICHEIROSAIDA := tNameOut

		SYSLOG.REFERENCE := build(nMessageID)

		close(TRACE.Detail)
		close(SYSLOG.a)

		flush(TRACE)
	endfunction

	!==============================================================================
	
	function bfMajtrace2(tlStatus, tlError, tlProfile, tlNumDoc, tlDataDoc, tlMessage)
		TRACE2.ESTADO := tlStatus
		TRACE2.ERRO := tlError
		TRACE2.DATATRADUCAO := tlDataDoc
		TRACE2.MENSAGEM := tlMessage
		TRACE2.PERFIL := tlProfile
		TRACE2.SENTIDO := "O"
		TRACE2.NUMDOC := tlNumDoc
		TRACE2.DATDOC := tlDataDoc
		TRACE2.MESSAGEID := build(nMessageID)
		if pEDISEND.ORIGINAL.NAME <> build(SYSLOG.INDEX) then
			TRACE2.REDE := pEDISEND.ORIGINAL.NAME
		else
			TRACE2.REDE := "REPROCESSADO"
		endif
		TRACE2.SYSLOG_INDEX := build(SYSLOG.INDEX)
		TRACE2.FICHEIROSAIDA := tNameOut

		SYSLOG.REFERENCE := build(nMessageID)

		close(TRACE2.Detail)
		close(SYSLOG.a)

		flush(TRACE2)
	endfunction

	!==============================================================================

	function bfMajtrace3(tlStatus, tlError, tlProfile, tlNumDoc, tlDataDoc, tlMessage)
		TRACE3.ESTADO := tlStatus
		TRACE3.ERRO := tlError
		TRACE3.DATATRADUCAO := tlDataDoc
		TRACE3.MENSAGEM := tlMessage
		TRACE3.PERFIL := tlProfile
		TRACE3.SENTIDO := "O"
		TRACE3.NUMDOC := tlNumDoc
		TRACE3.DATDOC := tlDataDoc
		TRACE3.MESSAGEID := build(nMessageID)
		if pEDISEND.ORIGINAL.NAME <> build(SYSLOG.INDEX) then
			TRACE3.REDE := pEDISEND.ORIGINAL.NAME
		else
			TRACE3.REDE := "REPROCESSADO"
		endif
		TRACE3.SYSLOG_INDEX := build(SYSLOG.INDEX)
		TRACE3.FICHEIROSAIDA := tNameOut

		SYSLOG.REFERENCE := build(nMessageID)

		close(TRACE3.Detail)
		close(SYSLOG.a)

		flush(TRACE3)
	endfunction

	!==============================================================================

	function bfMajtrace4(tlStatus, tlError, tlProfile, tlNumDoc, tlDataDoc, tlMessage)
		TRACE4.ESTADO := tlStatus
		TRACE4.ERRO := tlError
		TRACE4.DATATRADUCAO := tlDataDoc
		TRACE4.MENSAGEM := tlMessage
		TRACE4.PERFIL := tlProfile
		TRACE4.SENTIDO := "O"
		TRACE4.NUMDOC := tlNumDoc
		TRACE4.DATDOC := tlDataDoc
		TRACE4.MESSAGEID := build(nMessageID)
		if pEDISEND.ORIGINAL.NAME <> build(SYSLOG.INDEX) then
			TRACE4.REDE := pEDISEND.ORIGINAL.NAME
		else
			TRACE4.REDE := "REPROCESSADO"
		endif
		TRACE4.SYSLOG_INDEX := build(SYSLOG.INDEX)
		TRACE4.FICHEIROSAIDA := tNameOut

		SYSLOG.REFERENCE := build(nMessageID)

		if tlError = "0" then
			print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE4.Detail
			print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE4.Detail
			print("Traduzida com Sucesso",NL) >> TRACE4.Detail
		else
			if tlError = "1" then
				print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE4.Detail
				print("Erro de Traducao",NL) >> TRACE4.Detail
			endif
		endif

		close(TRACE4.Detail)
		close(SYSLOG.a)

		copy(SYSLOG.a,TRACE4.In)
        close(SYSLOG.a)
        close(TRACE4.In)

		close(tFileOut)
		copy(tFileOut,TRACE4.Out)
		close(tFileOut)
		close(TRACE4.Out)

		flush(TRACE4)
	endfunction

!==============================================================================

function bfEnviaEmail(tlSubjectEmail, tlNameEmail, tlToEmail, tlCcEmail, tlEDISEND, tlPrintMessage, tlInput)
	remove(tArquivoEmailErro)
	tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/", tlNameEmail)
	print(tlPrintMessage, NL) >> tArquivoEmailErro
	copy(tlInput,tArquivoEmailErro)
	close(tlInput)
	close(tArquivoEmailErro)

	tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tlSubjectEmail,"\" EMAIL.NAME=",tlNameEmail,"  EMAIL.RCPT=",replace(replace(tlToEmail," ",""),";",",")," EMAIL.CC=",replace(replace(tlCcEmail," ",""),";",",")," ",tlEDISEND," ",tArquivoEmailErro)
	log("executing command ",tCmdEmailErro,NL)
	nRet := system(tCmdEmailErro)
	close(tArquivoEmailErro)				
	remove(tArquivoEmailErro)
endfunction

!==============================================================================

function bfEnviaEmailInLine(tlSubjectEmail, tlNameEmail, tlToEmail, tlCcEmail, tlEDISEND, tlPrintMessage, tlInput)
	remove(tArquivoEmailErro)
	tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/RESUMO_",time("now","%Y%m%d%H%M%S"),".csv")
	print(tlPrintMessage, NL) >> tArquivoEmailErro
	switch tlTrace
		case "1" :
			copy(tlInput,tArquivoEmailErro)
			close(tlInput)
		case "2" :
			copy(tlInput,tArquivoEmailErro)
			close(tlInput)
		case "3" :
			copy(tlInput,tArquivoEmailErro)
			close(tlInput)
	endswitch
	close(tArquivoEmailErro)

	tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tlSubjectEmail,"\" EMAIL.NAME=",tlNameEmail," EMAIL.CONTENTID=text/plain EMAIL.DISPOSITION=inline EMAIL.RCPT=",replace(replace(tlToEmail," ",""),";",",")," EMAIL.CC=",replace(replace(tlCcEmail," ",""),";",",")," ",tlEDISEND," ",tArquivoEmailErro)
	log("executing command ",tCmdEmailErro,NL)
	nRet := system(tCmdEmailErro)
	close(tArquivoEmailErro)				
	remove(tArquivoEmailErro)
endfunction

!==============================================================================

function bfToInfolog()
	tCmd := build("edisend ToInfolog ", tFileOut)
	log("executando o comando - ", tCmd, NL)
	system(tCmd)
endfunction

!==============================================================================

! ABAS BATIMENTO
	function bfBatimento_Resumo()
		tQuery := build("SELECT  SUBSTR(CHAR(CURRENT_TIMESTAMP),9,2)||'/'||SUBSTR(CHAR(CURRENT_TIMESTAMP),6,2)||'/'||LEFT(CHAR(CURRENT_TIMESTAMP),4) DATADIA",NL," "\
						"       ,RE.PRODUTO",NL," "\
						"       ,RE.PLANTA",NL," "\
						"       ,CASE WHEN RB.VALRUB IS NULL THEN AC.VALRUB  ELSE RB.VALRUB END DEPOSITO",NL," "\
						"       ,'0' LOTE",NL," "\
						"       ,CASE WHEN (RE.SITUACAO = 'LIV' OR RE.SITUACAO IS NULL) THEN CASE",NL," "\
						"             WHEN SUM(RE.QTDE_LIVRE + QTDE_CHK_CONF - QTDE_PUT_SEM_ITF - RE.QTD_ONDA_SEM_SEP) < 0 THEN 0  ELSE SUM(RE.QTDE_LIVRE + QTDE_CHK_CONF - QTDE_PUT_SEM_ITF - RE.QTD_ONDA_SEM_SEP) END  ELSE 0 END LIVRE",NL," "\
						"       ,CASE WHEN (RE.SITUACAO = 'LIV' OR RE.SITUACAO IS NULL) THEN SUM(RE.QTDE_LIVRE * PP.VOLUVC) / 10",NL," "\
						"             WHEN RE.SITUACAO = 'BLO' THEN SUM(RE.QTDE_BLOQ * PP.VOLUVC) / 10",NL," "\
						"             WHEN RE.SITUACAO = 'CQ' THEN SUM(RE.QTDE_CQ * PP.VOLUVC) / 10 END VOLUME",NL," "\
						"       ,CASE WHEN RE.SITUACAO = 'BLO' THEN SUM(RE.QTDE_BLOQ + QTDE_CHK_CONF - QTDE_PUT_SEM_ITF - RE.QTD_ONDA_SEM_SEP)  ELSE 0 END BLOQ",NL," "\
						"       ,CASE WHEN RE.SITUACAO = 'CQ' THEN SUM(RE.QTDE_CQ + QTDE_CHK_CONF - QTDE_PUT_SEM_ITF - RE.QTD_ONDA_SEM_SEP)  ELSE 0 END CQ",NL," "\
						"       ,SUM(RE.QTDE_REC_DIA) QTDE_ENT_DIA",NL," "\
						"       ,SUM(RE.QTDESEPDIA) QTDE_SAI_DIA",NL," "\
						"       ,RE.STATUS",NL," "\
						"       ,SUBSTR(CHAR(CURRENT_TIMESTAMP),9,2)||'/'||SUBSTR(CHAR(CURRENT_TIMESTAMP),6,2)||'/'||LEFT(CHAR(CURRENT_TIMESTAMP),4) || ' ' || SUBSTR(CHAR(CURRENT_TIMESTAMP),12,2)||':'||SUBSTR(CHAR(CURRENT_TIMESTAMP),15,2) DATAHORADIA",NL," "\
						"       ,EA.EDIPRO EAN_PRINCIPAL",NL," "\
						"FROM",NL," "\
						"(",NL," "\
						"        SELECT  CODPRO PRODUTO",NL," "\
						"               ,PL.CODACT PLANTA",NL," "\
						"               ,0 DEPOSITO",NL," "\
						"               ,'0' LOTE",NL," "\
						"               ,CASE WHEN (IM.EDIIMO = 'LIV' OR IM.EDIIMO IS NULL) THEN SUM(PL.UVCSTO)  ELSE 0 END QTDE_LIVRE",NL," "\
						"               ,CASE WHEN IM.EDIIMO = 'BLO' THEN SUM(PL.UVCSTO)  ELSE 0 END QTDE_BLOQ",NL," "\
						"               ,CASE WHEN IM.EDIIMO = 'CQ' THEN SUM(PL.UVCSTO)  ELSE 0 END QTDE_CQ",NL," "\
						"               ,0 QTDE_REC_DIA",NL," "\
						"               ,0 QTDE_PUT_SEM_ITF",NL," "\
						"               ,0 QTDE_CHK_CONF",NL," "\
						"               ,0 QTDESEPDIA",NL," "\
						"               ,0 QTD_ONDA_SEM_SEP",NL," "\
						"               ,0 QTD_SEM_ONDA",NL," "\
						"               ,CASE WHEN IM.EDIIMO IS NULL THEN 'NM'  ELSE PL.MOTIMM END STATUS",NL," "\
						"               ,CASE WHEN IM.EDIIMO IS NULL THEN 'LIV'  ELSE IM.EDIIMO END SITUACAO",NL," "\
						"        FROM FGE50FM",tToInfologPrefixFilename,".GEPAL PL",NL," "\
						"        LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
						"        ON IM.MOTIMM = PL.MOTIMM",NL," "\
						"        WHERE PL.CODACT = '",tCODACT,"'",NL," "\
						"        AND PL.ETAPAL NOT IN (50, 60)",NL," "\
						"        GROUP BY  CODPRO",NL," "\
						"                 ,PL.CODACT",NL," "\
						"                 ,PL.MOTIMM",NL," "\
						"                 ,IM.EDIIMO",NL," "\
						"        UNION ALL",NL," "\
						"        SELECT  PL.CODPRO PRODUTO",NL," "\
						"               ,PL.CODACT PLANTA",NL," "\
						"               ,0 DEPOSITO",NL," "\
						"               ,'0' LOTE",NL," "\
						"               ,0 QTDE_LIVRE",NL," "\
						"               ,0 QTDE_BLOQ",NL," "\
						"               ,0 QTDE_CQ",NL," "\
						"               ,CASE WHEN RD.ETAREC = 50 THEN SUM(PL.UVCSTO)  ELSE 0 END QTDE_REC_DIA",NL," "\
						"               ,CASE WHEN RD.ETAREC < 50 THEN SUM(PL.UVCSTO)  ELSE 0 END QTDE_PUT_SEM_ITF",NL," "\
						"               ,CASE WHEN RD.ETAREC = 50 THEN CASE",NL," "\
						"                     WHEN PL.ETAPAL = 50 THEN SUM(PL.UVCSTO)  ELSE 0 END END QTDE_CHK_CONF",NL," "\
						"               ,0 QTDESEPDIA",NL," "\
						"               ,0 QTD_ONDA_SEM_SEP",NL," "\
						"               ,0 QTD_SEM_ONDA",NL," "\
						"               ,CASE WHEN IM.EDIIMO IS NULL THEN 'NM'  ELSE PL.MOTIMM END STATUS",NL," "\
						"               ,CASE WHEN IM.EDIIMO IS NULL THEN 'LIV'  ELSE IM.EDIIMO END SITUACAO",NL," "\
						"        FROM FGE50FM",tToInfologPrefixFilename,".GEPAL PL",NL," "\
						"        INNER JOIN FGE50FM",tToInfologPrefixFilename,".GERECD RD",NL," "\
						"        ON PL.NUMREC = RD.NUMREC AND PL.SNUREC = RD.SNUREC AND PL.CODPRO = RD.CODPRO AND PL.CODACT = RD.CODACT",NL," "\
						"        LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GERECE RE",NL," "\
						"        ON RD.NUMREC = RE.NUMREC AND RD.SNUREC = RE.SNUREC",NL," "\
						"        LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
						"        ON IM.MOTIMM = PL.MOTIMM",NL," "\
						"        WHERE PL.CODACT = '",tCODACT,"'",NL," "\
						"        AND PL.ETAPAL <> 60",NL," "\
						"        GROUP BY  PL.CODPRO",NL," "\
						"                 ,PL.CODACT",NL," "\
						"                 ,IM.EDIIMO",NL," "\
						"                 ,PL.MOTIMM",NL," "\
						"                 ,RD.ETAREC",NL," "\
						"                 ,PL.ETAPAL",NL," "\
						"        UNION ALL",NL," "\
						"        SELECT  SD.CODPRO PRODUTO",NL," "\
						"               ,SE.CODACT PLANTA",NL," "\
						"               ,0 DEPOSITO",NL," "\
						"               ,'0' LOTE",NL," "\
						"               ,0 QTDE_LIVRE",NL," "\
						"               ,0 QTDE_BLOQ",NL," "\
						"               ,0 QTDE_CQ",NL," "\
						"               ,0 QTDE_REC_DIA",NL," "\
						"               ,0 QTDE_PUT_SEM_ITF",NL," "\
						"               ,0 QTDE_CHK_CONF",NL," "\
						"               ,SUM(SD.UVCLIV) QTDESEPDIA",NL," "\
						"               ,0 QTD_ONDA_SEM_SEP",NL," "\
						"               ,0 QTD_SEM_ONDA",NL," "\
						"               ,CASE WHEN IM.EDIIMO IS NULL THEN 'NM'  ELSE SD.MOTIMM END STATUS",NL," "\
						"               ,CASE WHEN IM.EDIIMO IS NULL THEN 'LIV'  ELSE IM.EDIIMO END SITUACAO",NL," "\
						"        FROM",NL," "\
						"        (",NL," "\
						"                SELECT  DATSUP2",NL," "\
						"                       ,TOULIV",NL," "\
						"                       ,NUMLIV",NL," "\
						"                       ,SNULIV",NL," "\
						"                       ,NUMTOU",NL," "\
						"                       ,CODACT",NL," "\
						"                       ,MIN (ETASUP) ETASUP",NL," "\
						"                FROM FGE50FM",tToInfologPrefixFilename,".GESUPE",NL," "\
						"                WHERE TYPSUP <> 3",NL," "\
						"                AND CLILIV <> 'MASSIFICATION'",NL," "\
						"                GROUP BY  DATSUP2",NL," "\
						"                         ,TOULIV",NL," "\
						"                         ,NUMLIV",NL," "\
						"                         ,SNULIV",NL," "\
						"                         ,NUMTOU",NL," "\
						"                         ,CODACT",NL," "\
						"        ) SE",NL," "\
						"        INNER JOIN FGE50FM",tToInfologPrefixFilename,".GESUPD SD",NL," "\
						"        ON SE.NUMLIV = SD.NUMLIV AND SE.SNULIV = SD.SNULIV AND SE.CODACT = SD.CODACT AND SE.NUMLIV = SD.NUMLIV",NL," "\
						"        LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
						"        ON IM.MOTIMM = SD.MOTIMM",NL," "\
						"        WHERE SE.ETASUP = 30",NL," "\
						"        AND SE.CODACT = '",tCODACT,"'",NL," "\
						"        AND SD.UVCLIV > 0",NL," "\
						"        GROUP BY  SD.CODPRO",NL," "\
						"                 ,SE.CODACT",NL," "\
						"                 ,SE.TOULIV",NL," "\
						"                 ,IM.EDIIMO",NL," "\
						"                 ,SD.MOTIMM",NL," "\
						"        UNION ALL",NL," "\
						"        SELECT  SD.CODPRO PRODUTO",NL," "\
						"               ,SD.CODACT PLANTA",NL," "\
						"               ,0 DEPOSITO",NL," "\
						"               ,'0' LOTE",NL," "\
						"               ,0 QTDE_LIVRE",NL," "\
						"               ,0 QTDE_BLOQ",NL," "\
						"               ,0 QTDE_CQ",NL," "\
						"               ,0 QTDE_REC_DIA",NL," "\
						"               ,0 QTDE_PUT_SEM_ITF",NL," "\
						"               ,0 QTDE_CHK_CONF",NL," "\
						"               ,0 QTDESEPDIA",NL," "\
						"               ,SUM( CASE SD.INDMAS WHEN '3' THEN D.UVCLIV ELSE SD.UVCLIV END) AS QTD_ONDA_SEM_SEP",NL," "\
						"               ,0 QTD_SEM_ONDA",NL," "\
						"               ,CASE WHEN SE.TYPSUP = 1 THEN CASE",NL," "\
						"                     WHEN IM2.EDIIMO IS NULL THEN 'NM'  ELSE PL.MOTIMM END  ELSE CASE",NL," "\
						"                     WHEN IM.EDIIMO IS NULL THEN 'NM'  ELSE SD.MOTIMM END END STATUS",NL," "\
						"               ,CASE WHEN SE.TYPSUP = 1 THEN CASE",NL," "\
						"                     WHEN IM2.EDIIMO IS NULL THEN 'LIV'  ELSE IM2.EDIIMO END  ELSE CASE",NL," "\
						"                     WHEN IM.EDIIMO IS NULL THEN 'LIV'  ELSE IM.EDIIMO END END SITUACAO",NL," "\
						"        FROM FGE50FM",tToInfologPrefixFilename,".GESUPE SE",NL," "\
						"        LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GESUPD SD",NL," "\
						"        ON SE.NUMSUP = SD.NUMSUP AND SE.SNUSUP = SD.SNUSUP AND SE.NUMLIV = SD.NUMLIV",NL," "\
						"        LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GESUPD D",NL," "\
						"        ON D.CPTMAS = SD.CPTMAS AND D.INDMAS = '1' AND D.CPTMAS > 0",NL," "\
						"        LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPAL PL",NL," "\
						"        ON SD.NUMPAL = PL.NUMPAL",NL," "\
						"        LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
						"        ON IM.MOTIMM = SD.MOTIMM",NL," "\
						"        LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM2",NL," "\
						"        ON IM2.MOTIMM = PL.MOTIMM",NL," "\
						"        WHERE SD.CODACT = '",tCODACT,"'",NL," "\
						"        AND SE.ETASUP < 30",NL," "\
						"        AND SD.UVCLIV > 0",NL," "\
						"        AND SD.NUMLIV <> 0",NL," "\
						"        AND SE.TYPSUP IN (1, 2)",NL," "\
						"        AND SD.INDMAS <> '1'",NL," "\
						"        AND SD.ZONSTS <> 'Z'",NL," "\
						"        GROUP BY  COALESCE(D.REFLIV,SD.REFLIV)",NL," "\
						"                 ,SD.CODPRO",NL," "\
						"                 ,SD.CODACT",NL," "\
						"                 ,IM.EDIIMO",NL," "\
						"                 ,SD.MOTIMM",NL," "\
						"                 ,IM2.EDIIMO",NL," "\
						"                 ,PL.MOTIMM",NL," "\
						"                 ,SE.TYPSUP",NL," "\
						") RE",NL," "\
						"INNER JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO PP",NL," "\
						"ON RE.PRODUTO = PP.CODPRO AND RE.PLANTA = PP.CODACT",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA",NL," "\
						"ON PP.CODPRO = EA.CODPRO AND PP.CODACT = EA.CODACT AND EA.EANDS1 = '12NC'",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU RB",NL," "\
						"ON RB.VALCLE = RE.STATUS AND RB.CODRUB = RE.PLANTA",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AC",NL," "\
						"ON AC.CODACT = RE.PLANTA AND AC.CODRUB = RE.PLANTA",NL," "\
						"WHERE RE.PRODUTO = PP.CODPRO",NL," "\
						"AND RE.PLANTA = PP.CODACT",NL," "\
						"GROUP BY  RE.PRODUTO",NL," "\
						"         ,RE.PLANTA",NL," "\
						"         ,AC.VALRUB",NL," "\
						"         ,RB.VALRUB",NL," "\
						"         ,RE.STATUS",NL," "\
						"         ,RE.SITUACAO",NL," "\
						"         ,EA.EDIPRO",NL," "\
						"ORDER BY RE.PRODUTO")

		log("------------------------------------------------------------", NL)
		log(tQuery,NL)
		log("------------------------------------------------------------", NL)

		if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif

		if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif

		bQueryTemResul := FALSE
		while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
			if bQueryTemResul = FALSE then
				bQueryTemResul := TRUE
				print("DATADIA;" \
						"PRODUTO;" \
						"PLANTA;" \
						"DEPOSITO;" \
						"LOTE;" \
						"LIVRE;" \
						"VOLUME;" \
						"BLOQ;" \
						"CQ;" \
						"QTDE_ENT_DIA;" \
						"QTDE_SAI_DIA;" \
						"STATUS;" \
						"DATAHORADIA;" \
						"EAN_PRINCIPAL;" \
						"",NL) >> TRACE.RESUMO

				fmbrasil_gama_ajustes_estoque := find(build(sHOME,"/fmbrasil_gama_ajustes_estoque/"),Planta=tCODACT)dINDEX
				if valid(fmbrasil_gama_ajustes_estoque) then
					close(fmbrasil_gama_ajustes_estoque.CSV)
					copy(fmbrasil_gama_ajustes_estoque.CSV, TRACE.CONTROLE_AJUSTES_WMS)
					close(TRACE.CONTROLE_AJUSTES_WMS)
					close(fmbrasil_gama_ajustes_estoque.CSV)
				endif
			endif
						
			if length(peel(taDb2Array["STATUS"]," ")) > 0 then
				fmbrasil_gama_ajustes_estoque := find(build(sHOME,"/fmbrasil_gama_ajustes_estoque/"),Produto=peel(taDb2Array["PRODUTO"]," "),Planta=peel(taDb2Array["PLANTA"]," "),STATUS=peel(taDb2Array["STATUS"]," "))
				while valid(fmbrasil_gama_ajustes_estoque) do
					taDb2Array[fmbrasil_gama_ajustes_estoque.COD_SIT_CLI] := peel(taDb2Array[fmbrasil_gama_ajustes_estoque.COD_SIT_CLI]," ")
					if (number(taDb2Array[fmbrasil_gama_ajustes_estoque.COD_SIT_CLI])-number(fmbrasil_gama_ajustes_estoque.Qtd)) >= 0 then
						taDb2Array[fmbrasil_gama_ajustes_estoque.COD_SIT_CLI] := build(number(taDb2Array[fmbrasil_gama_ajustes_estoque.COD_SIT_CLI])-number(fmbrasil_gama_ajustes_estoque.Qtd))
					endif
					fmbrasil_gama_ajustes_estoque.TRACEGIM := build(TRACE.INDEX)
					fmbrasil_gama_ajustes_estoque := find()
				endwhile
			else
				fmbrasil_gama_ajustes_estoque := find(build(sHOME,"/fmbrasil_gama_ajustes_estoque/"),Produto=peel(taDb2Array["PRODUTO"]," "),Planta=peel(taDb2Array["PLANTA"]," "),STATUS="")
				while valid(fmbrasil_gama_ajustes_estoque) do
					if length(fmbrasil_gama_ajustes_estoque.STATUS) > 0 and (number(taDb2Array["LIVRE"])-number(fmbrasil_gama_ajustes_estoque.Qtd)) >= 0 then
						taDb2Array["LIVRE"] := peel(taDb2Array["LIVRE"]," ")
						taDb2Array["LIVRE"] := build(number(taDb2Array["LIVRE"])-number(fmbrasil_gama_ajustes_estoque.Qtd))
					endif
					fmbrasil_gama_ajustes_estoque.TRACEGIM := build(TRACE.INDEX)
					fmbrasil_gama_ajustes_estoque := find()
				endwhile
			endif
						
			print(peel(taDb2Array["DATADIA"]," "),";", \
					peel(taDb2Array["PRODUTO"]," "),";", \
					peel(taDb2Array["PLANTA"]," "),";", \
					peel(taDb2Array["DEPOSITO"]," "),";", \
					peel(taDb2Array["LOTE"]," "),";", \
					peel(taDb2Array["LIVRE"]," "),";", \
					peel(taDb2Array["VOLUME"]," "),";", \
					peel(taDb2Array["BLOQ"]," "),";", \
					peel(taDb2Array["CQ"]," "),";", \
					peel(taDb2Array["QTDE_ENT_DIA"]," "),";", \
					peel(taDb2Array["QTDE_SAI_DIA"]," "),";", \
					peel(taDb2Array["STATUS"]," "),";", \
					peel(taDb2Array["DATAHORADIA"]," "),";", \
					peel(taDb2Array["EAN_PRINCIPAL"]," "),";", \
					NL) >> TRACE.RESUMO

			remove(taDb2Array)
		endwhile

		if bQueryTemResul = FALSE then
			print("Consulta não retornou resultados",NL) >> TRACE.RESUMO
		endif
				
		! Acrescenta CSV entradas que nao foram processadas
		fmbrasil_gama_ajustes_estoque := find(build(sHOME,"/fmbrasil_gama_ajustes_estoque/"),Planta=tCODACT)
		while valid(fmbrasil_gama_ajustes_estoque) do
			if fmbrasil_gama_ajustes_estoque.TRACEGIM <> build(TRACE.INDEX) then
				if fmbrasil_gama_ajustes_estoque.COD_SIT_CLI = "LIVRE" and number(fmbrasil_gama_ajustes_estoque.Qtd) <= 0 then
					print(fmbrasil_gama_ajustes_estoque.Data,";", \
							fmbrasil_gama_ajustes_estoque.Produto,";", \
							fmbrasil_gama_ajustes_estoque.Planta,";", \
							fmbrasil_gama_ajustes_estoque.Deposito,";", \
							fmbrasil_gama_ajustes_estoque.Lote,";", \
							"",";", \
							replace(fmbrasil_gama_ajustes_estoque.Qtd,"-",""),";", \
							"",";", \
							"",";", \
							"",";", \
							"",";", \
							fmbrasil_gama_ajustes_estoque.STATUS,";", \
							"",";", \
							NL) >> TRACE.RESUMO
				endif
				if fmbrasil_gama_ajustes_estoque.COD_SIT_CLI = "BLOQ" and number(fmbrasil_gama_ajustes_estoque.Qtd) <= 0 then
					print(fmbrasil_gama_ajustes_estoque.Data,";", \
							fmbrasil_gama_ajustes_estoque.Produto,";", \
							fmbrasil_gama_ajustes_estoque.Planta,";", \
							fmbrasil_gama_ajustes_estoque.Deposito,";", \
							fmbrasil_gama_ajustes_estoque.Lote,";", \
							"",";", \
							"",";", \
							replace(fmbrasil_gama_ajustes_estoque.Qtd,"-",""),";", \
							"",";", \
							"",";", \
							"",";", \
							fmbrasil_gama_ajustes_estoque.STATUS,";", \
							"",";", \
							NL) >> TRACE.RESUMO
				endif
			endif									
			fmbrasil_gama_ajustes_estoque := find()
		endwhile
				
		close(TRACE.RESUMO)

		if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif

		if bQueryTemResul = TRUE then
			bfEnviaEmail(build("[",tBeginSubj_batimento,"]_RESUMO"), \
							build("RESUMO_",time("now","%Y%m%d%H%M%S"),".csv"), \
							tToEmail_batimento, \
							tCcEmail_batimento, \
							"EmailResumo", \
							"", \
							TRACE.RESUMO)
		else
			bfEnviaEmailInLine(build("[",tBeginSubj_batimento,"]_RESUMO"), \
								build("RESUMO_",time("now","%Y%m%d%H%M%S"),".csv"), \
								tToEmail_batimento, \
								tCcEmail_batimento, \
								"EmailResumo", \
								build("***Informações de Resumo no Dia***",NL,NL,"***Não há dados para emissão do arquivo***",NL,NL,"Processo gerado automaticamente, não utilize a opção responder a este remetente.",NL,NL), \
								TRACE.RESUMO)
		endif
	endfunction

	!==============================================================================

	function bfBatimento_EstoqueProduto()

		tQuery := build("SELECT  SUBSTR(CHAR(CURRENT_TIMESTAMP),9,2)||'/'||SUBSTR(CHAR(CURRENT_TIMESTAMP),6,2)||'/'||LEFT(CHAR(CURRENT_TIMESTAMP),4) DTMVTO",NL," "\
						"       ,PL.CODPRO PRODUTO",NL," "\
						"       ,PL.CODACT PLANTA",NL," "\
						"       ,CASE WHEN RB.VALRUB IS NULL THEN AC.VALRUB  ELSE RB.VALRUB END DEPOSITO",NL," "\
						"       ,'' LOTE",NL," "\
						"       ,CASE WHEN IM.EDIIMO IS NULL THEN 'LIV'  ELSE IM.EDIIMO END COD_SIT_CLI",NL," "\
						"       ,SUM(PL.UVCSTO) QUANTIDADE",NL," "\
						"       ,PL.MOTIMM STATUS",NL," "\
						"       ,EA.EDIPRO EAN_PRINCIPAL",NL," "\
						"FROM FGE50FM",tToInfologPrefixFilename,".GEPAL PL",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
						"    ON IM.MOTIMM = PL.MOTIMM",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU RB",NL," "\
						"    ON IM.MOTIMM = RB.VALCLE",NL," "\
						"    AND RB.VALCLE = PL.MOTIMM",NL," "\
						"    AND RB.CODRUB = PL.CODACT",NL," "\
						"    AND RB.CODRUB = PL.CODACT",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AC",NL," "\
						"    ON AC.CODACT = PL.CODACT",NL," "\
						"    AND AC.CODRUB = PL.CODACT",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA",NL," "\
						"    ON PL.CODPRO = EA.CODPRO",NL," "\
						"    AND PL.CODACT = EA.CODACT",NL," "\
						"    AND EA.EANDS1 = '12NC'",NL," "\
						"WHERE PL.ETAPAL NOT IN (50, 60)",NL," "\
						"AND PL.CODACT = '",tCODACT,"'",NL," "\
						"GROUP BY  PL.CODPRO",NL," "\
						"         ,PL.CODACT",NL," "\
						"         ,RB.VALRUB",NL," "\
						"         ,AC.VALRUB",NL," "\
						"         ,IM.EDIIMO",NL," "\
						"         ,PL.MOTIMM",NL," "\
						"         ,EA.EDIPRO",NL," "\
						"ORDER BY 3",NL," "\
						"         ,2")

		log("------------------------------------------------------------", NL)
		log(tQuery,NL)
		log("------------------------------------------------------------", NL)

		if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif

		if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif

		bQueryTemResul := FALSE
		while bfSqlFetchArray(tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
			if bQueryTemResul = FALSE then
				bQueryTemResul := TRUE
				print("DTMVTO;"\
						"PRODUTO;"\
						"PLANTA;"\
						"DEPOSITO;"\
						"LOTE;"\
						"COD_SIT_CLI;"\
						"QUANTIDADE;"\
						"STATUS;"\
						"EAN_PRINCIPAL;"\
						"", NL) >> TRACE.ESTOQUE_PRODUTO
			endif
						
			print(peel(taDb2Array["DTMVTO"]," "),";", \
					peel(taDb2Array["PRODUTO"]," "),";", \
					peel(taDb2Array["PLANTA"]," "),";", \
					peel(taDb2Array["DEPOSITO"]," "),";", \
					peel(taDb2Array["LOTE"]," "),";", \
					peel(taDb2Array["COD_SIT_CLI"]," "),";", \
					peel(taDb2Array["QUANTIDADE"]," "),";", \
					peel(taDb2Array["STATUS"]," "),";", \
					peel(taDb2Array["EAN_PRINCIPAL"]," "),";", NL) >> TRACE.ESTOQUE_PRODUTO

			remove(taDb2Array)
		endwhile

		if bQueryTemResul = FALSE then
			print("Consulta não retornou resultados",NL) >> TRACE.ESTOQUE_PRODUTO
		endif

		close(TRACE.ESTOQUE_PRODUTO)

		if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif	
	endfunction

	!==============================================================================

	function bfBatimento_PaleteLocacao()

		tQuery := build("SELECT  SUBSTR(CHAR(CURRENT_TIMESTAMP),9,2)||'/'||SUBSTR(CHAR(CURRENT_TIMESTAMP),6,2)||'/'||LEFT(CHAR(CURRENT_TIMESTAMP),4) DTMVTO",NL," "\
						"       ,PL.CODPRO PRODUTO",NL," "\
						"       ,PL.CODACT PLANTA",NL," "\
						"       ,CASE",NL," "\
						"            WHEN RB.VALRUB IS NULL",NL," "\
						"            THEN AC.VALRUB",NL," "\
						"            ELSE RB.VALRUB",NL," "\
						"        END DEPOSITO",NL," "\
						"       ,PL.CODLOT LOTE",NL," "\
						"       ,CASE",NL," "\
						"            WHEN IM.EDIIMO IS NULL",NL," "\
						"            THEN 'LIV'",NL," "\
						"            ELSE IM.EDIIMO",NL," "\
						"        END COD_SIT_CLI",NL," "\
						"       ,PL.ZONSTS ||'-'|| RIGHT('000' || PL.ALLSTS,3) ||'-'|| RIGHT('0000' || PL.DPLSTS,4) ||'-'|| RIGHT('00' || PL.NIVSTS,2) LOCALIZACAO",NL," "\
						"       ,PL.UVCSTO QUANTIDADE",NL," "\
						"       ,PL.MOTIMM STATUS",NL," "\
						"       ,PL.CODPAL PALETE",NL," "\
						"       ,EA.EDIPRO EAN_PRINCIPAL",NL," "\
						"FROM FGE50FM",tToInfologPrefixFilename,".GEPAL PL",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
						"    ON IM.MOTIMM = PL.MOTIMM",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU RB",NL," "\
						"    ON IM.MOTIMM = RB.VALCLE",NL," "\
						"    AND RB.VALCLE = PL.MOTIMM",NL," "\
						"    AND RB.CODRUB = PL.CODACT",NL," "\
						"    AND RB.CODRUB = PL.CODACT",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AC",NL," "\
						"    ON AC.CODACT = PL.CODACT",NL," "\
						"    AND AC.CODRUB = PL.CODACT",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA",NL," "\
						"    ON PL.CODPRO = EA.CODPRO",NL," "\
						"    AND PL.CODACT = EA.CODACT",NL," "\
						"    AND EA.EANDS1 = '12NC'",NL," "\
						"WHERE PL.ETAPAL NOT IN (50, 60)",NL," "\
						"AND PL.CODACT = '",tCODACT,"'",NL," "\
						"ORDER BY 3, 2")

		log("------------------------------------------------------------", NL)
		log(tQuery,NL)
		log("------------------------------------------------------------", NL)

		if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif

		if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif

		bQueryTemResul := FALSE
		while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
			if bQueryTemResul = FALSE then
				bQueryTemResul := TRUE
				print("DTMVTO;" \
						"PRODUTO;" \
						"PLANTA;" \
						"DEPOSITO;" \
						"LOTE;" \
						"COD_SIT_CLI;" \
						"LOCALIZACAO;" \
						"QUANTIDADE;" \
						"STATUS;" \
						"PALETE;" \
						"EAN_PRINCIPAL;" \
						"",NL) >> TRACE.ESTOQUE_PALETE_LOCACAO
			endif
			print(peel(taDb2Array["DTMVTO"]," "),";", \
					peel(taDb2Array["PRODUTO"]," "),";", \
					peel(taDb2Array["PLANTA"]," "),";", \
					peel(taDb2Array["DEPOSITO"]," "),";", \
					peel(taDb2Array["LOTE"]," "),";", \
					peel(taDb2Array["COD_SIT_CLI"]," "),";", \
					peel(taDb2Array["LOCALIZACAO"]," "),";", \
					peel(taDb2Array["QUANTIDADE"]," "),";", \
					peel(taDb2Array["STATUS"]," "),";", \
					peel(taDb2Array["PALETE"]," "),";", \
					peel(taDb2Array["EAN_PRINCIPAL"]," "),";", NL) >> TRACE.ESTOQUE_PALETE_LOCACAO

			remove(taDb2Array)
		endwhile

		if bQueryTemResul = FALSE then
			print("Consulta não retornou resultados",NL) >> TRACE.ESTOQUE_PALETE_LOCACAO
		endif
				
		close(TRACE.ESTOQUE_PALETE_LOCACAO)

		if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif
	endfunction

	!==============================================================================

	function bfBatimento_Checkin()
		
		tNomeQuery := "CHECKIN_CONF"
		tQuery := build("SELECT  RD.DATREC DATA",NL," "\
						"       ,PL.REFREC BL",NL," "\
						"       ,PL.CODPRO PRODUTO",NL," "\
						"       ,PL.CODACT PLANTA",NL," "\
						"       ,RB.VALRUB DEPOSITO",NL," "\
						"       ,PL.CODLOT LOTE",NL," "\
						"       ,CASE",NL," "\
						"        WHEN IM.EDIIMO IS NULL THEN 'LIV' ",NL," "\
						"        ELSE IM.EDIIMO",NL," "\
						"        END COD_SIT_CLI",NL," "\
						"       ,SUM(PL.UVCSTO) QUANTIDADE",NL," "\
						"       ,PL.MOTIMM STATUS",NL," "\
						"        ,EA.EDIPRO EAN_PRINCIPAL ",NL," "\
						" FROM   FGE50FM",tToInfologPrefixFilename,".GEPAL PL INNER JOIN FGE50FM",tToInfologPrefixFilename,".GERECD RD",NL," "\
						" ON     PL.NUMREC=RD.NUMREC",NL," "\
						" AND    PL.CODPRO=RD.CODPRO",NL," "\
						" AND    PL.CODACT=RD.CODACT",NL," "\
						" LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
						" ON     IM.MOTIMM=PL.MOTIMM",NL," "\
						" LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU RB",NL," "\
						" ON     IM.MOTIMM=RB.VALCLE",NL," "\
						" AND    RB.VALCLE=PL.MOTIMM",NL," "\
						" AND    RB.CODRUB=PL.CODACT",NL," "\
						" AND    RB.CODRUB=RD.CODACT",NL," "\
						" LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA",NL," "\
						" ON    PL.CODPRO = EA.CODPRO",NL," "\
						" AND   PL.CODACT = EA.CODACT",NL," "\
						" AND   EA.EANDS1 = '12NC' ",NL," "\
						" WHERE  RD.ETAREC=50",NL," "\
						" AND    PL.ETAPAL=50",NL," "\
						" AND    PL.CODACT='",tCODACT,"'",NL," "\
						" GROUP BY RD.DATREC",NL," "\
						"		,PL.CODPRO",NL," "\
						"		,PL.REFREC",NL," "\
						"        ,PL.CODACT",NL," "\
						"        ,RB.VALRUB",NL," "\
						"        ,PL.CODLOT",NL," "\
						"        ,IM.EDIIMO",NL," "\
						"        ,PL.MOTIMM,EA.EDIPRO",NL," "\
						" ORDER BY 1,2,3")

		log("------------------------------------------------------------", NL)
		log(tQuery,NL)
		log("------------------------------------------------------------", NL)

		if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif

		if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif

		bQueryTemResul := FALSE
		while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
			if bQueryTemResul = FALSE then
				bQueryTemResul := TRUE
				print("DATA;" \
						"BL;" \
						"PRODUTO;" \
						"PLANTA;" \
						"DEPOSITO;" \
						"LOTE;" \
						"COD_SIT_CLI;" \
						"QUANTIDADE;" \
						"STATUS;" \
						"",NL) >> TRACE.CHECKIN_CONF_SOMA
			endif
			print(peel(taDb2Array["DATA"]," "),";", \
					peel(taDb2Array["BL"]," "),";", \
					peel(taDb2Array["PRODUTO"]," "),";", \
					peel(taDb2Array["PLANTA"]," "),";", \
					peel(taDb2Array["DEPOSITO"]," "),";", \
					peel(taDb2Array["LOTE"]," "),";", \
					peel(taDb2Array["COD_SIT_CLI"]," "),";", \
					peel(taDb2Array["QUANTIDADE"]," "),";", \
					peel(taDb2Array["STATUS"]," "),";", NL) >> TRACE.CHECKIN_CONF_SOMA

			remove(taDb2Array)
		endwhile

		if bQueryTemResul = FALSE then
			print("Consulta não retornou resultados",NL) >> TRACE.CHECKIN_CONF_SOMA
		endif

		close(TRACE.CHECKIN_CONF_SOMA)

		if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif
	endfunction

	!==============================================================================

	function bfBatimento_Putaway()
		
		tNomeQuery := "PUTAWAY_SEM_INTERFACE"
		tQuery := build("SELECT  RE.REFREC",NL," "\
						"	   ,PL.CODPRO PRODUTO",NL," "\
						"       ,PL.CODACT PLANTA",NL," "\
						"      ,CASE",NL," "\
						"       WHEN RB.VALRUB IS NULL THEN AC.VALRUB ",NL," "\
						"       ELSE RB.VALRUB ",NL," "\
						"       END DEPOSITO      ",NL," "\
						"       ,'' LOTE",NL," "\
						"       ,SUM(PL.UVCSTO) QTDE_PUT_SEM_ITF",NL," "\
						"       ,CASE WHEN IM.EDIIMO IS NULL THEN 'NM'",NL," "\
						"        	ELSE PL.MOTIMM",NL," "\
						"        END STATUS",NL," "\
						"	  ,CASE WHEN IM.EDIIMO IS NULL THEN 'LIV'",NL," "\
						"       ELSE IM.EDIIMO  END SITUACAO",NL," "\
						"      ,EA.EDIPRO EAN_PRINCIPAL ",NL," "\
						" FROM   FGE50FM",tToInfologPrefixFilename,".GEPAL PL INNER JOIN FGE50FM",tToInfologPrefixFilename,".GERECD RD",NL," "\
						"		ON     PL.NUMREC=RD.NUMREC",NL," "\
						"		AND    PL.SNUREC=RD.SNUREC",NL," "\
						"		AND    PL.CODPRO=RD.CODPRO",NL," "\
						"		AND    PL.CODACT=RD.CODACT",NL," "\
						"		LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GERECE RE",NL," "\
						"		ON     RD.NUMREC=RE.NUMREC",NL," "\
						"		AND    RD.SNUREC=RE.SNUREC",NL," "\
						"		LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
						"		ON     IM.MOTIMM=PL.MOTIMM",NL," "\
						"		LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU RB",NL," "\
						"		ON     IM.MOTIMM=RB.VALCLE",NL," "\
						"		AND    RB.VALCLE=PL.MOTIMM",NL," "\
						"		AND    RB.CODRUB=PL.CODACT",NL," "\
						"		AND    RB.CODRUB=RD.CODACT",NL," "\
						"		LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AC",NL," "\
						"		ON     AC.CODACT =PL.CODACT",NL," "\
						"		LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA ",NL," "\
						"		ON    PL.CODPRO = EA.CODPRO ",NL," "\
						"		AND   PL.CODACT = EA.CODACT ",NL," "\
						"		AND   EA.EANDS1 = '12NC'  ",NL," "\
						" WHERE  PL.CODACT = '",tCODACT,"'",NL," "\
						" AND    RE.ETAREC < 50",NL," "\
						" GROUP BY RE.REFREC,",NL," "\
						"		 PL.CODPRO ",NL," "\
						"        ,PL.CODACT ",NL," "\
						"        ,IM.EDIIMO ",NL," "\
						"        ,PL.MOTIMM ",NL," "\
						"        ,RB.VALRUB ",NL," "\
						"        ,AC.VALRUB,EA.EDIPRO")

		log("------------------------------------------------------------", NL)
		log(tQuery,NL)
		log("------------------------------------------------------------", NL)

		if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif

		if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif

		bQueryTemResul := FALSE
		while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
			if bQueryTemResul = FALSE then
				bQueryTemResul := TRUE
				print("REFREC;" \
						"PRODUTO;" \
						"PLANTA;" \
						"DEPOSITO;" \
						"LOTE;" \
						"QTDE_PUT_SEM_ITF;" \
						"STATUS;" \
						"SITUACAO;" \
						"EAN_PRINCIPAL;" \
						"", NL) >> TRACE.PUTAWAY_SEM_INTERFACE_SUBTRAI
			endif

			print(peel(taDb2Array["REFREC"]," "),";", \
					peel(taDb2Array["PRODUTO"]," "),";", \
					peel(taDb2Array["PLANTA"]," "),";", \
					peel(taDb2Array["DEPOSITO"]," "),";", \
					peel(taDb2Array["LOTE"]," "),";", \
					peel(taDb2Array["QTDE_PUT_SEM_ITF"]," "),";", \
					peel(taDb2Array["STATUS"]," "),";", \
					peel(taDb2Array["SITUACAO"]," "),";", \
					peel(taDb2Array["EAN_PRINCIPAL"]," "),";", NL) >> TRACE.PUTAWAY_SEM_INTERFACE_SUBTRAI

			remove(taDb2Array)
		endwhile

		if bQueryTemResul = FALSE then
			print("Consulta não retornou resultados",NL) >> TRACE.PUTAWAY_SEM_INTERFACE_SUBTRAI
		endif

		close(TRACE.PUTAWAY_SEM_INTERFACE_SUBTRAI)

		if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif
	endfunction

	!==============================================================================

	function bfBatimento_SeparadoNaoConf()

		tNomeQuery := "SEPARADO_NÃO_CONF"
		tQuery := build("SELECT  CASE WHEN SE.DATSUP2 = 0 THEN se.DATPRP  ELSE SE.DATSUP2 END DATE_TIME_CREATED",NL," "\
						"       ,SD.CODPRO PRODUTO",NL," "\
						"       ,SE.CODACT PLANTA",NL," "\
						"       ,COALESCE(RB.VALRUB,AC.VALRUB) DEPOSITO",NL," "\
						"       ,'' LOTE",NL," "\
						"       ,CASE WHEN SE.TYPSUP = 1 THEN COALESCE(IM2.EDIIMO,'LIV')  ELSE COALESCE(IM.EDIIMO ,'LIV') END COD_SIT_CLI",NL," "\
						"       ,SUM(sd.uvcliv) QUANTIDADE",NL," "\
						"       ,SE.REFLIV PEDIDO",NL," "\
						"       ,EA.EDIPRO EAN_PRINCIPAL",NL," "\
						"FROM FGE50FM",tToInfologPrefixFilename,".GESUPE SE",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GESUPD SD",NL," "\
						"ON SE.NUMSUP = SD.NUMSUP AND SE.SNUSUP = SD.SNUSUP AND SE.NUMLIV = SD.NUMLIV",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPAL PL",NL," "\
						"ON SD.NUMPAL = PL.NUMPAL",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
						"ON IM.MOTIMM = SD.MOTIMM",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM2",NL," "\
						"ON IM2.MOTIMM = PL.MOTIMM",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU RB",NL," "\
						"ON IM.MOTIMM = RB.VALCLE AND RB.VALCLE = SD.MOTIMM AND RB.CODRUB = SD.CODACT AND RB.CODRUB = SE.CODACT",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AC",NL," "\
						"ON AC.CODACT = SE.CODACT",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA",NL," "\
						"ON SD.CODPRO = EA.CODPRO AND EA.EANDS1 = '12NC'",NL," "\
						"WHERE SD.CODACT = '",tCODACT,"'",NL," "\
						"AND se.etasup = 30",NL," "\
						"AND SD.UVCLIV > 0",NL," "\
						"AND SD.NUMLIV <> 0",NL," "\
						"AND se.typsup IN (1, 2)",NL," "\
						"AND sd.indMas <> '1'",NL," "\
						"GROUP BY  CASE WHEN SE.DATSUP2 = 0 THEN se.DATPRP  ELSE SE.DATSUP2 END",NL," "\
						"         ,SD.CODPRO",NL," "\
						"         ,SE.CODACT",NL," "\
						"         ,COALESCE(RB.VALRUB,AC.VALRUB)",NL," "\
						"         ,CASE WHEN SE.TYPSUP = 1 THEN COALESCE(IM2.EDIIMO,'LIV')  ELSE COALESCE(IM.EDIIMO ,'LIV') END",NL," "\
						"         ,SE.REFLIV",NL," "\
						"         ,EA.EDIPRO",NL," "\
						"ORDER BY 1",NL," "\
						"         ,2",NL," "\
						"         ,3",NL," "\
						"         ,4")

		log("------------------------------------------------------------", NL)
		log(tQuery,NL)
		log("------------------------------------------------------------", NL)

		if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif

		if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif

		bQueryTemResul := FALSE
		while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
			if bQueryTemResul = FALSE then
				bQueryTemResul := TRUE
				print("DATE_TIME_CREATED;" \
						"PRODUTO;" \
						"PLANTA;" \
						"DEPOSITO;" \
						"LOTE;" \
						"COD_SIT_CLI;" \
						"QUANTIDADE;" \
						"PEDIDO;" \
						"EAN_PRINCIPAL",NL) >> TRACE.SEPARADO_NAO_CONF_SOMA
			endif
			print(peel(taDb2Array["DATE_TIME_CREATED"]," "),";", \
					peel(taDb2Array["PRODUTO"]," "),";", \
					peel(taDb2Array["PLANTA"]," "),";", \
					peel(taDb2Array["DEPOSITO"]," "),";", \
					peel(taDb2Array["LOTE"]," "),";", \
					peel(taDb2Array["COD_SIT_CLI"]," "),";", \
					peel(taDb2Array["QUANTIDADE"]," "),";", \
					peel(taDb2Array["PEDIDO"]," "),";", \
					peel(taDb2Array["EAN_PRINCIPAL"]," "),";", NL) >> TRACE.SEPARADO_NAO_CONF_SOMA

			remove(taDb2Array)
		endwhile

		if bQueryTemResul = FALSE then
			print("Consulta não retornou resultados",NL) >> TRACE.SEPARADO_NAO_CONF_SOMA
		endif

		close(TRACE.SEPARADO_NAO_CONF_SOMA)

		if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif
	endfunction

	!==============================================================================

	function bfBatimento_OndaSolta()
						
		tQuery := build("SELECT  SUBSTR(CHAR(CURRENT_TIMESTAMP),9,2)||'/'||SUBSTR(CHAR(CURRENT_TIMESTAMP),6,2)||'/'||LEFT(CHAR(CURRENT_TIMESTAMP),4) DATADIA",NL," "\
						"       ,COALESCE(D.REFLIV,SD.REFLIV) PO_NO",NL," "\
						"       ,SD.CODPRO PRODUTO",NL," "\
						"       ,SD.CODACT PLANTA",NL," "\
						"       ,SE.TYPSUP",NL," "\
						"       ,CASE WHEN RB.VALRUB IS NULL THEN AC.VALRUB  ELSE RB.VALRUB END DEPOSITO",NL," "\
						"       ,'' LOTE",NL," "\
						"       ,CASE WHEN SE.TYPSUP = 1 THEN COALESCE(IM2.EDIIMO,'LIV')  ELSE COALESCE( IM.EDIIMO,'LIV') END COD_SIT_CLI",NL," "\
						"       ,SUM( CASE SD.INDMAS WHEN '3' THEN D.UVCLIV ELSE SD.UVCLIV END) AS QTD",NL," "\
						"       ,CASE WHEN SE.TYPSUP = 1 THEN CASE",NL," "\
						"             WHEN IM2.EDIIMO IS NULL THEN 'NM'  ELSE PL.MOTIMM END  ELSE CASE",NL," "\
						"             WHEN IM.EDIIMO IS NULL THEN 'NM'  ELSE SD.MOTIMM END END MOTIMM",NL," "\
						"       ,EA.EDIPRO EAN_PRINCIPAL",NL," "\
						"FROM FGE50FM",tToInfologPrefixFilename,".GESUPE SE",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GESUPD SD",NL," "\
						"    ON SE.NUMSUP = SD.NUMSUP",NL," "\
						"    AND SE.SNUSUP = SD.SNUSUP",NL," "\
						"    AND SE.NUMLIV = SD.NUMLIV",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GESUPD D",NL," "\
						"    ON D.CPTMAS = SD.CPTMAS",NL," "\
						"    AND D.INDMAS = '1'",NL," "\
						"    AND D.CPTMAS > 0",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPAL PL",NL," "\
						"    ON SD.NUMPAL = PL.NUMPAL",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
						"    ON IM.MOTIMM = SD.MOTIMM",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM2",NL," "\
						"    ON IM2.MOTIMM = PL.MOTIMM",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU RB",NL," "\
						"    ON IM.MOTIMM = RB.VALCLE",NL," "\
						"    AND RB.VALCLE = SD.MOTIMM",NL," "\
						"    AND RB.CODRUB = SD.CODACT",NL," "\
						"    AND RB.CODRUB = SE.CODACT",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AC",NL," "\
						"    ON AC.CODACT = SE.CODACT",NL," "\
						"    AND AC.CODRUB = SE.CODACT",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA",NL," "\
						"    ON SD.CODPRO = EA.CODPRO",NL," "\
						"    AND EA.EANDS1 = '12NC'",NL," "\
						"WHERE SD.CODACT = '",tCODACT,"'",NL," "\
						"AND SE.ETASUP < 30",NL," "\
						"AND SD.UVCLIV > 0",NL," "\
						"AND SD.NUMLIV <> 0",NL," "\
						"AND SE.TYPSUP IN (1, 2)",NL," "\
						"AND SD.INDMAS <> '1'",NL," "\
						"AND SD.ZONSTS <> 'Z'",NL," "\
						"GROUP BY  COALESCE(D.REFLIV,SD.REFLIV)",NL," "\
						"         ,SD.CODPRO",NL," "\
						"         ,SD.CODACT",NL," "\
						"         ,RB.VALRUB",NL," "\
						"         ,AC.VALRUB",NL," "\
						"         ,IM.EDIIMO",NL," "\
						"         ,SD.MOTIMM",NL," "\
						"         ,IM2.EDIIMO",NL," "\
						"         ,PL.MOTIMM",NL," "\
						"         ,SE.TYPSUP",NL," "\
						"         ,EA.EDIPRO",NL," "\
						"ORDER BY 1",NL," "\
						"         ,2",NL," "\
						"         ,3",NL," "\
						"         ,4")

		log("------------------------------------------------------------", NL)
		log(tQuery,NL)
		log("------------------------------------------------------------", NL)

		if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif

		if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif

		bQueryTemResul := FALSE
		while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
			if bQueryTemResul = FALSE then
				bQueryTemResul := TRUE
				print("DATADIA;" \
						"PO_NO;" \
						"PRODUTO;" \
						"PLANTA;" \
						"TYPSUP;" \
						"DEPOSITO;" \
						"LOTE;" \
						"COD_SIT_CLI;" \
						"QTD;" \
						"MOTIMM;" \
						"EAN_PRINCIPAL;" \
						"",NL) >> TRACE.ONDA_SOLTA_CONFIRMADOS_SEM_SEP_SUBTRAI
			endif
			print(peel(taDb2Array["DATADIA"]," "),";", \
					peel(taDb2Array["PO_NO"]," "),";", \
					peel(taDb2Array["PRODUTO"]," "),";", \
					peel(taDb2Array["PLANTA"]," "),";", \
					peel(taDb2Array["TYPSUP"]," "),";", \
					peel(taDb2Array["DEPOSITO"]," "),";", \
					peel(taDb2Array["LOTE"]," "),";", \
					peel(taDb2Array["COD_SIT_CLI"]," "),";", \
					peel(taDb2Array["QTD"]," "),";", \
					peel(taDb2Array["MOTIMM"]," "),";", \
					peel(taDb2Array["EAN_PRINCIPAL"]," "),";", NL) >> TRACE.ONDA_SOLTA_CONFIRMADOS_SEM_SEP_SUBTRAI

			remove(taDb2Array)
		endwhile

		if bQueryTemResul = FALSE then
			print("Consulta não retornou resultados",NL) >> TRACE.ONDA_SOLTA_CONFIRMADOS_SEM_SEP_SUBTRAI
		endif

		close(TRACE.ONDA_SOLTA_CONFIRMADOS_SEM_SEP_SUBTRAI)

		if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif

	endfunction

	!==============================================================================

	function bfBatimento_PedidoSemOnda()
						
		tQuery := build("SELECT  LE.REFLIV",NL," "\
				"       ,LD.CODPRO PRODUTO",NL," "\
				"       ,LE.CODACT PLANTA",NL," "\
				"       ,0 DEPOSITO",NL," "\
				"       ,'0' LOTE",NL," "\
				"       ,SUM(LD.UVCCDE) QTD_SEM_ONDA",NL," "\
				"       ,'NM' STATUS",NL," "\
				"       ,'LIV' SITUACAO",NL," "\
				"       ,EA.EDIPRO EAN_PRINCIPAL",NL," "\
				"FROM FGE50FM",tToInfologPrefixFilename,".GELIVE LE",NL," "\
				"INNER JOIN FGE50FM",tToInfologPrefixFilename,".GELIVD LD",NL," "\
				"ON LE.NUMLIV = LD.NUMLIV AND LE.SNULIV = LD.SNULIV",NL," "\
				"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AC",NL," "\
				"ON AC.CODACT = LE.CODACT",NL," "\
				"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA",NL," "\
				"ON LD.CODPRO = EA.CODPRO AND LD.CODACT = EA.CODACT AND EA.EANDS1 = '12NC'",NL," "\
				"WHERE LE.ETALIV < 30",NL," "\
				"AND LE.CODACT = '",tCODACT,"'",NL," "\
				"GROUP BY  LE.REFLIV",NL," "\
				"         ,LD.CODPRO",NL," "\
				"         ,LE.CODACT",NL," "\
				"         ,EA.EDIPRO")

		log("------------------------------------------------------------", NL)
		log(tQuery,NL)
		log("------------------------------------------------------------", NL)

		if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif

		if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif

		bQueryTemResul := FALSE
		while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
			if bQueryTemResul = FALSE then
				bQueryTemResul := TRUE
				print("REFLIV;" \
						"PRODUTO;" \
						"PLANTA;" \
						"DEPOSITO;" \
						"LOTE;" \
						"QTD_SEM_ONDA;" \
						"STATUS;" \
						"SITUACAO;" \
						"EAN_PRINCIPAL",NL) >> TRACE.PEDIDOS_SEM_ONDA_SOLTA_SUBTRAI
			endif
			print(peel(taDb2Array["REFLIV"]," "),";", \
					peel(taDb2Array["PRODUTO"]," "),";", \
					peel(taDb2Array["PLANTA"]," "),";", \
					peel(taDb2Array["DEPOSITO"]," "),";0;",peel(taDb2Array["QTD_SEM_ONDA"]," "),";", \
					peel(taDb2Array["STATUS"]," "),";", \
					peel(taDb2Array["SITUACAO"]," "),";", \
					peel(taDb2Array["EAN_PRINCIPAL"]," "),";", NL) >> TRACE.PEDIDOS_SEM_ONDA_SOLTA_SUBTRAI

			remove(taDb2Array)
		endwhile

		if bQueryTemResul = FALSE then
			print("Consulta não retornou resultados",NL) >> TRACE.PEDIDOS_SEM_ONDA_SOLTA_SUBTRAI
		endif

		close(TRACE.PEDIDOS_SEM_ONDA_SOLTA_SUBTRAI)

		if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_batimento, "1")
			exit(1)
		endif
	endfunction

!==============================================================================

! ABAS P5

	function bfP5_EstoqueOficial()
		tQuery := build("SELECT   GL.CODPRO                                                                                                                AS SKU",NL," "\
						"       ,TRIM(GL.DS1PRO)                                                                                                           AS SKU_DESC1_35",NL," "\
						"       ,TRIM(GL.CODPAL)                                                                                                           AS LP",NL," "\
						"       ,(SELECT VALRUB",NL," "\
						"			FROM FGE50FM",tToInfologPrefixFilename,".GEZZRU",NL," "\
						"			WHERE CODRUB = 'STCK'",NL," "\
						"			AND VALCLE = (CASE",NL," "\
						"							WHEN GL.MOTIMM = ''",NL," "\
						"							THEN (SELECT VALRUB",NL," "\
						"									FROM FGE50FM",tToInfologPrefixFilename,".GEACRUB",NL," "\
						"									WHERE CODACT = 'BRO'",NL," "\
						"									AND CODRUB = 'BRO')",NL," "\
						"							ELSE GL.MOTIMM",NL," "\
						"							END)",NL," "\
						"		) 																														   AS STATUS_SAP",NL," "\
						"		,CASE",NL," "\
						"			GL.MOTIMM",NL," "\
						"			WHEN ''",NL," "\
						"			THEN TRIM(RB.VALRUB)",NL," "\
						"			ELSE GL.MOTIMM",NL," "\
						"			END															                                                           AS SP",NL," "\
						"       ,REPLACE(TO_CHAR(CAST(GL.UVCSTO / GL.PCBPRO AS NUMERIC(15,2))),'.',',')                                                    AS QTDE_CDA",NL," "\
						"       ,CASE GL.CODLOT WHEN '' THEN 'NOLOT' ELSE GL.CODLOT END                                                                    AS LOT",NL," "\
						"       ,COALESCE(LT.STATUS,'')                                                                                                    AS STATUS_LOTE",NL," "\
						"       ,CASE GL.DATFVI WHEN 0 THEN '' ELSE VARCHAR_FORMAT(TO_DATE(GL.DATFVI||'000000','YYYY-MM-DD HH24:MI:SS') ,'DD/MM/YYYY') END AS EXPR_DATE",NL," "\
						"       ,GL.UVCSTO                                                                                                                 AS QTY",NL," "\
						"       ,GL.UNIPRO                                                                                                                 AS UOM_ABREV",NL," "\
						"       ,GL.ZONSTS||'-'||DIGITS(GL.ALLSTS)||'-'||DIGITS(GL.DPLSTS)||'-'||DIGITS(GL.NIVSTS)                                         AS LOCACAO",NL," "\
						"       ,CASE GL.ETAPAL WHEN '50' THEN 'PUT' ELSE 'LOC' END                                                                        AS TIPO",NL," "\
						"       ,TRIM(GL.REFREC)                                                                                                           AS BL",NL," "\
						"       ,GL.VALPRO                                                                                                                 AS PKG_NO",NL," "\
						"       ,TRIM(GL.FAMPRO)                                                                                                           AS FAMI",NL," "\
						"       ,VARCHAR_FORMAT(TO_DATE(GL.DATREC||'000000','YYYY-MM-DD HH24:MI:SS'),'DD/MM/YYYY')                                         AS DREC",NL," "\
						"       ,''                                                                                                                        AS PERC_VIDA_PROD",NL," "\
						"       ,TRIM(GP.ANAPRO)                                                                                                           AS DIVISAO",NL," "\
						"       ,GP.CODTMD                                                                                                                 AS COD_ONU",NL," "\
						"       ,GP.CODSEC                                                                                                                 AS CLASSE_RISCO",NL," "\
						"       ,TRIM(GL.REFREC)                                                                                                           AS NF",NL," "\
						"       ,GL.DS2PRO                                                                                                                 AS DESCRICAO",NL," "\
						"FROM FGE50FM",tToInfologPrefixFilename,".GEPAL        AS GL",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO   AS GP",NL," "\
						"ON GP.CODPRO = GL.CODPRO",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO  AS IM",NL," "\
						"ON GL.MOTIMM = IM.MOTIMM",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AS RB",NL," "\
						"ON RB.CODRUB = RB.CODACT AND GL.CODACT = RB.CODACT",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU  AS RU",NL," "\
						"ON RU.VALCLE = GL.MOTIMM AND RU.CODRUB = 'STCK'",NL," "\
						"LEFT JOIN",NL," "\
						"(",NL," "\
						"	SELECT  A.CODLOT",NL," "\
						"	       ,A.CODPRO",NL," "\
						"	       ,A.MOTIMM AS STATUS",NL," "\
						"	       ,B.STOSAP1",NL," "\
						"	FROM FGE50FM",tToInfologPrefixFilename,".GELOT AS A",NL," "\
						"	JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO AS B",NL," "\
						"	ON A.MOTIMM = B.MOTIMM AND CODACT = 'BRO'",NL," "\
						")                                                     AS LT",NL," "\
						"ON GL.CODLOT = LT.CODLOT AND GL.CODPRO = LT.CODPRO",NL," "\
						"WHERE GL.CODACT = '",tCODACT,"'",NL," "\
						"AND GL.ETAPAL <> '60'",NL," "\
						"ORDER BY 1")

		log("------------------------------------------------------------", NL)
		log(tQuery,NL)
		log("------------------------------------------------------------", NL)

		if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
			bfSqlErro(tBeginSubj_P5, "2")
			exit(1)
		endif

		if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_P5, "2")
			exit(1)
		endif

		bQueryTemResul := FALSE
		while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
			if tCODACT = "BRO" then
				if bQueryTemResul = FALSE then
					bQueryTemResul := TRUE
					print("SKU;" \
							"SKU_DESC1_35;" \
							"LP;" \
							"STATUS_SAP;" \
							"SP;" \
							"QTDE_CDA;" \
							"LOT;" \
							"STATUS_LOTE;" \
							"EXPR_DATE;" \
							"QTY;" \
							"UOM_ABREV;" \
							"LOCACAO;" \
							"TIPO;" \
							"BL;" \
							"PKG_NO;" \
							"FAMI;" \
							"DREC;" \
							"PERC_VIDA_PROD;" \
							"DIVISAO/CATEGORIA;" \
							"COD_ONU;" \
							"CLASSE_RISCO;" \
							"NF;" \
							"DESCRICAO/REFERENCIA",NL) >> TRACE2.P5_EST_OFICIAL_WMS
				endif
			endif

			print(peel(taDb2Array["SKU"]," "),";", \
					peel(taDb2Array["SKU_DESC1_35"]," "),";", \
					build("'", peel(taDb2Array["LP"]," ")),";", \
					peel(taDb2Array["STATUS_SAP"]," "),";", \
					peel(taDb2Array["SP"]," "),";", \
					peel(taDb2Array["QTDE_CDA"]," "),";", \
					peel(taDb2Array["LOT"]," "),";", \
					peel(taDb2Array["STATUS_LOTE"]," "),";", \
					peel(taDb2Array["EXPR_DATE"]," "),";", \
					peel(taDb2Array["QTY"]," "),";", \
					peel(taDb2Array["UOM_ABREV"]," "),";", \
					peel(taDb2Array["LOCACAO"]," "),";", \
					peel(taDb2Array["TIPO"]," "),";", \
					peel(taDb2Array["BL"]," "),";", \
					peel(taDb2Array["PKG_NO"]," "),";", \
					peel(taDb2Array["FAMI"]," "),";", \
					peel(taDb2Array["DREC"]," "),";", \
					peel(taDb2Array["PERC_VIDA_PROD"]," "),";", \
					peel(taDb2Array["DIVISAO"]," "),";", \
					peel(taDb2Array["COD_ONU"]," "),";", \
					peel(taDb2Array["CLASSE_RISCO"]," "),";", \
					peel(taDb2Array["NF"]," "),";", \
					peel(taDb2Array["DESCRICAO"]," "),";", NL) >> TRACE2.P5_EST_OFICIAL_WMS

			remove(taDb2Array)
		endwhile

		if bQueryTemResul = FALSE then
			print("Consulta não retornou resultados",NL) >> TRACE2.P5_EST_OFICIAL_WMS
		endif

		close(TRACE2.P5_EST_OFICIAL_WMS)

		if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_P5, "2")
			exit(1)
		endif

		if bQueryTemResul = TRUE then
			bfEnviaEmail(build("[",tBeginSubj_P5,"]_P5_EST_OFICIAL_WMS"), \
							build("P5_EST_OFICIAL_WMS_",time("now","%Y%m%d%H%M%S"),".csv"), \
							tToEmail_P5, \
							tCcEmail_P5, \
							"EmailP5", \
							"", \
							TRACE2.P5_EST_OFICIAL_WMS)
		else
			bfEnviaEmailInLine(build("[",tBeginSubj_P5,"]_P5_EST_OFICIAL_WMS"), \
								build("P5_EST_OFICIAL_WMS_",time("now","%Y%m%d%H%M%S"),".csv"), \
								tToEmail_P5, \
								tCcEmail_P5, \
								"EmailP5", \
								build("***Informações de P5 EST OFICIAL WMS no Dia***",NL,NL,"***Não há dados para emissão do arquivo***",NL,NL,"Processo gerado automaticamente, não utilize a opção responder a este remetente.",NL,NL), \
								TRACE2.P5_EST_OFICIAL_WMS)
		endif
	endfunction

	!==============================================================================

	function bfP5_InfSepExpDia()
		tQuery := build("SELECT   SD.CODACT                                                                                  AS COMP_CODE",NL," "\
						"       ,SD.CODPRO                                                                                  AS SKU",NL," "\
						"       ,SD.NUMSUP                                                                                  AS UMA",NL," "\
						"       ,SD.UVCLIV                                                                                  AS QTD",NL," "\
						"       ,'EA'                                                                                       AS UNID",NL," "\
						"       ,REPLACE(TO_CHAR(CAST(SUM((SD.PDBCOL/SD.PCBPRO)*SD.UVCLIV) AS NUMERIC(15,3))),'.',',')      AS PESO",NL," "\
						"       ,REPLACE(TO_CHAR(CAST(SUM((SD.VOLCOL/SD.PCBPRO)*SD.UVCLIV)/1000 AS NUMERIC(15,3))),'.',',') AS CUBAGEM",NL," "\
						"       ,GP.CODTMD                                                                                  AS COD_ONU",NL," "\
						"       ,GP.CODSEC                                                                                  AS CLASSE_RISCO",NL," "\
						"FROM FGE50FM",tToInfologPrefixFilename,".GESUPD AS SD",NL," "\
						"JOIN FGE50FM",tToInfologPrefixFilename,".GEHSUP AS HS",NL," "\
						"ON SD.NUMSUP = HS.NUMSUP",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO AS GP",NL," "\
						"ON GP.CODPRO = SD.CODPRO",NL," "\
						"WHERE SD.INDEXP = '1'",NL," "\
						"AND HS.ETASUP = '50'",NL," "\
						"AND HS.DATHIS = VARCHAR_FORMAT((CURRENT DATE - 1 DAYS), 'YYYYMMDD')",NL," "\
						"AND SD.CODACT = '",tCODACT,"'",NL," "\
						"GROUP BY  SD.CODACT",NL," "\
						"         ,SD.CODPRO",NL," "\
						"         ,SD.NUMSUP",NL," "\
						"         ,SD.UVCLIV",NL," "\
						"         ,GP.CODTMD",NL," "\
						"         ,GP.CODSEC",NL," "\
						"ORDER BY  1, 3, 2")

		log("------------------------------------------------------------", NL)
		log(tQuery,NL)
		log("------------------------------------------------------------", NL)

		if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
			bfSqlErro(tBeginSubj_P5, "2")
			exit(1)
		endif

		if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_P5, "2")
			exit(1)
		endif

		bQueryTemResul := FALSE
		while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
			if bQueryTemResul = FALSE then
				bQueryTemResul := TRUE
				print("COMP_CODE;SKU;UMA;QTD;UNID;PESO;CUBAGEM;COD_ONU;CLASSE_RISCO;",NL) >>  TRACE2.P5_INF_SEP_EXP_DIA
			endif

			print(peel(taDb2Array["COMP_CODE"]," "),";", \
				  peel(taDb2Array["SKU"]," "),";", \
				  peel(taDb2Array["UMA"]," "),";", \
				  peel(taDb2Array["QTD"]," "),";", \
				  peel(taDb2Array["UNID"]," "),";", \
				  peel(taDb2Array["PESO"]," "),";", \
				  peel(taDb2Array["CUBAGEM"]," "),";", \
				  peel(taDb2Array["COD_ONU"]," "),";", \
				  peel(taDb2Array["CLASSE_RISCO"]," "),";", \
				  NL) >> TRACE2.P5_INF_SEP_EXP_DIA

			remove(taDb2Array)
		endwhile

		if bQueryTemResul = FALSE then
			print("Consulta não retornou resultados",NL) >> TRACE2.P5_INF_SEP_EXP_DIA
		endif

		close(TRACE2.P5_INF_SEP_EXP_DIA)

		if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_P5, "2")
			exit(1)
		endif

		if bQueryTemResul = TRUE then
			bfEnviaEmail(build("[",tBeginSubj_P5,"]_P5_INF_SEP_EXP_DIA"), \
							build("P5_INF_SEP_EXP_DIA_",time("now","%Y%m%d%H%M%S"),".csv"), \
							tToEmail_P5, \
							tCcEmail_P5, \
							"EmailP5", \
							"", \
							TRACE2.P5_INF_SEP_EXP_DIA)
		else
			bfEnviaEmailInLine(build("[",tBeginSubj_P5,"]_P5_INF_SEP_EXP_DIA"), \
								build("P5_INF_SEP_EXP_DIA_",time("now","%Y%m%d%H%M%S"),".csv"), \
								tToEmail_P5, \
								tCcEmail_P5, \
								"EmailP5", \
								build("***Informações de P5 INF SEP EXP DIA no Dia***",NL,NL,"***Não há dados para emissão do arquivo***",NL,NL,"Processo gerado automaticamente, não utilize a opção responder a este remetente.",NL,NL), \
								TRACE2.P5_INF_SEP_EXP_DIA)
		endif
	endfunction

	!==============================================================================

	function bfP5_InfSepNaoExp()
		tQuery := build("SELECT   SD.CODACT                                                                                  AS COMP_CODE",NL," "\
						"       ,SD.CODPRO                                                                                  AS SKU",NL," "\
						"       ,SD.NUMSUP                                                                                  AS UMA",NL," "\
						"       ,SD.UVCLIV                                                                                  AS QTD",NL," "\
						"       ,'EA'                                                                                       AS UNID",NL," "\
						"       ,REPLACE(TO_CHAR(CAST(SUM((SD.PDBCOL/SD.PCBPRO)*SD.UVCLIV) AS NUMERIC(15,3))),'.',',')      AS PESO",NL," "\
						"       ,REPLACE(TO_CHAR(CAST(SUM((SD.VOLCOL/SD.PCBPRO)*SD.UVCLIV)/1000 AS NUMERIC(15,3))),'.',',') AS CUBAGEM",NL," "\
						"       ,GP.CODTMD                                                                                  AS COD_ONU",NL," "\
						"       ,GP.CODSEC                                                                                  AS CLASSE_RISCO",NL," "\
						"FROM FGE50FM",tToInfologPrefixFilename,".GESUPD AS SD",NL," "\
						"JOIN FGE50FM",tToInfologPrefixFilename,".GEHSUP AS HS",NL," "\
						"ON SD.NUMSUP = HS.NUMSUP",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO AS GP",NL," "\
						"ON GP.CODPRO = SD.CODPRO",NL," "\
						"WHERE SD.INDEXP = '0'",NL," "\
						"AND HS.ETASUP = '30'",NL," "\
						"AND HS.DATHIS = VARCHAR_FORMAT((CURRENT DATE - 1 DAYS), 'YYYYMMDD')",NL," "\
						"AND SD.CODACT = '",tCODACT,"'",NL," "\
						"GROUP BY  SD.CODACT",NL," "\
						"         ,SD.CODPRO",NL," "\
						"         ,SD.NUMSUP",NL," "\
						"         ,SD.UVCLIV",NL," "\
						"         ,GP.CODTMD",NL," "\
						"         ,GP.CODSEC",NL," "\
						"ORDER BY  1, 3, 2")

		log("------------------------------------------------------------", NL)
		log(tQuery,NL)
		log("------------------------------------------------------------", NL)

		if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
			bfSqlErro(tBeginSubj_P5, "2")
			exit(1)
		endif

		if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_P5, "2")
			exit(1)
		endif

		bQueryTemResul := FALSE
		while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
			if bQueryTemResul = FALSE then
				bQueryTemResul := TRUE
				print("COMP_CODE;SKU;UMA;QTD;UNID;PESO;CUBAGEM;COD_ONU;CLASSE_RISCO;",NL) >>  TRACE2.P5_INF_SEP_NAO_EXP
			endif
			print(peel(taDb2Array["COMP_CODE"]," "),";", \
				  peel(taDb2Array["SKU"]," "),";", \
				  peel(taDb2Array["UMA"]," "),";", \
				  peel(taDb2Array["QTD"]," "),";", \
				  peel(taDb2Array["UNID"]," "),";", \
				  peel(taDb2Array["PESO"]," "),";", \
				  peel(taDb2Array["CUBAGEM"]," "),";", \
				  peel(taDb2Array["COD_ONU"]," "),";", \
				  peel(taDb2Array["CLASSE_RISCO"]," "),";", \
				  NL) >> TRACE2.P5_INF_SEP_NAO_EXP

			remove(taDb2Array)
		endwhile

		if bQueryTemResul = FALSE then
			print("Consulta não retornou resultados",NL) >> TRACE2.P5_INF_SEP_NAO_EXP
		endif

		close(TRACE2.P5_INF_SEP_NAO_EXP)

		if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_P5, "2")
			exit(1)
		endif

		if bQueryTemResul = TRUE then
			bfEnviaEmail(build("[",tBeginSubj_P5,"]_P5_INF_SEP_NAO_EXP"), \
							build("P5_INF_SEP_NAO_EXP_",time("now","%Y%m%d%H%M%S"),".csv"), \
							tToEmail_P5, \
							tCcEmail_P5, \
							"EmailP5", \
							"", \
							TRACE2.P5_INF_SEP_NAO_EXP)
		else
			bfEnviaEmailInLine(build("[",tBeginSubj_P5,"]_P5_INF_SEP_NAO_EXP"), \
								build("P5_INF_SEP_NAO_EXP_",time("now","%Y%m%d%H%M%S"),".csv"), \
								tToEmail_P5, \
								tCcEmail_P5, \
								"EmailP5", \
								build("***Informações de P5 INF SEP NAO EXP no Dia***",NL,NL,"***Não há dados para emissão do arquivo***",NL,NL,"Processo gerado automaticamente, não utilize a opção responder a este remetente.",NL,NL), \
								TRACE2.P5_INF_SEP_NAO_EXP)
		endif
	endfunction

	!==============================================================================

	function bfP5_EstoqueResumo()
		tQuery := build("SELECT   GL.CODPRO                                              AS CODIGO",NL," "\
						"       ,CASE GL.CODLOT WHEN '' THEN 'NOLOT' ELSE GL.CODLOT END AS LOTE",NL," "\
						"       ,TRIM(GP.DS1PRO)                                        AS DESCRICAO",NL," "\
						"       ,SUM(GL.UVCSTO)                                         AS SALDO",NL," "\
						"FROM FGE50FM",tToInfologPrefixFilename,".GEPAL AS GL",NL," "\
						"JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO AS GP",NL," "\
						"ON GL.CODPRO = GP.CODPRO",NL," "\
						"WHERE GL.CODACT = '",tCODACT,"'",NL," "\
						"AND GL.ETAPAL <> '60'",NL," "\
						"GROUP BY  GL.CODPRO",NL," "\
						"         ,GL.CODLOT",NL," "\
						"         ,GP.DS1PRO",NL," "\
						"ORDER BY  1,2 ")

		log("------------------------------------------------------------", NL)
		log(tQuery,NL)
		log("------------------------------------------------------------", NL)

		if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
			bfSqlErro(tBeginSubj_P5, "2")
			exit(1)
		endif

		if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_P5, "2")
			exit(1)
		endif

		bQueryTemResul := FALSE
		while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
			if bQueryTemResul = FALSE then
				bQueryTemResul := TRUE
				print("CODIGO;LOTE;DESCRICAO;SALDO;",NL) >> TRACE2.SALDO_ESTQ_RESUMIDO
			endif
			print(peel(taDb2Array["CODIGO"]," "),";", \
					peel(taDb2Array["LOTE"]," "),";", \
					peel(taDb2Array["DESCRICAO"]," "),";", \
					peel(taDb2Array["SALDO"]," "),";",NL) >> TRACE2.SALDO_ESTQ_RESUMIDO

			remove(taDb2Array)
		endwhile

		if bQueryTemResul = FALSE then
			print("Consulta não retornou resultados",NL) >> TRACE2.SALDO_ESTQ_RESUMIDO
		endif

		close(TRACE2.SALDO_ESTQ_RESUMIDO)

		if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_P5, "2")
			exit(1)
		endif

		if bQueryTemResul = TRUE then
			bfEnviaEmail(build("[",tBeginSubj_P5,"]_SALDO_ESTQ_RESUMIDO"), \
							build("SALDO_ESTQ_RESUMIDO_",time("now","%Y%m%d%H%M%S"),".csv"), \
							tToEmail_P5, \
							tCcEmail_P5, \
							"EmailP5", \
							"", \
							TRACE2.SALDO_ESTQ_RESUMIDO)
		else
			bfEnviaEmailInLine(build("[",tBeginSubj_P5,"]_SALDO_ESTQ_RESUMIDO"), \
								build("SALDO_ESTQ_RESUMIDO_",time("now","%Y%m%d%H%M%S"),".csv"), \
								tToEmail_P5, \
								tCcEmail_P5, \
								"EmailP5", \
								build("***Informações de SALDO ESTQ RESUMIDO no Dia***",NL,NL,"***Não há dados para emissão do arquivo***",NL,NL,"Processo gerado automaticamente, não utilize a opção responder a este remetente.",NL,NL), \
								TRACE2.SALDO_ESTQ_RESUMIDO)
		endif
	endfunction

!==============================================================================

! ABAS SHELF
	function bfP5_Shelflife()
		tQuery := build("SELECT  GL.CODPRO                                                                                             AS SKU",NL," "\
						"	    ,SUBSTR(ZRE.CODRUB,2,3) 																			   AS IMOFVI",NL," "\
						"       ,GL.DS1PRO                                                                                             AS SKU_DESCRICAO",NL," "\
						"       ,GL.CODPAL                                                                                             AS LP",NL," "\
						"       ,GL.NUMPAL                                                                                             AS LPN",NL," "\
						"       ,CASE GL.MOTIMM WHEN '' THEN 'NM' ELSE GL.MOTIMM END                                                   AS DEPOSITO",NL," "\
						"       ,RI.VALRUB                                                                                             AS ESTOQUE",NL," "\
						"       ,CASE GL.CODLOT WHEN '' THEN 'NOLOT' ELSE GL.CODLOT END                                                AS LOTE",NL," "\
						"       ,GP.DESFOU                                                                                             AS NOTE1",NL," "\
						"       ,CASE GL.DATFVI WHEN 0 THEN '' ELSE TO_CHAR(TO_DATE(GL.DATFVI||'','YYYYMMDD') ,'DD/MM/YYYY') END       AS EXPR_DATE",NL," "\
						"       ,GL.UVCSTO                                                                                             AS QTY",NL," "\
						"       ,GL.UNIPRO                                                                                             AS UOM_ABREV",NL," "\
						"       ,GL.ZONSTS ||'-'|| DIGITS(GL.ALLSTS) ||'-'|| DIGITS(GL.DPLSTS) ||'-'|| DIGITS(GL.NIVSTS)               AS LOCACAO",NL," "\
						"       ,CASE GL.ETAPAL WHEN '50' THEN 'PUT' ELSE 'LOC' END                                                    AS TIPO",NL," "\
						"       ,GL.REFREC                                                                                             AS BL",NL," "\
						"       ,GL.VALPRO                                                                                             AS PKG_NO",NL," "\
						"       ,GL.FAMPRO                                                                                             AS FAMI",NL," "\
						"       ,TO_CHAR(TO_DATE(GL.DATREC||'','YYYYMMDD'),'DD/MM/YYYY')                                               AS DREC",NL," "\
						"       ,CASE GL.DATFVI WHEN 0 THEN NULL ELSE DAYS(CURRENT DATE) - DAYS(TO_DATE(GL.DATFVI||'','YYYYMMDD')) END AS DIAS_VIDA_PROD",NL," "\
						"       ,GP.ANAPRO                                                                                             AS DIVISAO",NL," "\
						"       ,GP.CODTMD                                                                                             AS COD_ONU",NL," "\
						"       ,GP.CODSEC                                                                                             AS CLASSE_RISCO",NL," "\
						"       ,GL.REFREC                                                                                             AS NF",NL," "\
						"       ,GL.DS2PRO                                                                                             AS DESCRICAO",NL," "\
						"FROM FGE50FM",tToInfologPrefixFilename,".GEPAL AS GL",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO AS GP",NL," "\
						"	ON GP.CODPRO = GL.CODPRO",NL," "\
						"	AND GP.CODACT = GL.CODACT",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU AS RI ",NL," "\
						"	ON RI.CODRUB = 'STCK'",NL," "\
						"	AND RI.CODFIC = 'GEZIMO'",NL," "\
						"	AND RI.VALCLE = GL.MOTIMM",NL," "\
						"JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU AS RU",NL," "\
						"	ON RU.CODRUB = 'SHLF'",NL," "\
						"	AND RU.VALCLE = GL.MOTIMM",NL," "\
						"	AND RU.VALRUB = 'SIM'",NL," "\
						"JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRE AS ZRE",NL," "\
						"	ON SUBSTR(ZRE.CODRUB,1,1) = 'S'",NL," "\
						"	AND ZRE.CODRUB = 'SHLF'",NL," "\
						"	AND GREATEST(0, GL.DATFVI - '",tDATMVT,"') <= ZRE.DTAMAX",NL," "\
						"	AND GREATEST(0, GL.DATFVI - '",tDATMVT,"') >= ZRE.DTAMIN",NL," "\
						"	AND SUBSTR(ZRE.CODRUB,2,3) <> GL.MOTIMM",NL," "\
						"	AND ZRE.TYPDTA = '1'",NL," "\
						"WHERE GL.CODACT = '",tCODACT,"'",NL," "\
						"AND GL.MOTIMM <> ''",NL," "\
						"AND GL.DATFVI > 0",NL," "\
						"AND GL.ETAPAL <> '60'",NL," "\
						"ORDER BY 1")
		
		log("------------------------------------------------------------", NL)
		log(tQuery,NL)
		log("------------------------------------------------------------", NL)

		if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
			bfSqlErro(tBeginSubj_shelflife, "3")
			exit(1)
		endif

		if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_shelflife, "3")
			exit(1)
		endif

		bQueryTemResul := FALSE
		while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
			! SHELF LIFE
				if bPrimeira0600 = FALSE then
					bPrimeira0600 := TRUE
					tNameOutM06 := build(tToInfologPrefixFilename,"06",build(nMessageID:R010),".DAT")
					tFileOutM06 := build(sHOME,"/ToInfolog/",tNameOutM06)
					tFileOutTempM06 := build(sHOME,"/ToInfolog/Temp/",tNameOutM06)
							
					R_GEEX0000_CODEXC("00")
					R_GEEX0000_SEPEXC(".")
					R_GEEX0000_SCOEXC("00")
					R_GEEX0000_EMTEXC("FM") 
					R_GEEX0000_DATEXC(time("now" ,"%Y%m%d"))
					R_GEEX0000_HEUEXC(time("now" ,"%H%M%S"))
					R_GEEX0000_NUMEXC("0000000")
					R_GEEX0000_ACQEXC("0")
					R_GEEX0000_VEREXC("5.00") 
					R_GEEX0000_NOMDTQ("M06")
					R_GEEX0000_LIBEXC(build(nMessageID:R010))
								
					flush(0,0,NL) >> tFileOutTempM06
				endif

				R_GEEX0600_CODEXC("06")
				R_GEEX0600_SEPEXC(".")
				R_GEEX0600_SCOEXC("00")
				R_GEEX0600_TRTEXC("2")
				R_GEEX0600_CODTRT("1")
				R_GEEX0600_CODACT(tCODACT)
				R_GEEX0600_CODPRO(peel(taDb2Array["SKU"]," "))
				R_GEEX0600_CODPAL(peel(taDb2Array["LP"]," "))
				R_GEEX0600_MOTIMM(peel(taDb2Array["IMOFVI"]," "))

				nContadorLinhasEscritas++
				flush(0,0,NL) >> tFileOutTempM06
			! FIM SHELF LIFE

			! SHELF NOTICE
				if bQueryTemResul = FALSE then
					bQueryTemResul := TRUE
					print("SKU;SKU_DESCRICAO;LP;LPN;DEPOSITO;ESTOQUE;LOTE;NOTE1;EXPR_DATE;QTY;UOM_ABREV;LOCACAO;TIPO;BL;PKG_NO;FAMI;DREC;DIAS_VIDA_PROD;DIVISAO;COD_ONU;CLASSE_RISCO;NF;DESCRICAO",NL) >> TRACE3.SHELFLIFE_NOTICE
				endif

				print(peel(taDb2Array["SKU"]," "),";", \
						peel(taDb2Array["SKU_DESCRICAO"]," "),";", \
						peel(taDb2Array["LP"]," "),";", \
						peel(taDb2Array["LPN"]," "),";", \
						peel(taDb2Array["DEPOSITO"]," "),";", \
						peel(taDb2Array["ESTOQUE"]," "),";", \
						peel(taDb2Array["LOTE"]," "),";", \
						peel(taDb2Array["NOTE1"]," "),";", \
						peel(taDb2Array["EXPR_DATE"]," "),";", \
						peel(taDb2Array["QTY"]," "),";", \
						peel(taDb2Array["UOM_ABREV"]," "),";", \
						peel(taDb2Array["LOCACAO"]," "),";", \
						peel(taDb2Array["TIPO"]," "),";", \
						peel(taDb2Array["BL"]," "),";", \
						peel(taDb2Array["PKG_NO"]," "),";", \
						peel(taDb2Array["FAMI"]," "),";", \
						peel(taDb2Array["DREC"]," "),";", \
						peel(taDb2Array["DIAS_VIDA_PROD"]," "),";", \
						peel(taDb2Array["DIVISAO"]," "),";", \
						peel(taDb2Array["COD_ONU"]," "),";", \
						peel(taDb2Array["CLASSE_RISCO"]," "),";", \
						peel(taDb2Array["NF"]," "),";", \
						peel(taDb2Array["DESCRICAO"]," "),";", NL) >> TRACE3.SHELFLIFE_NOTICE
			! FIM SHELF NOTICE

			remove(taDb2Array)
		endwhile

		if bQueryTemResul = TRUE then
			R_GEEX9900_CODEXC("99")
			R_GEEX9900_SEPEXC(".")
			R_GEEX9900_SCOEXC("00")
			R_GEEX9900_EMTEXC("FM")
			R_GEEX9900_DATEXC(time("now", "%Y%m%d"))
			R_GEEX9900_HEUEXC(time("now", "%H%M%S"))
			R_GEEX9900_CPTEXC(build(nContadorLinhasEscritas:R08.0))

			flush(0,0,NL) >> tFileOutTempM06

			! Tratamento final dos arquivos
				close(tFileOutTempM06)
				copy(tFileOutTempM06,tFileOutM06)
				close(tFileOutTempM06)
				remove(tFileOutTempM06)
				close(tFileOutM06)

			! Finalizando com TRACE
				bfMajtrace3("Recebida" \
							,"0" \
							,TRACE_PROFILE \
							,TRACE_MESSAGE_SHLF \
							,TRACE_DATE_SHLF \
							,TRACE_MESSAGE_SHLF)
			
			! Enviar interface para o cliente
				bfToInfolog()
		endif


		if bQueryTemResul = FALSE then
			print("Consulta não retornou resultados",NL) >> TRACE3.SHELFLIFE_NOTICE
		endif

		close(TRACE3.SHELFLIFE_NOTICE)

		if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro(tBeginSubj_shelflife, "3")
			exit(1)
		endif

		if bQueryTemResul = TRUE then
			bfEnviaEmail(build("[",tBeginSubj_shelflife,"]_SHELF-LIFE_NOTICE"), \
							build("SHELF-LIFE_NOTICE_",time("now","%Y%m%d%H%M%S"),".csv"), \
							tToEmail_shelflife, \
							tCcEmail_shelflife, \
							"EmailShelf", \
							"", \
							TRACE3.SHELFLIFE_NOTICE)
		else
			bfEnviaEmailInLine(build("[",tBeginSubj_shelflife,"]_SHELF-LIFE_NOTICE"), \
								build("SHELF-LIFE_NOTICE_",time("now","%Y%m%d%H%M%S"),".csv"), \
								tToEmail_shelflife, \
								tCcEmail_shelflife, \
								"EmailShelf", \
								build("***Informações de Shelf-Life-Notice no Dia***",NL,NL,"***Não há dados para emissão do arquivo***",NL,NL,"Processo gerado automaticamente, não utilize a opção responder a este remetente.",NL,NL), \
								TRACE3.SHELFLIFE_NOTICE)
		endif
	endfunction
