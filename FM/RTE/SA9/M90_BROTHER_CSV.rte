%@(#)  M90_BROTHER_CSV.rte     modif:08-12-2017
!==============================================================================
% File          : M90_BROTHER_CSV.rte   version 1.0
!------------------------------------------------------------------------------
% Description   : <short program description>
!------------------------------------------------------------------------------
% Author        : <developer name> - COMPANY
!==============================================================================
! 08-12-2017  XX  Creation
! 08-12-2017  XX  <comments>
!==============================================================================
!
! <detailed program description>
!
!==============================================================================
! input file     : <name or rule for naming input file>
! output file    : <name or rule for naming output file> 
! temporary file : <name or rule for naming temporary file> 
!==============================================================================

base "../trace/trace.cfg" TRACE,autoflush off
base "../trace/trace.cfg" TRACE2,autoflush off
base "../fmbrasil_gama_ajustes_estoque/fmbrasil_gama_ajustes_estoque.cfg" fmbrasil_gama_ajustes_estoque
base "../fmbrasil_batimento_p5/fmbrasil_batimento_p5.cfg" fmbrasil_batimento_p5_batimento
base "../fmbrasil_batimento_p5/fmbrasil_batimento_p5.cfg" fmbrasil_batimento_p5_p5

!==============================================================================

! Input/output macros file
#define TX_PROG_INFO "M90_BROTHER_CSV"
#include "include/generix_func.inc"
#include "include/GEEXM90.inc"
#include "include/GEEXM06.inc"
#include "include/M90_BROTHER_TXT.inc"
!==============================================================================

! Initialization section
begin
	nPos := 1
	nRec := 1
	nMainIndex := 0
	SYSLOG := find(sSYSLOG,INDEX=number(pINDEX))
	load(0, build(sHOME,"/config/FM_wms_configuration.properties"), taPARAM)
	tToInfologPrefixFilename := taPARAM["ToInfologPrefixFilenameSA9"]

	! Parametros do TRACE
		nMessageID := cMessageID
		tPerfil := "BROTHER"
		tSentido := "O"
		tMensagem := "M90 - BROTHER"
		tDataDocumento := time("now","%Y-%m-%d")

	!Inicio do processo
		log("------------------------------------------------------------", NL)
		log("Inicio: ", time("now","%Y-%m-%d %H:%M:%S"), NL)
		log("Arquivo de entrada: ",pEDISEND.ORIGINAL.NAME, NL)
		log("------------------------------------------------------------", NL)

	!Abertura do banco de dados - WMS
		tDbBase		:= "FMWMS"
		tDbUsername	:= taPARAM["WMSDBUSER"]
		tDbPassword	:= taPARAM["WMSDBPASS"]
		tDbUrl		:= taPARAM["WMSDBURL"]

		bfSqlInit()
		if not bfSqlJdbc(tDbBase, tDbUsername, tDbPassword, tDbUrl) then
			bfSqlErro()
			exit(1)
		endif

	!Variaveis Gerais
		bFazP5 := FALSE
		bFazBatimento := FALSE

		bPrimeiro9900 := TRUE
		bPrimeira0600 := FALSE
		bTem9000 := FALSE
		bTem9070 := FALSE
		
endbegin

!==============================================================================

line(1:"00.00")

	!Variaveis
		tData := S_GEEX0000_DATEXC
		tHora := S_GEEX0000_HEUEXC

	if S_GEEX0000_CODACT = "BRO" then
		tPerfil := "BROTHER"
	endif

endline

!==============================================================================

line("90.00")
	bTem9000 := TRUE

	if bPrimeiro9900 = TRUE then
		tCODACTLido := S_GEEX9000_CODACT
		bPrimeiro9900 := FALSE
	endif

	! Verifica as atividades validas para envio
		if tCODACTLido <> "BRO" then
			exit(1)
		endif
endline

!==============================================================================

line("90.70")

	! Verifica as atividades validas para envio
		tCODACTLido := S_GEEX9070_CODACT
		if tCODACTLido <> "BRO" then
			exit(1)
		endif

	! SHELF LIFE
		if S_GEEX9070_CODACT = "BRO" \
			and length(S_GEEX9070_MOTIMM) > 0 \
			and number(S_GEEX9070_DATFVI) > 0 then
			
			tCODPRO_9070 := S_GEEX9070_CODPRO
			tCODPAL_9070 := S_GEEX9070_CODPAL

			! QUERY tVALRUB_GEZZRU
				tQuery := build("SELECT VALRUB",NL," "\
								"FROM FGE50FM",tToInfologPrefixFilename,".GEZZRU",NL," "\
								"WHERE CODRUB = 'SHLF'",NL," "\
								"AND VALCLE = '",S_GEEX9070_MOTIMM,"'")

				log("------------------------------------------------------------", NL)
				log(tQuery,NL)
				log("------------------------------------------------------------", NL)

				if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
					bfSqlErro()
					exit(1)
				endif

				if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
					bfSqlErro()
					exit(1)
				endif

				if bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE then
					tVALRUB_GEZZRU := peel(taDb2Array["VALRUB"]," ")
					remove(taDb2Array)
				endif

				if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
					bfSqlErro()
					exit(1)
				endif
			! FIM QUERY tVALRUB_GEZZRU

			if tVALRUB_GEZZRU = "SIM" then
				tQuery := build("SELECT SUBSTR(CODRUB,2,3) AS IMOFVI",NL," "\
								"FROM FGE50FM",tToInfologPrefixFilename,".GEZZRE AS ZRE",NL," "\
								"WHERE SUBSTR(CODRUB,1,1) = 'S'",NL," "\
								"  AND GREATEST(0, DAYS(TO_DATE('",S_GEEX9070_DATFVI,"', 'YYYYMMDD')) - DAYS(TO_DATE('",S_GEEX9070_DATMVT,"', 'YYYYMMDD'))) <= ZRE.DTAMAX",NL," "\
								"  AND GREATEST(0, DAYS(TO_DATE('",S_GEEX9070_DATFVI,"', 'YYYYMMDD')) - DAYS(TO_DATE('",S_GEEX9070_DATMVT,"', 'YYYYMMDD'))) >= ZRE.DTAMIN",NL," "\
								"  AND TYPDTA = '1'",NL," "\
								"LIMIT 1")

				log("------------------------------------------------------------", NL)
				log(tQuery,NL)
				log("------------------------------------------------------------", NL)

				if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
					bfSqlErro()
					exit(1)
				endif

				if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
					bfSqlErro()
					exit(1)
				endif

				bQueryResult := FALSE
				if bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE then
					if peel(taDb2Array["IMOFVI"]," ") <> S_GEEX9070_MOTIMM then
						bQueryResult := TRUE

						! M06
							if bPrimeira0600 = FALSE then
								bPrimeira0600 := TRUE
								tNameOutM06 := build(tToInfologPrefixFilename,"06",build(nMessageID:R010),".DAT")
								tFileOutM06 := build(sHOME,"/ToInfolog/",tNameOutM06)
								tFileOutTempM06 := build(sHOME,"/ToInfolog/Temp/",tNameOutM06)
										
								R_GEEX0000_CODEXC("00")
								R_GEEX0000_SEPEXC(".")
								R_GEEX0000_SCOEXC("00")
								R_GEEX0000_EMTEXC("FM") 
								R_GEEX0000_DATEXC(time("now" ,"%Y%m%d"))
								R_GEEX0000_HEUEXC(time("now" ,"%H%M%S"))
								R_GEEX0000_NUMEXC("0000000")
								R_GEEX0000_ACQEXC("0")
								R_GEEX0000_VEREXC("5.00") 
								R_GEEX0000_NOMDTQ("M06")
								R_GEEX0000_LIBEXC(build(nMessageID:R010))
											
								flush(0,0,NL) >> tFileOutTempM06
							endif

							R_GEEX0600_CODEXC("06")
							R_GEEX0600_SEPEXC(".")
							R_GEEX0600_SCOEXC("00")
							R_GEEX0600_TRTEXC("2")
							R_GEEX0600_CODTRT("1")
							R_GEEX0600_CODACT(S_GEEX9070_CODACT)
							R_GEEX0600_CODPRO(S_GEEX9070_CODPRO)
							R_GEEX0600_CODPAL(S_GEEX9070_CODPAL)
							R_GEEX0600_MOTIMM(peel(taDb2Array["IMOFVI"]," "))

							nContadorLinhasEscritas++
							flush(0,0,NL) >> tFileOutTempM06
						! FIM M06
						remove(taDb2Array)
					endif
				endif

				if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
					bfSqlErro()
					exit(1)
				endif
			endif
		endif
	! FIM SHELF LIFE

	bTem9070 := TRUE

	if bPrimeiro9900 = TRUE then
		tCODACTLido := S_GEEX9070_CODACT
		bPrimeiro9900 := FALSE
	endif

endline

!==============================================================================

line("99.00")

	! SHELF LIFE
		if bPrimeira0600 = TRUE then
			R_GEEX9900_CODEXC("99")
			R_GEEX9900_SEPEXC(".")
			R_GEEX9900_SCOEXC("00")
			R_GEEX9900_EMTEXC("FM")
			R_GEEX9900_DATEXC(time("now" ,"%Y%m%d"))
			R_GEEX9900_HEUEXC(time("now" ,"%H%M%S"))
			R_GEEX9900_CPTEXC(build(nContadorLinhasEscritas:R08.0))

			flush(0,0,NL) >> tFileOutTempM06

			! Tratamento final dos arquivos
				close(tFileOutTempM06)
				copy(tFileOutTempM06,tFileOutM06)
				close(tFileOutTempM06)
				remove(tFileOutTempM06)
				close(tFileOutM06)

			! Finalizando com TRACE
				bfMajtraceM06(	"Recebida" \
								,"0" \
								,tDataDocumento \
								,tDataDocumento \
								,tFileInput \
								,tFileOutM06 \
								,"SHELF LIFE" \
								,"")
			
			! Enviar interface para o cliente
				bfToInfolog()

		endif
	! FIM SHELF LIFE

	! Verifica se esta cadastrado no TOD - fmbrasil_batimento_p5_batimento
		if bTem9000 = TRUE then
			fmbrasil_batimento_p5_batimento := find(build(sHOME,"/fmbrasil_batimento_p5"),CODACT=tCODACTLido,TIPO="BATIMENTO")
			if valid(fmbrasil_batimento_p5_batimento) then
				tTOEMAILbat := fmbrasil_batimento_p5_batimento.TOEMAIL
				tCCEMAILbat := fmbrasil_batimento_p5_batimento.CCEMAIL
				tBEGINSUBJbat := fmbrasil_batimento_p5_batimento.BEGINSUBJ
				tHORARIOSPERMITIDOSbat := fmbrasil_batimento_p5_batimento.HORARIOSPERMITIDOS
				tHORARIOSPERMITIDOS := replace(replace(tHORARIOSPERMITIDOSbat," ",""),",",";")
				nHorariosPermitidosAux := split(tHORARIOSPERMITIDOS,taArrayAuxApaga,";")
				if nHorariosPermitidosAux <= 1 then
					taArrayHORARIOSPERMITIDOS[1] := tHORARIOSPERMITIDOS
					nHorariosPermitidosAux := 1
				else
					taArrayHORARIOSPERMITIDOS := taArrayAuxApaga
				endif
				remove(taArrayAuxApaga)
				nTempPesquisaArray := 1
				while nTempPesquisaArray <= nHorariosPermitidosAux do
					log("Horario Permitidos BATIMENTO: ",taArrayHORARIOSPERMITIDOS[nTempPesquisaArray], NL)
					if taArrayHORARIOSPERMITIDOS[nTempPesquisaArray] = substr(tHora,1,2) then
						bFazBatimento := TRUE
					endif
					nTempPesquisaArray++
				endwhile
			
				remove(taArrayHORARIOSPERMITIDOS)
			else
				bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Nao existe na tabela fmbrasil_batimento_p5 os valores CODACT= ",tCODACTLido," para o TIPO=BATIMENTO"))
			endif

			fmbrasil_batimento_p5_p5 := find(build(sHOME,"/fmbrasil_batimento_p5"),CODACT=tCODACTLido,TIPO="P5")
			if valid(fmbrasil_batimento_p5_p5) then
				tTOEMAILp5 := fmbrasil_batimento_p5_p5.TOEMAIL
				tCCEMAILp5 := fmbrasil_batimento_p5_p5.CCEMAIL
				tBEGINSUBJp5 := fmbrasil_batimento_p5_p5.BEGINSUBJ
				tHORARIOSPERMITIDOSp5 := fmbrasil_batimento_p5_p5.HORARIOSPERMITIDOS
				tHORARIOSPERMITIDOS := replace(replace(tHORARIOSPERMITIDOSp5," ",""),",",";")
				nHorariosPermitidosAux := split(tHORARIOSPERMITIDOS,taArrayAuxApaga,";")
				if nHorariosPermitidosAux <= 1 then
					taArrayHORARIOSPERMITIDOS[1] := tHORARIOSPERMITIDOS
					nHorariosPermitidosAux := 1
				else
					taArrayHORARIOSPERMITIDOS := taArrayAuxApaga
				endif
				
				remove(taArrayAuxApaga)
				
				nTempPesquisaArray := 1
				while nTempPesquisaArray <= nHorariosPermitidosAux do
					log("Horario Permitidos P5: ",taArrayHORARIOSPERMITIDOS[nTempPesquisaArray],NL)
					if taArrayHORARIOSPERMITIDOS[nTempPesquisaArray]  = substr(tHora,1,2) then
						bFazP5 := TRUE
					endif
					nTempPesquisaArray++
				endwhile
				
				remove(taArrayHORARIOSPERMITIDOS)
			else
				bfMajtrace2("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Nao existe na tabela fmbrasil_batimento_p5 os valores CODACT= ",tCODACTLido," para o TIPO=P5"))
			endif
		endif

	! Faz Batimento e P5
		!==============================================================================
		!                      BROTHER
		!==============================================================================
		
		if bFazBatimento = TRUE then
			TRACE:=new(build(sHOME,"/trace"))
			
			bfBatimento_Resumo()
			bfBatimento_EstoqueProduto()
			bfBatimento_PaleteLocacao()
			bfBatimento_Checkin()
			bfBatimento_Putaway()
			bfBatimento_OndaSolta()
			bfBatimento_SeparadoNaoConf()
			bfBatimento_PedidoSemOnda()

			bfMajtrace( "Recebida" \
						,"0" \
						,build("BATIMENTO - ",tCODACTLido) \
						,tDataDocumento \
						,tFileInput \
						,tFileOut \
						,build("BATIMENTO - ",tCODACTLido) \
						,"")
		endif
		
		if bFazP5 = TRUE then
			TRACE2:=new(build(sHOME,"/trace"))

			!bfP5_EstoqueOficial() - CRIADO O ESPECIFICO
			bfP5_EstoqueOficial_BRO()
			!bfP5_InfSepExpDia() - CRIADO O ESPECIFICO
			bfP5_InfSepExpDia_BRO()
			!bfP5_InfSepNaoExp() - CRIADO O ESPECIFICO
			bfP5_InfSepNaoExp_BRO()
			!bfP5_EstoqueResumo() - CRIADO O ESPECIFICO
			bfP5_EstoqueResumo_BRO()
			bfP5_Shelflife_BRO()

			bfMajtrace2("Recebida" \
						,"0" \
						,build("P5 - ",tCODACTLido) \
						,tDataDocumento \
						,tFileInput \
						,tFileOut \
						,build("P5 - ",tCODACTLido) \
						,"")
						
		endif

endline

!==============================================================================

! Default statements section
default

enddefault

!==============================================================================

! End statements section
end
	! INICIO M90 INVENTORY
		tNameOut := build("FM", tToInfologPrefixFilename, tCODACTLido, "_Brother_", time("now" ,"%Y%m%d%H%M%S"), ".txt")
		tFileOutTemp := build(sHOME,"/mdn/auto/Temp/",tNameOut)
		tFileOut := build(sHOME,"/mdn/auto/",tNameOut)

		tQuery := build("SELECT  GL.CODPRO                       AS PRODUCT_CODE",NL," "\
						"       ,LPAD(TRIM(RB2.VALRUB), 15, '0') AS CNPJ_ORIGIN",NL," "\
						"       ,'",tData,"'                     AS CURRENT_DATA",NL," "\
						"       ,'",substr(tHora, 1, 4),"'       AS CURRENT_TIME",NL," "\
						"       ,CASE WHEN ZRU.VALRUB = 'SIM'",NL," "\
						"            THEN SUM(GL.UVCSTO)",NL," "\
						"            ELSE 0",NL," "\
						"        END                             AS DAMAGED_QUANTITY_OF_PRODUCT",NL," "\
						"       ,SUM(GL.UVCSTO - GL.UVCDES)      AS PRODUCT_QUANTITY",NL," "\
						"       ,GL.UNIPRO                       AS PRODUCT_MEASUREMENT_UNIT",NL," "\
						"       ,CASE WHEN GL.MOTIMM = ''",NL," "\
						"            THEN ZR3.VALRUB",NL," "\
						"            ELSE ZR2.VALRUB",NL," "\
						"        END                             AS STOCK_TYPE",NL," "\
						"       ,''                              AS CODSER",NL," "\
						"FROM FGE50FM",tToInfologPrefixFilename,".GEPAL AS GL",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO AS GP",NL," "\
						"    ON GP.CODPRO = GL.CODPRO",NL," "\
						"    AND GP.CODACT = GL.CODACT",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU AS ZR2",NL," "\
						"    ON ZR2.VALCLE = GL.MOTIMM",NL," "\
						"    AND ZR2.CODRUB = 'STCK'",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB RB",NL," "\
						"    ON RB.CODACT = '",tCODACTLido,"'",NL," "\
						"    AND RB.CODRUB = '",tCODACTLido,"'",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB RB2",NL," "\
						"    ON RB2.CODACT = '",tCODACTLido,"'",NL," "\
						"    AND RB2.CODRUB = 'CDFM'",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU AS ZR3",NL," "\
						"    ON ZR3.CODRUB = 'STCK'",NL," "\
						"    AND ZR3.VALCLE = RB.VALRUB",NL," "\
						"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU AS ZRU",NL," "\
						"    ON ZRU.VALCLE = GL.MOTIMM",NL," "\
						"    AND ZRU.CODRUB = 'AVAR'",NL," "\
						"    AND ZRU.VALRUB = 'SIM'",NL," "\
						"WHERE GL.CODACT = '",tCODACTLido,"'",NL," "\
						"GROUP BY  GL.CODPRO",NL," "\
						"         ,RB2.VALRUB",NL," "\
						"         ,GL.UNIPRO",NL," "\
						"         ,CASE WHEN GL.MOTIMM = ''",NL," "\
						"                THEN ZR3.VALRUB",NL," "\
						"                ELSE ZR2.VALRUB",NL," "\
						"          END",NL," "\
						"         ,ZRU.VALRUB",NL," "\
						"ORDER BY  GL.CODPRO")

		log("------------------------------------------------------------", NL)
		log(tQuery,NL)
		log("------------------------------------------------------------", NL)

		if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
			bfSqlErro()
			exit(1)
		endif

		if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro()
			exit(1)
		endif

		nCountQueryResult := 0
		while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
			nCountQueryResult++
			R_VALUE_PRODUCT_CODE(peel(taDb2Array["PRODUCT_CODE"]," "))
			R_VALUE_CNPJ_ORIGIN(peel(taDb2Array["CNPJ_ORIGIN"]," "))
			R_VALUE_CURRENT_DATA(peel(taDb2Array["CURRENT_DATA"]," "))
			R_VALUE_CURRENT_TIME(peel(taDb2Array["CURRENT_TIME"]," "))
			R_VALUE_DAMAGED_QUANTITY_OF_PRODUCT(peel(taDb2Array["DAMAGED_QUANTITY_OF_PRODUCT"]," "))
			R_VALUE_PRODUCT_QUANTITY(peel(taDb2Array["PRODUCT_QUANTITY"]," "))
			R_VALUE_PRODUCT_MEASUREMENT_UNIT(peel(taDb2Array["PRODUCT_MEASUREMENT_UNIT"]," "))
			R_VALUE_STOCK_TYPE(peel(taDb2Array["STOCK_TYPE"]," "))
			R_VALUE_SERIAL_NUMBER(peel(taDb2Array["CODSER"]," "))
        
            print(taVALUE[1],";", \
                    taVALUE[2],";", \
                    taVALUE[3],";", \
                    taVALUE[4],";", \
                    taVALUE[5],";", \
                    taVALUE[6],";", \
                    taVALUE[7],";", \
                    taVALUE[8],";", \
                    taVALUE[9], NL) >> tFileOutTemp
            remove(taVALUE)

			remove(taDb2Array)
		endwhile

		if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro()
			exit(1)
		endif

		if nCountQueryResult > 0 then
			close(tFileOutTemp)
			copy(tFileOutTemp,tFileOut)
			close(tFileOutTemp)
			remove(tFileOutTemp)
			close(tFileOut)

			bfMajtraceTXT("Recebida" \
						,"0" \
						,tMensagem \
						,tDataDocumento \
						,tFileInput \
						,tFileOut \
						,tMensagem \
						,"")
		else
			remove(tFileOutTemp)
			remove(tFileOut)
		endif
	! FIM M90 INVENTORY

	bfSqlClose(tDbBase)

	log("------------------------------------------------------------", NL)
	log("Fim...: ", time("now","%Y-%m-%d %H:%M:%S"), NL)
	log("------------------------------------------------------------", NL)

	exit(0)
endend

!==============================================================================

function bfMajtrace(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErro)
	TRACE.ESTADO := tStatus
	TRACE.ERRO := tError
	TRACE.DATATRADUCAO := tDataDoc
	TRACE.MENSAGEM := tTipoDocumento
	TRACE.PERFIL := tBEGINSUBJbat
	TRACE.SENTIDO := tSentido
	TRACE.MENSAGEM := tTipoDocumento
	TRACE.NUMDOC := tNumDoc
	TRACE.DATDOC := time("now","%Y-%m-%d")
	TRACE.MESSAGEID := build(nMessageID)
	if pEDISEND.ORIGINAL.NAME <> build(SYSLOG.INDEX) then
		TRACE.REDE := pEDISEND.ORIGINAL.NAME
	else
		TRACE.REDE := "REPROCESSADO"
	endif
	TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
	TRACE.FICHEIROSAIDA := tNameOut

	SYSLOG.REFERENCE := build(nMessageID)

	close(TRACE.Detail)
	close(SYSLOG.a)

	flush(TRACE)

endfunction

!==============================================================================

function bfMajtraceBP(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
    TRACE:=new(build(sHOME,"/trace"))
    TRACE.ESTADO := tStatus
    TRACE.ERRO := tError
    TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
    TRACE.PERFIL := tPerfil
    TRACE.SENTIDO := tSentido
    TRACE.MENSAGEM := tMensagem
    TRACE.NUMDOC := tMensagem
    TRACE.DATDOC := tfConvertDate(build(tData), "YYYYMMDD" , "YYYY-MM-DD") 
    TRACE.MESSAGEID := build(nMessageID:R010)
	if pEDISEND.ORIGINAL.NAME <> build(SYSLOG.INDEX) then
		TRACE.REDE := pEDISEND.ORIGINAL.NAME
	else
		TRACE.REDE := "REPROCESSADO"
	endif
    TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
    TRACE.FICHEIROSAIDA := tNameOutBP

	SYSLOG.REFERENCE := build(nMessageID)

	if tError = "0" then
		print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
		print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
		print("Traduzida com Sucesso",NL) >> TRACE.Detail
	else
		if tError = "1" then
			print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
			print("Erro de Traducao",NL) >> TRACE.Detail
			print(tMensagemErro,NL) >> TRACE.Detail
		endif
	endif

    close(TRACE.Detail)
    close(SYSLOG.a)

    if nMainIndex = 0 then
        copy(SYSLOG.a,TRACE.In)
        close(SYSLOG.a)
        close(TRACE.In)
        nMainIndex := TRACE.INDEX
    else
        tCmd := build("ln -s ", sHOME, "/trace/files/In/", nMainIndex, " ", TRACE.In)
        system(tCmd)
    endif

		close(tFileOutTempBP)
		copy(tFileOutTempBP,TRACE.Out)
		close(tFileOutTempBP)
		close(TRACE.Out)
		remove(tFileOutTempBP)

    flush(TRACE)
endfunction

!==============================================================================

function bfMajtraceTXT(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
    TRACE:=new(build(sHOME,"/trace"))
    TRACE.ESTADO := tStatus
    TRACE.ERRO := tError
    TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
    TRACE.PERFIL := tPerfil
    TRACE.SENTIDO := tSentido
    TRACE.MENSAGEM := tMensagem
    TRACE.NUMDOC := tMensagem
    TRACE.DATDOC := tfConvertDate(build(tData), "YYYYMMDD" , "YYYY-MM-DD") 
    TRACE.MESSAGEID := build(nMessageID:R010)
	if pEDISEND.ORIGINAL.NAME <> build(SYSLOG.INDEX) then
		TRACE.REDE := pEDISEND.ORIGINAL.NAME
	else
		TRACE.REDE := "REPROCESSADO"
	endif
    TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
    TRACE.FICHEIROSAIDA := tNameOut

	SYSLOG.REFERENCE := build(nMessageID)

	if tError = "0" then
		print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
		print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
		print("Traduzida com Sucesso",NL) >> TRACE.Detail
	else
		if tError = "1" then
			print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
			print("Erro de Traducao",NL) >> TRACE.Detail
			print(tMensagemErro,NL) >> TRACE.Detail
		endif
	endif

    close(TRACE.Detail)
    close(SYSLOG.a)

    if nMainIndex = 0 then
        copy(SYSLOG.a,TRACE.In)
        close(SYSLOG.a)
        close(TRACE.In)
        nMainIndex := TRACE.INDEX
    else
        tCmd := build("ln -s ", sHOME, "/trace/files/In/", nMainIndex, " ", TRACE.In)
        system(tCmd)
    endif

	close(tFileOut)
	copy(tFileOut,TRACE.Out)
	close(tFileOut)
	close(TRACE.Out)

    flush(TRACE)
endfunction

!==============================================================================

function bfMajtrace2(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
	TRACE2.ESTADO := tStatus
	TRACE2.ERRO := tError
	TRACE2.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
	TRACE2.MENSAGEM := tTipoDocumento
	TRACE2.PERFIL := tBEGINSUBJp5
	TRACE2.SENTIDO := tSentido
	TRACE2.MENSAGEM := build("P5 – ESTOQUE OFICIAL WMS - ",tCODACTLido)
	TRACE2.NUMDOC := build("P5 – ESTOQUE OFICIAL WMS - ",tCODACTLido)
	TRACE2.DATDOC := time("now","%Y-%m-%d")
	TRACE2.MESSAGEID := build(nMessageID)
	if pEDISEND.ORIGINAL.NAME <> build(SYSLOG.INDEX) then
		TRACE2.REDE := pEDISEND.ORIGINAL.NAME
	else
		TRACE2.REDE := "REPROCESSADO"
	endif
	TRACE2.SYSLOG_INDEX := build(SYSLOG.INDEX)
	TRACE2.FICHEIROSAIDA := tArquivoEmailSentinel

	SYSLOG.REFERENCE := build(nMessageID)

	close(TRACE2.Detail)
	close(SYSLOG.a)

	flush(TRACE2)

endfunction

!==============================================================================

function bfMajtraceM06(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErro)
	TRACE:=new(build(sHOME,"/trace"))
	TRACE.ESTADO := tStatus
	TRACE.ERRO := tError
	TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
	TRACE.PERFIL := tPerfil
	TRACE.SENTIDO := tSentido
	TRACE.MENSAGEM := tTipoDocumento
	TRACE.NUMDOC := tNumDoc
	TRACE.DATDOC := tDataDoc
	TRACE.MESSAGEID := build(nMessageID)
	if pEDISEND.ORIGINAL.NAME <> build(SYSLOG.INDEX) then
		TRACE.REDE := pEDISEND.ORIGINAL.NAME
	else
		TRACE.REDE := "REPROCESSADO"
	endif
	TRACE.FICHEIROSAIDA := tNameOutM06
	TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)

	SYSLOG.REFERENCE := build(nMessageID)

	if tError = "0" then
		print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
		print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
		print("Traduzida com Sucesso",NL) >> TRACE.Detail
	else
		if tError = "1" then
			print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
			print("Erro de Traducao",NL) >> TRACE.Detail
			print(tMensagemErro,NL) >> TRACE.Detail
		endif
	endif

	close(TRACE.Detail)

	if nMainIndex = 0 then
		close(SYSLOG.a)
		copy(SYSLOG.a,TRACE.In)
		close(SYSLOG.a)
		close(TRACE.In)

		nMainIndex := TRACE.INDEX
	else
		tCmd := build("ln -s ", sHOME, "/trace/files/In/", nMainIndex, " ", TRACE.In)
		system(tCmd)
	endif

	if tError = "0" then
		close(tFileOutM06)
		copy(tFileOutM06,TRACE.Out)
		close(tFileOutM06)
		close(TRACE.Out)
	endif

	flush(TRACE)

endfunction

!==============================================================================

function bfSqlErro()
    print("FATAL: ",tfSqlErrorStr())
    bfMajtrace(	"Erro de Traducao" \
                ,"1" \
                ,tNumeroDocumento \
                ,tDataDocumento \
                ,tFileInput \
                ,tFileOut \
                ,tMensagem \
                ,build("Erro no banco de dados: ",tfSqlErrorStr()))     
endfunction

!==============================================================================

function bfToInfolog()

	tCmd := build("edisend ToInfolog ", tFileOut)
	log("executando o comando - ", tCmd, NL)
	system(tCmd)

endfunction

!==============================================================================

function bfBatimento_Resumo()

	!==============================================================================
	!RESUMO
	!==============================================================================
			
	tQuery := build("SELECT  SUBSTR(CHAR(CURRENT_TIMESTAMP),9,2)||'/'||SUBSTR(CHAR(CURRENT_TIMESTAMP),6,2)||'/'||LEFT(CHAR(CURRENT_TIMESTAMP),4) DATADIA",NL," "\
					"       ,RE.PRODUTO",NL," "\
					"       ,RE.PLANTA",NL," "\
					"       ,CASE WHEN RB.VALRUB IS NULL THEN AC.VALRUB  ELSE RB.VALRUB END DEPOSITO",NL," "\
					"       ,'0' LOTE",NL," "\
					"       ,CASE WHEN (RE.SITUACAO = 'LIV' OR RE.SITUACAO IS NULL) THEN CASE",NL," "\
					"             WHEN SUM(RE.QTDE_LIVRE + QTDE_CHK_CONF - QTDE_PUT_SEM_ITF - RE.QTD_ONDA_SEM_SEP) < 0 THEN 0  ELSE SUM(RE.QTDE_LIVRE + QTDE_CHK_CONF - QTDE_PUT_SEM_ITF - RE.QTD_ONDA_SEM_SEP) END  ELSE 0 END LIVRE",NL," "\
					"       ,CASE WHEN (RE.SITUACAO = 'LIV' OR RE.SITUACAO IS NULL) THEN SUM(RE.QTDE_LIVRE * PP.VOLUVC) / 10",NL," "\
					"             WHEN RE.SITUACAO = 'BLO' THEN SUM(RE.QTDE_BLOQ * PP.VOLUVC) / 10",NL," "\
					"             WHEN RE.SITUACAO = 'CQ' THEN SUM(RE.QTDE_CQ * PP.VOLUVC) / 10 END VOLUME",NL," "\
					"       ,CASE WHEN RE.SITUACAO = 'BLO' THEN SUM(RE.QTDE_BLOQ + QTDE_CHK_CONF - QTDE_PUT_SEM_ITF - RE.QTD_ONDA_SEM_SEP)  ELSE 0 END BLOQ",NL," "\
					"       ,CASE WHEN RE.SITUACAO = 'CQ' THEN SUM(RE.QTDE_CQ + QTDE_CHK_CONF - QTDE_PUT_SEM_ITF - RE.QTD_ONDA_SEM_SEP)  ELSE 0 END CQ",NL," "\
					"       ,SUM(RE.QTDE_REC_DIA) QTDE_ENT_DIA",NL," "\
					"       ,SUM(RE.QTDESEPDIA) QTDE_SAI_DIA",NL," "\
					"       ,RE.STATUS",NL," "\
					"       ,SUBSTR(CHAR(CURRENT_TIMESTAMP),9,2)||'/'||SUBSTR(CHAR(CURRENT_TIMESTAMP),6,2)||'/'||LEFT(CHAR(CURRENT_TIMESTAMP),4) || ' ' || SUBSTR(CHAR(CURRENT_TIMESTAMP),12,2)||':'||SUBSTR(CHAR(CURRENT_TIMESTAMP),15,2) DATAHORADIA",NL," "\
					"       ,EA.EDIPRO EAN_PRINCIPAL",NL," "\
					"FROM",NL," "\
					"(",NL," "\
					"        SELECT  CODPRO PRODUTO",NL," "\
					"               ,PL.CODACT PLANTA",NL," "\
					"               ,0 DEPOSITO",NL," "\
					"               ,'0' LOTE",NL," "\
					"               ,CASE WHEN (IM.EDIIMO = 'LIV' OR IM.EDIIMO IS NULL) THEN SUM(PL.UVCSTO)  ELSE 0 END QTDE_LIVRE",NL," "\
					"               ,CASE WHEN IM.EDIIMO = 'BLO' THEN SUM(PL.UVCSTO)  ELSE 0 END QTDE_BLOQ",NL," "\
					"               ,CASE WHEN IM.EDIIMO = 'CQ' THEN SUM(PL.UVCSTO)  ELSE 0 END QTDE_CQ",NL," "\
					"               ,0 QTDE_REC_DIA",NL," "\
					"               ,0 QTDE_PUT_SEM_ITF",NL," "\
					"               ,0 QTDE_CHK_CONF",NL," "\
					"               ,0 QTDESEPDIA",NL," "\
					"               ,0 QTD_ONDA_SEM_SEP",NL," "\
					"               ,0 QTD_SEM_ONDA",NL," "\
					"               ,CASE WHEN IM.EDIIMO IS NULL THEN 'NM'  ELSE PL.MOTIMM END STATUS",NL," "\
					"               ,CASE WHEN IM.EDIIMO IS NULL THEN 'LIV'  ELSE IM.EDIIMO END SITUACAO",NL," "\
					"        FROM FGE50FM",tToInfologPrefixFilename,".GEPAL PL",NL," "\
					"        LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
					"        ON IM.MOTIMM = PL.MOTIMM",NL," "\
					"        WHERE PL.CODACT = '",tCODACTLido,"'",NL," "\
					"        AND PL.ETAPAL NOT IN (50, 60)",NL," "\
					"        GROUP BY  CODPRO",NL," "\
					"                 ,PL.CODACT",NL," "\
					"                 ,PL.MOTIMM",NL," "\
					"                 ,IM.EDIIMO",NL," "\
					"        UNION ALL",NL," "\
					"        SELECT  PL.CODPRO PRODUTO",NL," "\
					"               ,PL.CODACT PLANTA",NL," "\
					"               ,0 DEPOSITO",NL," "\
					"               ,'0' LOTE",NL," "\
					"               ,0 QTDE_LIVRE",NL," "\
					"               ,0 QTDE_BLOQ",NL," "\
					"               ,0 QTDE_CQ",NL," "\
					"               ,CASE WHEN RD.ETAREC = 50 THEN SUM(PL.UVCSTO)  ELSE 0 END QTDE_REC_DIA",NL," "\
					"               ,CASE WHEN RD.ETAREC < 50 THEN SUM(PL.UVCSTO)  ELSE 0 END QTDE_PUT_SEM_ITF",NL," "\
					"               ,CASE WHEN RD.ETAREC = 50 THEN CASE",NL," "\
					"                     WHEN PL.ETAPAL = 50 THEN SUM(PL.UVCSTO)  ELSE 0 END END QTDE_CHK_CONF",NL," "\
					"               ,0 QTDESEPDIA",NL," "\
					"               ,0 QTD_ONDA_SEM_SEP",NL," "\
					"               ,0 QTD_SEM_ONDA",NL," "\
					"               ,CASE WHEN IM.EDIIMO IS NULL THEN 'NM'  ELSE PL.MOTIMM END STATUS",NL," "\
					"               ,CASE WHEN IM.EDIIMO IS NULL THEN 'LIV'  ELSE IM.EDIIMO END SITUACAO",NL," "\
					"        FROM FGE50FM",tToInfologPrefixFilename,".GEPAL PL",NL," "\
					"        INNER JOIN FGE50FM",tToInfologPrefixFilename,".GERECD RD",NL," "\
					"        ON PL.NUMREC = RD.NUMREC AND PL.SNUREC = RD.SNUREC AND PL.CODPRO = RD.CODPRO AND PL.CODACT = RD.CODACT",NL," "\
					"        LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GERECE RE",NL," "\
					"        ON RD.NUMREC = RE.NUMREC AND RD.SNUREC = RE.SNUREC",NL," "\
					"        LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
					"        ON IM.MOTIMM = PL.MOTIMM",NL," "\
					"        WHERE PL.CODACT = '",tCODACTLido,"'",NL," "\
					"        AND PL.ETAPAL <> 60",NL," "\
					"        GROUP BY  PL.CODPRO",NL," "\
					"                 ,PL.CODACT",NL," "\
					"                 ,IM.EDIIMO",NL," "\
					"                 ,PL.MOTIMM",NL," "\
					"                 ,RD.ETAREC",NL," "\
					"                 ,PL.ETAPAL",NL," "\
					"        UNION ALL",NL," "\
					"        SELECT  SD.CODPRO PRODUTO",NL," "\
					"               ,SE.CODACT PLANTA",NL," "\
					"               ,0 DEPOSITO",NL," "\
					"               ,'0' LOTE",NL," "\
					"               ,0 QTDE_LIVRE",NL," "\
					"               ,0 QTDE_BLOQ",NL," "\
					"               ,0 QTDE_CQ",NL," "\
					"               ,0 QTDE_REC_DIA",NL," "\
					"               ,0 QTDE_PUT_SEM_ITF",NL," "\
					"               ,0 QTDE_CHK_CONF",NL," "\
					"               ,SUM(SD.UVCLIV) QTDESEPDIA",NL," "\
					"               ,0 QTD_ONDA_SEM_SEP",NL," "\
					"               ,0 QTD_SEM_ONDA",NL," "\
					"               ,CASE WHEN IM.EDIIMO IS NULL THEN 'NM'  ELSE SD.MOTIMM END STATUS",NL," "\
					"               ,CASE WHEN IM.EDIIMO IS NULL THEN 'LIV'  ELSE IM.EDIIMO END SITUACAO",NL," "\
					"        FROM",NL," "\
					"        (",NL," "\
					"                SELECT  DATSUP2",NL," "\
					"                       ,TOULIV",NL," "\
					"                       ,NUMLIV",NL," "\
					"                       ,SNULIV",NL," "\
					"                       ,NUMTOU",NL," "\
					"                       ,CODACT",NL," "\
					"                       ,MIN (ETASUP) ETASUP",NL," "\
					"                FROM FGE50FM",tToInfologPrefixFilename,".GESUPE",NL," "\
					"                WHERE TYPSUP <> 3",NL," "\
					"                AND CLILIV <> 'MASSIFICATION'",NL," "\
					"                GROUP BY  DATSUP2",NL," "\
					"                         ,TOULIV",NL," "\
					"                         ,NUMLIV",NL," "\
					"                         ,SNULIV",NL," "\
					"                         ,NUMTOU",NL," "\
					"                         ,CODACT",NL," "\
					"        ) SE",NL," "\
					"        INNER JOIN FGE50FM",tToInfologPrefixFilename,".GESUPD SD",NL," "\
					"        ON SE.NUMLIV = SD.NUMLIV AND SE.SNULIV = SD.SNULIV AND SE.CODACT = SD.CODACT AND SE.NUMLIV = SD.NUMLIV",NL," "\
					"        LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
					"        ON IM.MOTIMM = SD.MOTIMM",NL," "\
					"        WHERE SE.ETASUP = 30",NL," "\
					"        AND SE.CODACT = '",tCODACTLido,"'",NL," "\
					"        AND SD.UVCLIV > 0",NL," "\
					"        GROUP BY  SD.CODPRO",NL," "\
					"                 ,SE.CODACT",NL," "\
					"                 ,SE.TOULIV",NL," "\
					"                 ,IM.EDIIMO",NL," "\
					"                 ,SD.MOTIMM",NL," "\
					"        UNION ALL",NL," "\
					"        SELECT  SD.CODPRO PRODUTO",NL," "\
					"               ,SD.CODACT PLANTA",NL," "\
					"               ,0 DEPOSITO",NL," "\
					"               ,'0' LOTE",NL," "\
					"               ,0 QTDE_LIVRE",NL," "\
					"               ,0 QTDE_BLOQ",NL," "\
					"               ,0 QTDE_CQ",NL," "\
					"               ,0 QTDE_REC_DIA",NL," "\
					"               ,0 QTDE_PUT_SEM_ITF",NL," "\
					"               ,0 QTDE_CHK_CONF",NL," "\
					"               ,0 QTDESEPDIA",NL," "\
					"               ,SUM( CASE SD.INDMAS WHEN '3' THEN D.UVCLIV ELSE SD.UVCLIV END) AS QTD_ONDA_SEM_SEP",NL," "\
					"               ,0 QTD_SEM_ONDA",NL," "\
					"               ,CASE WHEN SE.TYPSUP = 1 THEN CASE",NL," "\
					"                     WHEN IM2.EDIIMO IS NULL THEN 'NM'  ELSE PL.MOTIMM END  ELSE CASE",NL," "\
					"                     WHEN IM.EDIIMO IS NULL THEN 'NM'  ELSE SD.MOTIMM END END STATUS",NL," "\
					"               ,CASE WHEN SE.TYPSUP = 1 THEN CASE",NL," "\
					"                     WHEN IM2.EDIIMO IS NULL THEN 'LIV'  ELSE IM2.EDIIMO END  ELSE CASE",NL," "\
					"                     WHEN IM.EDIIMO IS NULL THEN 'LIV'  ELSE IM.EDIIMO END END SITUACAO",NL," "\
					"        FROM FGE50FM",tToInfologPrefixFilename,".GESUPE SE",NL," "\
					"        LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GESUPD SD",NL," "\
					"        ON SE.NUMSUP = SD.NUMSUP AND SE.SNUSUP = SD.SNUSUP AND SE.NUMLIV = SD.NUMLIV",NL," "\
					"        LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GESUPD D",NL," "\
					"        ON D.CPTMAS = SD.CPTMAS AND D.INDMAS = '1' AND D.CPTMAS > 0",NL," "\
					"        LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPAL PL",NL," "\
					"        ON SD.NUMPAL = PL.NUMPAL",NL," "\
					"        LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
					"        ON IM.MOTIMM = SD.MOTIMM",NL," "\
					"        LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM2",NL," "\
					"        ON IM2.MOTIMM = PL.MOTIMM",NL," "\
					"        WHERE SD.CODACT = '",tCODACTLido,"'",NL," "\
					"        AND SE.ETASUP < 30",NL," "\
					"        AND SD.UVCLIV > 0",NL," "\
					"        AND SD.NUMLIV <> 0",NL," "\
					"        AND SE.TYPSUP IN (1, 2)",NL," "\
					"        AND SD.INDMAS <> '1'",NL," "\
					"        AND SD.ZONSTS <> 'Z'",NL," "\
					"        GROUP BY  COALESCE(D.REFLIV,SD.REFLIV)",NL," "\
					"                 ,SD.CODPRO",NL," "\
					"                 ,SD.CODACT",NL," "\
					"                 ,IM.EDIIMO",NL," "\
					"                 ,SD.MOTIMM",NL," "\
					"                 ,IM2.EDIIMO",NL," "\
					"                 ,PL.MOTIMM",NL," "\
					"                 ,SE.TYPSUP",NL," "\
					") RE",NL," "\
					"INNER JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO PP",NL," "\
					"ON RE.PRODUTO = PP.CODPRO AND RE.PLANTA = PP.CODACT",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA",NL," "\
					"ON PP.CODPRO = EA.CODPRO AND PP.CODACT = EA.CODACT AND EA.EANDS1 = '12NC'",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU RB",NL," "\
					"ON RB.VALCLE = RE.STATUS AND RB.CODRUB = RE.PLANTA",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AC",NL," "\
					"ON AC.CODACT = RE.PLANTA AND AC.CODRUB = RE.PLANTA",NL," "\
					"WHERE RE.PRODUTO = PP.CODPRO",NL," "\
					"AND RE.PLANTA = PP.CODACT",NL," "\
					"GROUP BY  RE.PRODUTO",NL," "\
					"         ,RE.PLANTA",NL," "\
					"         ,AC.VALRUB",NL," "\
					"         ,RB.VALRUB",NL," "\
					"         ,RE.STATUS",NL," "\
					"         ,RE.SITUACAO",NL," "\
					"         ,EA.EDIPRO",NL," "\
					"ORDER BY RE.PRODUTO")

		log("------------------------------------------------------------", NL)
		log(tQuery,NL)
		log("------------------------------------------------------------", NL)

		if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
			bfSqlErro()
			exit(1)
		endif

		if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro()
			exit(1)
		endif

		bQueryTemResul := FALSE
		while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
			if bQueryTemResul = FALSE then
				bQueryTemResul := TRUE
				print("DATADIA;" \
						"PRODUTO;" \
						"PLANTA;" \
						"DEPOSITO;" \
						"LOTE;" \
						"LIVRE;" \
						"VOLUME;" \
						"BLOQ;" \
						"CQ;" \
						"QTDE_ENT_DIA;" \
						"QTDE_SAI_DIA;" \
						"STATUS;" \
						"DATAHORADIA;" \
						"EAN_PRINCIPAL;" \
						"",NL) >> TRACE.RESUMO

				fmbrasil_gama_ajustes_estoque := find(build(sHOME,"/fmbrasil_gama_ajustes_estoque/"),Planta=tCODACTLido)dINDEX
				if valid(fmbrasil_gama_ajustes_estoque) then
					close(fmbrasil_gama_ajustes_estoque.CSV)
					copy(fmbrasil_gama_ajustes_estoque.CSV, TRACE.CONTROLE_AJUSTES_WMS)
					close(TRACE.CONTROLE_AJUSTES_WMS)
					close(fmbrasil_gama_ajustes_estoque.CSV)
				endif
			endif
						
			if length(peel(taDb2Array["STATUS"]," ")) > 0 then
				fmbrasil_gama_ajustes_estoque := find(build(sHOME,"/fmbrasil_gama_ajustes_estoque/"),Produto=peel(taDb2Array["PRODUTO"]," "),Planta=peel(taDb2Array["PLANTA"]," "),STATUS=peel(taDb2Array["STATUS"]," "))
				while valid(fmbrasil_gama_ajustes_estoque) do
					taDb2Array[fmbrasil_gama_ajustes_estoque.COD_SIT_CLI] := peel(taDb2Array[fmbrasil_gama_ajustes_estoque.COD_SIT_CLI]," ")
					if (number(taDb2Array[fmbrasil_gama_ajustes_estoque.COD_SIT_CLI])-number(fmbrasil_gama_ajustes_estoque.Qtd)) >= 0 then
						taDb2Array[fmbrasil_gama_ajustes_estoque.COD_SIT_CLI] := build(number(taDb2Array[fmbrasil_gama_ajustes_estoque.COD_SIT_CLI])-number(fmbrasil_gama_ajustes_estoque.Qtd))
					endif
					fmbrasil_gama_ajustes_estoque.TRACEGIM := build(TRACE.INDEX)
					fmbrasil_gama_ajustes_estoque := find()
				endwhile
			else
				fmbrasil_gama_ajustes_estoque := find(build(sHOME,"/fmbrasil_gama_ajustes_estoque/"),Produto=peel(taDb2Array["PRODUTO"]," "),Planta=peel(taDb2Array["PLANTA"]," "),STATUS="")
				while valid(fmbrasil_gama_ajustes_estoque) do
					if length(fmbrasil_gama_ajustes_estoque.STATUS) > 0 and (number(taDb2Array["LIVRE"])-number(fmbrasil_gama_ajustes_estoque.Qtd)) >= 0 then
						taDb2Array["LIVRE"] := peel(taDb2Array["LIVRE"]," ")
						taDb2Array["LIVRE"] := build(number(taDb2Array["LIVRE"])-number(fmbrasil_gama_ajustes_estoque.Qtd))
					endif
					fmbrasil_gama_ajustes_estoque.TRACEGIM := build(TRACE.INDEX)
					fmbrasil_gama_ajustes_estoque := find()
				endwhile
			endif
						
			print(peel(taDb2Array["DATADIA"]," "),";", \
					peel(taDb2Array["PRODUTO"]," "),";", \
					peel(taDb2Array["PLANTA"]," "),";", \
					peel(taDb2Array["DEPOSITO"]," "),";", \
					peel(taDb2Array["LOTE"]," "),";", \
					peel(taDb2Array["LIVRE"]," "),";", \
					peel(taDb2Array["VOLUME"]," "),";", \
					peel(taDb2Array["BLOQ"]," "),";", \
					peel(taDb2Array["CQ"]," "),";", \
					peel(taDb2Array["QTDE_ENT_DIA"]," "),";", \
					peel(taDb2Array["QTDE_SAI_DIA"]," "),";", \
					peel(taDb2Array["STATUS"]," "),";", \
					peel(taDb2Array["DATAHORADIA"]," "),";", \
					peel(taDb2Array["EAN_PRINCIPAL"]," "),";", \
					NL) >> TRACE.RESUMO

			remove(taDb2Array)
		endwhile

		if bQueryTemResul = FALSE then
			print("Consulta não retornou resultados",NL) >> TRACE.RESUMO
		endif
				
		!acrescenta CSV entradas que nao foram processadas
		fmbrasil_gama_ajustes_estoque := find(build(sHOME,"/fmbrasil_gama_ajustes_estoque/"),Planta=tCODACTLido)
		while valid(fmbrasil_gama_ajustes_estoque) do
			if fmbrasil_gama_ajustes_estoque.TRACEGIM <> build(TRACE.INDEX) then
				if fmbrasil_gama_ajustes_estoque.COD_SIT_CLI = "LIVRE" and number(fmbrasil_gama_ajustes_estoque.Qtd) <= 0 then
					print(fmbrasil_gama_ajustes_estoque.Data,";", \
							fmbrasil_gama_ajustes_estoque.Produto,";", \
							fmbrasil_gama_ajustes_estoque.Planta,";", \
							fmbrasil_gama_ajustes_estoque.Deposito,";", \
							fmbrasil_gama_ajustes_estoque.Lote,";", \
							"",";", \
							replace(fmbrasil_gama_ajustes_estoque.Qtd,"-",""),";", \
							"",";", \
							"",";", \
							"",";", \
							"",";", \
							fmbrasil_gama_ajustes_estoque.STATUS,";", \
							"",";", \
							NL) >> TRACE.RESUMO
				endif
				if fmbrasil_gama_ajustes_estoque.COD_SIT_CLI = "BLOQ" and number(fmbrasil_gama_ajustes_estoque.Qtd) <= 0 then
					print(fmbrasil_gama_ajustes_estoque.Data,";", \
							fmbrasil_gama_ajustes_estoque.Produto,";", \
							fmbrasil_gama_ajustes_estoque.Planta,";", \
							fmbrasil_gama_ajustes_estoque.Deposito,";", \
							fmbrasil_gama_ajustes_estoque.Lote,";", \
							"",";", \
							"",";", \
							replace(fmbrasil_gama_ajustes_estoque.Qtd,"-",""),";", \
							"",";", \
							"",";", \
							"",";", \
							fmbrasil_gama_ajustes_estoque.STATUS,";", \
							"",";", \
							NL) >> TRACE.RESUMO
				endif
			endif									
			fmbrasil_gama_ajustes_estoque := find()
		endwhile
				
		close(TRACE.RESUMO)

		if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
			bfSqlErro()
			exit(1)
		endif

		tPrefixoSubjectEmail := tBEGINSUBJbat
		
		if bQueryTemResul = TRUE then
			remove(tArquivoEmailErro)
			tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/RESUMO_",time("now","%Y%m%d%H%M%S"),".csv")
			copy(TRACE.RESUMO,tArquivoEmailErro)
			close(TRACE.RESUMO)
			close(tArquivoEmailErro)

			tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_RESUMO") 
			tNameEMAIL := build("RESUMO_",time("now","%Y%m%d%H%M%S"),".csv")
			tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL,"  EMAIL.RCPT=",replace(replace(tTOEMAILbat," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILbat," ",""),";",",")," EmailResumo ",tArquivoEmailErro)
			log("executing command ",tCmdEmailErro,NL)
			nRet := system(tCmdEmailErro)
			close(tArquivoEmailErro)				
			remove(tArquivoEmailErro)
		else
			remove(tArquivoEmailErro)
			tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/RESUMO_",time("now","%Y%m%d%H%M%S"),".txt")
			print("***Informações de Resumo no Dia***",NL,NL,"***Não há dados para emissão do arquivo***",NL,NL,"Processo gerado automaticamente, não utilize a opção responder a este remetente.",NL,NL) >> tArquivoEmailErro
			close(tArquivoEmailErro)

			tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_RESUMO")
			tNameEMAIL := build("RESUMO_",time("now","%Y%m%d%H%M%S"),".txt")
			tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL," EMAIL.CONTENTID=text/plain EMAIL.DISPOSITION=inline EMAIL.RCPT=",replace(replace(tTOEMAILbat," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILbat," ",""),";",",")," EmailResumo ",tArquivoEmailErro)
			log("executing command ",tCmdEmailErro,NL)
			nRet := system(tCmdEmailErro)
			close(tArquivoEmailErro)				
			remove(tArquivoEmailErro)
		endif

endfunction

!==============================================================================

function bfBatimento_EstoqueProduto()

	!==============================================================================
	!ESTOQUE_PRODUTO
	!==============================================================================

	tQuery := build("SELECT  SUBSTR(CHAR(CURRENT_TIMESTAMP),9,2)||'/'||SUBSTR(CHAR(CURRENT_TIMESTAMP),6,2)||'/'||LEFT(CHAR(CURRENT_TIMESTAMP),4) DTMVTO",NL," "\
					"       ,PL.CODPRO PRODUTO",NL," "\
					"       ,PL.CODACT PLANTA",NL," "\
					"       ,CASE WHEN RB.VALRUB IS NULL THEN AC.VALRUB  ELSE RB.VALRUB END DEPOSITO",NL," "\
					"       ,'' LOTE",NL," "\
					"       ,CASE WHEN IM.EDIIMO IS NULL THEN 'LIV'  ELSE IM.EDIIMO END COD_SIT_CLI",NL," "\
					"       ,SUM(PL.UVCSTO) QUANTIDADE",NL," "\
					"       ,PL.MOTIMM STATUS",NL," "\
					"       ,EA.EDIPRO EAN_PRINCIPAL",NL," "\
					"FROM FGE50FM",tToInfologPrefixFilename,".GEPAL PL",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
					"    ON IM.MOTIMM = PL.MOTIMM",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU RB",NL," "\
					"    ON IM.MOTIMM = RB.VALCLE",NL," "\
					"    AND RB.VALCLE = PL.MOTIMM",NL," "\
					"    AND RB.CODRUB = PL.CODACT",NL," "\
					"    AND RB.CODRUB = PL.CODACT",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AC",NL," "\
					"    ON AC.CODACT = PL.CODACT",NL," "\
					"    AND AC.CODRUB = PL.CODACT",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA",NL," "\
					"    ON PL.CODPRO = EA.CODPRO",NL," "\
					"    AND PL.CODACT = EA.CODACT",NL," "\
					"    AND EA.EANDS1 = '12NC'",NL," "\
					"WHERE PL.ETAPAL NOT IN (50, 60)",NL," "\
					"AND PL.CODACT = '",tCODACTLido,"'",NL," "\
					"GROUP BY  PL.CODPRO",NL," "\
					"         ,PL.CODACT",NL," "\
					"         ,RB.VALRUB",NL," "\
					"         ,AC.VALRUB",NL," "\
					"         ,IM.EDIIMO",NL," "\
					"         ,PL.MOTIMM",NL," "\
					"         ,EA.EDIPRO",NL," "\
					"ORDER BY 3",NL," "\
					"         ,2")

	log("------------------------------------------------------------", NL)
	log(tQuery,NL)
	log("------------------------------------------------------------", NL)

	if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

	bQueryTemResul := FALSE
	while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
		if bQueryTemResul = FALSE then
			bQueryTemResul := TRUE
			print("DTMVTO;"\
					"PRODUTO;"\
					"PLANTA;"\
					"DEPOSITO;"\
					"LOTE;"\
					"COD_SIT_CLI;"\
					"QUANTIDADE;"\
					"STATUS;"\
					"EAN_PRINCIPAL;"\
					"", NL) >> TRACE.ESTOQUE_PRODUTO
		endif
					
		print(peel(taDb2Array["DTMVTO"]," "),";", \
				peel(taDb2Array["PRODUTO"]," "),";", \
				peel(taDb2Array["PLANTA"]," "),";", \
				peel(taDb2Array["DEPOSITO"]," "),";", \
				peel(taDb2Array["LOTE"]," "),";", \
				peel(taDb2Array["COD_SIT_CLI"]," "),";", \
				peel(taDb2Array["QUANTIDADE"]," "),";", \
				peel(taDb2Array["STATUS"]," "),";", \
				peel(taDb2Array["EAN_PRINCIPAL"]," "),";", NL) >> TRACE.ESTOQUE_PRODUTO

		remove(taDb2Array)
	endwhile

	if bQueryTemResul = FALSE then
		print("Consulta não retornou resultados",NL) >> TRACE.ESTOQUE_PRODUTO
	endif

	close(TRACE.ESTOQUE_PRODUTO)

	if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif	

endfunction

!==============================================================================

function bfBatimento_PaleteLocacao()

	!==============================================================================
	!ESTOQUE_PALETE_LOCACAO
	!==============================================================================

	tQuery := build("SELECT  SUBSTR(CHAR(CURRENT_TIMESTAMP),9,2)||'/'||SUBSTR(CHAR(CURRENT_TIMESTAMP),6,2)||'/'||LEFT(CHAR(CURRENT_TIMESTAMP),4) DTMVTO",NL," "\
					"       ,PL.CODPRO PRODUTO",NL," "\
					"       ,PL.CODACT PLANTA",NL," "\
					"       ,CASE",NL," "\
					"            WHEN RB.VALRUB IS NULL",NL," "\
					"            THEN AC.VALRUB",NL," "\
					"            ELSE RB.VALRUB",NL," "\
					"        END DEPOSITO",NL," "\
					"       ,PL.CODLOT LOTE",NL," "\
					"       ,CASE",NL," "\
					"            WHEN IM.EDIIMO IS NULL",NL," "\
					"            THEN 'LIV'",NL," "\
					"            ELSE IM.EDIIMO",NL," "\
					"        END COD_SIT_CLI",NL," "\
					"       ,PL.ZONSTS ||'-'|| RIGHT('000' || PL.ALLSTS,3) ||'-'|| RIGHT('0000' || PL.DPLSTS,4) ||'-'|| RIGHT('00' || PL.NIVSTS,2) LOCALIZACAO",NL," "\
					"       ,PL.UVCSTO QUANTIDADE",NL," "\
					"       ,PL.MOTIMM STATUS",NL," "\
					"       ,PL.CODPAL PALETE",NL," "\
					"       ,EA.EDIPRO EAN_PRINCIPAL",NL," "\
					"FROM FGE50FM",tToInfologPrefixFilename,".GEPAL PL",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
					"    ON IM.MOTIMM = PL.MOTIMM",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU RB",NL," "\
					"    ON IM.MOTIMM = RB.VALCLE",NL," "\
					"    AND RB.VALCLE = PL.MOTIMM",NL," "\
					"    AND RB.CODRUB = PL.CODACT",NL," "\
					"    AND RB.CODRUB = PL.CODACT",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AC",NL," "\
					"    ON AC.CODACT = PL.CODACT",NL," "\
					"    AND AC.CODRUB = PL.CODACT",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA",NL," "\
					"    ON PL.CODPRO = EA.CODPRO",NL," "\
					"    AND PL.CODACT = EA.CODACT",NL," "\
					"    AND EA.EANDS1 = '12NC'",NL," "\
					"WHERE PL.ETAPAL NOT IN (50, 60)",NL," "\
					"AND PL.CODACT = '",tCODACTLido,"'",NL," "\
					"ORDER BY 3, 2")

	log("------------------------------------------------------------", NL)
	log(tQuery,NL)
	log("------------------------------------------------------------", NL)

	if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

	bQueryTemResul := FALSE
	while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
		if bQueryTemResul = FALSE then
			bQueryTemResul := TRUE
			print("DTMVTO;" \
					"PRODUTO;" \
					"PLANTA;" \
					"DEPOSITO;" \
					"LOTE;" \
					"COD_SIT_CLI;" \
					"LOCALIZACAO;" \
					"QUANTIDADE;" \
					"STATUS;" \
					"PALETE;" \
					"EAN_PRINCIPAL;" \
					"",NL) >> TRACE.ESTOQUE_PALETE_LOCACAO
		endif
		print(peel(taDb2Array["DTMVTO"]," "),";", \
				peel(taDb2Array["PRODUTO"]," "),";", \
				peel(taDb2Array["PLANTA"]," "),";", \
				peel(taDb2Array["DEPOSITO"]," "),";", \
				peel(taDb2Array["LOTE"]," "),";", \
				peel(taDb2Array["COD_SIT_CLI"]," "),";", \
				peel(taDb2Array["LOCALIZACAO"]," "),";", \
				peel(taDb2Array["QUANTIDADE"]," "),";", \
				peel(taDb2Array["STATUS"]," "),";", \
				peel(taDb2Array["PALETE"]," "),";", \
				peel(taDb2Array["EAN_PRINCIPAL"]," "),";", NL) >> TRACE.ESTOQUE_PALETE_LOCACAO

		remove(taDb2Array)
	endwhile

	if bQueryTemResul = FALSE then
		print("Consulta não retornou resultados",NL) >> TRACE.ESTOQUE_PALETE_LOCACAO
	endif
			
	close(TRACE.ESTOQUE_PALETE_LOCACAO)

	if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

endfunction

!==============================================================================

function bfBatimento_Checkin()

	!==============================================================================
	!CHECKIN_CONF
	!==============================================================================

	
	tNomeQuery := "CHECKIN_CONF"
	tQuery := build("SELECT  RD.DATREC DATA",NL," "\
					"       ,PL.REFREC BL",NL," "\
					"       ,PL.CODPRO PRODUTO",NL," "\
					"       ,PL.CODACT PLANTA",NL," "\
					"       ,RB.VALRUB DEPOSITO",NL," "\
					"       ,PL.CODLOT LOTE",NL," "\
					"       ,CASE",NL," "\
					"        WHEN IM.EDIIMO IS NULL THEN 'LIV' ",NL," "\
					"        ELSE IM.EDIIMO",NL," "\
					"        END COD_SIT_CLI",NL," "\
					"       ,SUM(PL.UVCSTO) QUANTIDADE",NL," "\
					"       ,PL.MOTIMM STATUS",NL," "\
					"        ,EA.EDIPRO EAN_PRINCIPAL ",NL," "\
					" FROM   FGE50FM",tToInfologPrefixFilename,".GEPAL PL INNER JOIN FGE50FM",tToInfologPrefixFilename,".GERECD RD",NL," "\
					" ON     PL.NUMREC=RD.NUMREC",NL," "\
					" AND    PL.CODPRO=RD.CODPRO",NL," "\
					" AND    PL.CODACT=RD.CODACT",NL," "\
					" LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
					" ON     IM.MOTIMM=PL.MOTIMM",NL," "\
					" LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU RB",NL," "\
					" ON     IM.MOTIMM=RB.VALCLE",NL," "\
					" AND    RB.VALCLE=PL.MOTIMM",NL," "\
					" AND    RB.CODRUB=PL.CODACT",NL," "\
					" AND    RB.CODRUB=RD.CODACT",NL," "\
					" LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA",NL," "\
					" ON    PL.CODPRO = EA.CODPRO",NL," "\
					" AND   PL.CODACT = EA.CODACT",NL," "\
					" AND   EA.EANDS1 = '12NC' ",NL," "\
					" WHERE  RD.ETAREC=50",NL," "\
					" AND    PL.ETAPAL=50",NL," "\
					" AND    PL.CODACT='",tCODACTLido,"'",NL," "\
					" GROUP BY RD.DATREC",NL," "\
					"		,PL.CODPRO",NL," "\
					"		,PL.REFREC",NL," "\
					"        ,PL.CODACT",NL," "\
					"        ,RB.VALRUB",NL," "\
					"        ,PL.CODLOT",NL," "\
					"        ,IM.EDIIMO",NL," "\
					"        ,PL.MOTIMM,EA.EDIPRO",NL," "\
					" ORDER BY 1,2,3")

	log("------------------------------------------------------------", NL)
	log(tQuery,NL)
	log("------------------------------------------------------------", NL)

	if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

	bQueryTemResul := FALSE
	while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
		if bQueryTemResul = FALSE then
			bQueryTemResul := TRUE
			print("DATA;" \
					"BL;" \
					"PRODUTO;" \
					"PLANTA;" \
					"DEPOSITO;" \
					"LOTE;" \
					"COD_SIT_CLI;" \
					"QUANTIDADE;" \
					"STATUS;" \
					"",NL) >> TRACE.CHECKIN_CONF_SOMA
		endif
		print(peel(taDb2Array["DATA"]," "),";", \
				peel(taDb2Array["BL"]," "),";", \
				peel(taDb2Array["PRODUTO"]," "),";", \
				peel(taDb2Array["PLANTA"]," "),";", \
				peel(taDb2Array["DEPOSITO"]," "),";", \
				peel(taDb2Array["LOTE"]," "),";", \
				peel(taDb2Array["COD_SIT_CLI"]," "),";", \
				peel(taDb2Array["QUANTIDADE"]," "),";", \
				peel(taDb2Array["STATUS"]," "),";", NL) >> TRACE.CHECKIN_CONF_SOMA

		remove(taDb2Array)
	endwhile

	if bQueryTemResul = FALSE then
		print("Consulta não retornou resultados",NL) >> TRACE.CHECKIN_CONF_SOMA
	endif

	close(TRACE.CHECKIN_CONF_SOMA)

	if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

endfunction

!==============================================================================

function bfBatimento_Putaway()

	!==============================================================================
	!PUTAWAY_SEM_INTERFACE
	!==============================================================================

	
	tNomeQuery := "PUTAWAY_SEM_INTERFACE"
	tQuery := build("SELECT  RE.REFREC",NL," "\
					"	   ,PL.CODPRO PRODUTO",NL," "\
					"       ,PL.CODACT PLANTA",NL," "\
					"      ,CASE",NL," "\
					"       WHEN RB.VALRUB IS NULL THEN AC.VALRUB ",NL," "\
					"       ELSE RB.VALRUB ",NL," "\
					"       END DEPOSITO      ",NL," "\
					"       ,'' LOTE",NL," "\
					"       ,SUM(PL.UVCSTO) QTDE_PUT_SEM_ITF",NL," "\
					"       ,CASE WHEN IM.EDIIMO IS NULL THEN 'NM'",NL," "\
					"        	ELSE PL.MOTIMM",NL," "\
					"        END STATUS",NL," "\
					"	  ,CASE WHEN IM.EDIIMO IS NULL THEN 'LIV'",NL," "\
					"       ELSE IM.EDIIMO  END SITUACAO",NL," "\
					"      ,EA.EDIPRO EAN_PRINCIPAL ",NL," "\
					" FROM   FGE50FM",tToInfologPrefixFilename,".GEPAL PL INNER JOIN FGE50FM",tToInfologPrefixFilename,".GERECD RD",NL," "\
					"		ON     PL.NUMREC=RD.NUMREC",NL," "\
					"		AND    PL.SNUREC=RD.SNUREC",NL," "\
					"		AND    PL.CODPRO=RD.CODPRO",NL," "\
					"		AND    PL.CODACT=RD.CODACT",NL," "\
					"		LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GERECE RE",NL," "\
					"		ON     RD.NUMREC=RE.NUMREC",NL," "\
					"		AND    RD.SNUREC=RE.SNUREC",NL," "\
					"		LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
					"		ON     IM.MOTIMM=PL.MOTIMM",NL," "\
					"		LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU RB",NL," "\
					"		ON     IM.MOTIMM=RB.VALCLE",NL," "\
					"		AND    RB.VALCLE=PL.MOTIMM",NL," "\
					"		AND    RB.CODRUB=PL.CODACT",NL," "\
					"		AND    RB.CODRUB=RD.CODACT",NL," "\
					"		LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AC",NL," "\
					"		ON     AC.CODACT =PL.CODACT",NL," "\
					"		LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA ",NL," "\
					"		ON    PL.CODPRO = EA.CODPRO ",NL," "\
					"		AND   PL.CODACT = EA.CODACT ",NL," "\
					"		AND   EA.EANDS1 = '12NC'  ",NL," "\
					" WHERE  PL.CODACT = '",tCODACTLido,"'",NL," "\
					" AND    RE.ETAREC < 50",NL," "\
					" GROUP BY RE.REFREC,",NL," "\
					"		 PL.CODPRO ",NL," "\
					"        ,PL.CODACT ",NL," "\
					"        ,IM.EDIIMO ",NL," "\
					"        ,PL.MOTIMM ",NL," "\
					"        ,RB.VALRUB ",NL," "\
					"        ,AC.VALRUB,EA.EDIPRO ")

	log("------------------------------------------------------------", NL)
	log(tQuery,NL)
	log("------------------------------------------------------------", NL)

	if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

	bQueryTemResul := FALSE
	while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
		if bQueryTemResul = FALSE then
			bQueryTemResul := TRUE
			print("REFREC;" \
					"PRODUTO;" \
					"PLANTA;" \
					"DEPOSITO;" \
					"LOTE;" \
					"QTDE_PUT_SEM_ITF;" \
					"STATUS;" \
					"SITUACAO;" \
					"EAN_PRINCIPAL;" \
					"", NL) >> TRACE.PUTAWAY_SEM_INTERFACE_SUBTRAI
		endif
		print(peel(taDb2Array["REFREC"]," "),";", \
				peel(taDb2Array["PRODUTO"]," "),";", \
				peel(taDb2Array["PLANTA"]," "),";", \
				peel(taDb2Array["DEPOSITO"]," "),";", \
				peel(taDb2Array["LOTE"]," "),";", \
				peel(taDb2Array["QTDE_PUT_SEM_ITF"]," "),";", \
				peel(taDb2Array["STATUS"]," "),";", \
				peel(taDb2Array["SITUACAO"]," "),";", \
				peel(taDb2Array["EAN_PRINCIPAL"]," "),";", NL) >> TRACE.PUTAWAY_SEM_INTERFACE_SUBTRAI

		remove(taDb2Array)
	endwhile

	if bQueryTemResul = FALSE then
		print("Consulta não retornou resultados",NL) >> TRACE.PUTAWAY_SEM_INTERFACE_SUBTRAI
	endif

	close(TRACE.PUTAWAY_SEM_INTERFACE_SUBTRAI)

	if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

endfunction

!==============================================================================

function bfBatimento_SeparadoNaoConf()

	!==============================================================================
	!SEPARADO_NÃO_CONF
	!==============================================================================

	tNomeQuery := "SEPARADO_NÃO_CONF"
	tQuery := build("SELECT  CASE WHEN SE.DATSUP2 = 0 THEN se.DATPRP  ELSE SE.DATSUP2 END DATE_TIME_CREATED",NL," "\
					"       ,SD.CODPRO PRODUTO",NL," "\
					"       ,SE.CODACT PLANTA",NL," "\
					"       ,COALESCE(RB.VALRUB,AC.VALRUB) DEPOSITO",NL," "\
					"       ,'' LOTE",NL," "\
					"       ,CASE WHEN SE.TYPSUP = 1 THEN COALESCE(IM2.EDIIMO,'LIV')  ELSE COALESCE(IM.EDIIMO ,'LIV') END COD_SIT_CLI",NL," "\
					"       ,SUM(sd.uvcliv) QUANTIDADE",NL," "\
					"       ,SE.REFLIV PEDIDO",NL," "\
					"       ,EA.EDIPRO EAN_PRINCIPAL",NL," "\
					"FROM FGE50FM",tToInfologPrefixFilename,".GESUPE SE",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GESUPD SD",NL," "\
					"ON SE.NUMSUP = SD.NUMSUP AND SE.SNUSUP = SD.SNUSUP AND SE.NUMLIV = SD.NUMLIV",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPAL PL",NL," "\
					"ON SD.NUMPAL = PL.NUMPAL",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
					"ON IM.MOTIMM = SD.MOTIMM",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM2",NL," "\
					"ON IM2.MOTIMM = PL.MOTIMM",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU RB",NL," "\
					"ON IM.MOTIMM = RB.VALCLE AND RB.VALCLE = SD.MOTIMM AND RB.CODRUB = SD.CODACT AND RB.CODRUB = SE.CODACT",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AC",NL," "\
					"ON AC.CODACT = SE.CODACT",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA",NL," "\
					"ON SD.CODPRO = EA.CODPRO AND EA.EANDS1 = '12NC'",NL," "\
					"WHERE SD.CODACT = '",tCODACTLido,"'",NL," "\
					"AND se.etasup = 30",NL," "\
					"AND SD.UVCLIV > 0",NL," "\
					"AND SD.NUMLIV <> 0",NL," "\
					"AND se.typsup IN (1, 2)",NL," "\
					"AND sd.indMas <> '1'",NL," "\
					"GROUP BY  CASE WHEN SE.DATSUP2 = 0 THEN se.DATPRP  ELSE SE.DATSUP2 END",NL," "\
					"         ,SD.CODPRO",NL," "\
					"         ,SE.CODACT",NL," "\
					"         ,COALESCE(RB.VALRUB,AC.VALRUB)",NL," "\
					"         ,CASE WHEN SE.TYPSUP = 1 THEN COALESCE(IM2.EDIIMO,'LIV')  ELSE COALESCE(IM.EDIIMO ,'LIV') END",NL," "\
					"         ,SE.REFLIV",NL," "\
					"         ,EA.EDIPRO",NL," "\
					"ORDER BY 1",NL," "\
					"         ,2",NL," "\
					"         ,3",NL," "\
					"         ,4")

	log("------------------------------------------------------------", NL)
	log(tQuery,NL)
	log("------------------------------------------------------------", NL)

	if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

	bQueryTemResul := FALSE
	while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
		if bQueryTemResul = FALSE then
			bQueryTemResul := TRUE
			print("DATE_TIME_CREATED;" \
					"PRODUTO;" \
					"PLANTA;" \
					"DEPOSITO;" \
					"LOTE;" \
					"COD_SIT_CLI;" \
					"QUANTIDADE;" \
					"PEDIDO;" \
					"EAN_PRINCIPAL",NL) >> TRACE.SEPARADO_NAO_CONF_SOMA
		endif
		print(peel(taDb2Array["DATE_TIME_CREATED"]," "),";", \
				peel(taDb2Array["PRODUTO"]," "),";", \
				peel(taDb2Array["PLANTA"]," "),";", \
				peel(taDb2Array["DEPOSITO"]," "),";", \
				peel(taDb2Array["LOTE"]," "),";", \
				peel(taDb2Array["COD_SIT_CLI"]," "),";", \
				peel(taDb2Array["QUANTIDADE"]," "),";", \
				peel(taDb2Array["PEDIDO"]," "),";", \
				peel(taDb2Array["EAN_PRINCIPAL"]," "),";", NL) >> TRACE.SEPARADO_NAO_CONF_SOMA

		remove(taDb2Array)
	endwhile

	if bQueryTemResul = FALSE then
		print("Consulta não retornou resultados",NL) >> TRACE.SEPARADO_NAO_CONF_SOMA
	endif

	close(TRACE.SEPARADO_NAO_CONF_SOMA)

	if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

endfunction

!==============================================================================

function bfBatimento_OndaSolta()

	!==============================================================================
	!ONDA_SOLTA_CONFIRMADOS_SEM_SEP
	!==============================================================================
					
	tQuery := build("SELECT  SUBSTR(CHAR(CURRENT_TIMESTAMP),9,2)||'/'||SUBSTR(CHAR(CURRENT_TIMESTAMP),6,2)||'/'||LEFT(CHAR(CURRENT_TIMESTAMP),4) DATADIA",NL," "\
					"       ,COALESCE(D.REFLIV,SD.REFLIV) PO_NO",NL," "\
					"       ,SD.CODPRO PRODUTO",NL," "\
					"       ,SD.CODACT PLANTA",NL," "\
					"       ,SE.TYPSUP",NL," "\
					"       ,CASE WHEN RB.VALRUB IS NULL THEN AC.VALRUB  ELSE RB.VALRUB END DEPOSITO",NL," "\
					"       ,'' LOTE",NL," "\
					"       ,CASE WHEN SE.TYPSUP = 1 THEN COALESCE(IM2.EDIIMO,'LIV')  ELSE COALESCE( IM.EDIIMO,'LIV') END COD_SIT_CLI",NL," "\
					"       ,SUM( CASE SD.INDMAS WHEN '3' THEN D.UVCLIV ELSE SD.UVCLIV END) AS QTD",NL," "\
					"       ,CASE WHEN SE.TYPSUP = 1 THEN CASE",NL," "\
					"             WHEN IM2.EDIIMO IS NULL THEN 'NM'  ELSE PL.MOTIMM END  ELSE CASE",NL," "\
					"             WHEN IM.EDIIMO IS NULL THEN 'NM'  ELSE SD.MOTIMM END END MOTIMM",NL," "\
					"       ,EA.EDIPRO EAN_PRINCIPAL",NL," "\
					"FROM FGE50FM",tToInfologPrefixFilename,".GESUPE SE",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GESUPD SD",NL," "\
					"    ON SE.NUMSUP = SD.NUMSUP",NL," "\
					"    AND SE.SNUSUP = SD.SNUSUP",NL," "\
					"    AND SE.NUMLIV = SD.NUMLIV",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GESUPD D",NL," "\
					"    ON D.CPTMAS = SD.CPTMAS",NL," "\
					"    AND D.INDMAS = '1'",NL," "\
					"    AND D.CPTMAS > 0",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPAL PL",NL," "\
					"    ON SD.NUMPAL = PL.NUMPAL",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
					"    ON IM.MOTIMM = SD.MOTIMM",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM2",NL," "\
					"    ON IM2.MOTIMM = PL.MOTIMM",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU RB",NL," "\
					"    ON IM.MOTIMM = RB.VALCLE",NL," "\
					"    AND RB.VALCLE = SD.MOTIMM",NL," "\
					"    AND RB.CODRUB = SD.CODACT",NL," "\
					"    AND RB.CODRUB = SE.CODACT",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AC",NL," "\
					"    ON AC.CODACT = SE.CODACT",NL," "\
					"    AND AC.CODRUB = SE.CODACT",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA",NL," "\
					"    ON SD.CODPRO = EA.CODPRO",NL," "\
					"    AND EA.EANDS1 = '12NC'",NL," "\
					"WHERE SD.CODACT = '",tCODACTLido,"'",NL," "\
					"AND SE.ETASUP < 30",NL," "\
					"AND SD.UVCLIV > 0",NL," "\
					"AND SD.NUMLIV <> 0",NL," "\
					"AND SE.TYPSUP IN (1, 2)",NL," "\
					"AND SD.INDMAS <> '1'",NL," "\
					"AND SD.ZONSTS <> 'Z'",NL," "\
					"GROUP BY  COALESCE(D.REFLIV,SD.REFLIV)",NL," "\
					"         ,SD.CODPRO",NL," "\
					"         ,SD.CODACT",NL," "\
					"         ,RB.VALRUB",NL," "\
					"         ,AC.VALRUB",NL," "\
					"         ,IM.EDIIMO",NL," "\
					"         ,SD.MOTIMM",NL," "\
					"         ,IM2.EDIIMO",NL," "\
					"         ,PL.MOTIMM",NL," "\
					"         ,SE.TYPSUP",NL," "\
					"         ,EA.EDIPRO",NL," "\
					"ORDER BY 1",NL," "\
					"         ,2",NL," "\
					"         ,3",NL," "\
					"         ,4")

	log("------------------------------------------------------------", NL)
	log(tQuery,NL)
	log("------------------------------------------------------------", NL)

	if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

	bQueryTemResul := FALSE
	while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
		if bQueryTemResul = FALSE then
			bQueryTemResul := TRUE
			print("DATADIA;" \
					"PO_NO;" \
					"PRODUTO;" \
					"PLANTA;" \
					"TYPSUP;" \
					"DEPOSITO;" \
					"LOTE;" \
					"COD_SIT_CLI;" \
					"QTD;" \
					"MOTIMM;" \
					"EAN_PRINCIPAL;" \
					"",NL) >> TRACE.ONDA_SOLTA_CONFIRMADOS_SEM_SEP_SUBTRAI
		endif
		print(peel(taDb2Array["DATADIA"]," "),";", \
				peel(taDb2Array["PO_NO"]," "),";", \
				peel(taDb2Array["PRODUTO"]," "),";", \
				peel(taDb2Array["PLANTA"]," "),";", \
				peel(taDb2Array["TYPSUP"]," "),";", \
				peel(taDb2Array["DEPOSITO"]," "),";", \
				peel(taDb2Array["LOTE"]," "),";", \
				peel(taDb2Array["COD_SIT_CLI"]," "),";", \
				peel(taDb2Array["QTD"]," "),";", \
				peel(taDb2Array["MOTIMM"]," "),";", \
				peel(taDb2Array["EAN_PRINCIPAL"]," "),";", NL) >> TRACE.ONDA_SOLTA_CONFIRMADOS_SEM_SEP_SUBTRAI

		remove(taDb2Array)
	endwhile

	if bQueryTemResul = FALSE then
		print("Consulta não retornou resultados",NL) >> TRACE.ONDA_SOLTA_CONFIRMADOS_SEM_SEP_SUBTRAI
	endif

	close(TRACE.ONDA_SOLTA_CONFIRMADOS_SEM_SEP_SUBTRAI)

	if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

endfunction

!==============================================================================

function bfBatimento_PedidoSemOnda()

	!==============================================================================
	!PEDIDOS_SEM_ONDA_SOLTA
	!==============================================================================
					
	tQuery := build("SELECT  LE.REFLIV",NL," "\
			"       ,LD.CODPRO PRODUTO",NL," "\
			"       ,LE.CODACT PLANTA",NL," "\
			"       ,0 DEPOSITO",NL," "\
			"       ,'0' LOTE",NL," "\
			"       ,SUM(LD.UVCCDE) QTD_SEM_ONDA",NL," "\
			"       ,'NM' STATUS",NL," "\
			"       ,'LIV' SITUACAO",NL," "\
			"       ,EA.EDIPRO EAN_PRINCIPAL",NL," "\
			"FROM FGE50FM",tToInfologPrefixFilename,".GELIVE LE",NL," "\
			"INNER JOIN FGE50FM",tToInfologPrefixFilename,".GELIVD LD",NL," "\
			"ON LE.NUMLIV = LD.NUMLIV AND LE.SNULIV = LD.SNULIV",NL," "\
			"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AC",NL," "\
			"ON AC.CODACT = LE.CODACT",NL," "\
			"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA",NL," "\
			"ON LD.CODPRO = EA.CODPRO AND LD.CODACT = EA.CODACT AND EA.EANDS1 = '12NC'",NL," "\
			"WHERE LE.ETALIV < 30",NL," "\
			"AND LE.CODACT = '",tCODACTLido,"'",NL," "\
			"GROUP BY  LE.REFLIV",NL," "\
			"         ,LD.CODPRO",NL," "\
			"         ,LE.CODACT",NL," "\
			"         ,EA.EDIPRO")

	log("------------------------------------------------------------", NL)
	log(tQuery,NL)
	log("------------------------------------------------------------", NL)

	if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

	bQueryTemResul := FALSE
	while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
		if bQueryTemResul = FALSE then
			bQueryTemResul := TRUE
			print("REFLIV;" \
					"PRODUTO;" \
					"PLANTA;" \
					"DEPOSITO;" \
					"LOTE;" \
					"QTD_SEM_ONDA;" \
					"STATUS;" \
					"SITUACAO;" \
					"EAN_PRINCIPAL",NL) >> TRACE.PEDIDOS_SEM_ONDA_SOLTA_SUBTRAI
		endif
		print(peel(taDb2Array["REFLIV"]," "),";", \
				peel(taDb2Array["PRODUTO"]," "),";", \
				peel(taDb2Array["PLANTA"]," "),";", \
				peel(taDb2Array["DEPOSITO"]," "),";0;",peel(taDb2Array["QTD_SEM_ONDA"]," "),";", \
				peel(taDb2Array["STATUS"]," "),";", \
				peel(taDb2Array["SITUACAO"]," "),";", \
				peel(taDb2Array["EAN_PRINCIPAL"]," "),";", NL) >> TRACE.PEDIDOS_SEM_ONDA_SOLTA_SUBTRAI

		remove(taDb2Array)
	endwhile

	if bQueryTemResul = FALSE then
		print("Consulta não retornou resultados",NL) >> TRACE.PEDIDOS_SEM_ONDA_SOLTA_SUBTRAI
	endif

	close(TRACE.PEDIDOS_SEM_ONDA_SOLTA_SUBTRAI)

	if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

endfunction

!==============================================================================

function bfP5_EstoqueOficial()

	!==============================================================================
	!P5_EST_OFICIAL_WMS
	!==============================================================================

	tQuery := build("SELECT  GL.CODPRO SKU",NL," "\
					"       ,GL.DS1PRO SKU_DESC1_35",NL," "\
					"       ,GL.CODPAL LP",NL," "\
					"       ,CASE WHEN GL.MOTIMM = '' THEN RBAC.ST  ELSE IM.STOSAP1 END                                                                     AS STATUS_SAP",NL," "\
					"       ,CASE WHEN GL.MOTIMM = '' THEN 'NM'  ELSE GL.MOTIMM END                                                                         AS SP",NL," "\
					"       ,REPLACE(CAST(GL.UVCSTO/GL.PCBPRO AS NUMERIC(15,2)),'.',',')                                                                    AS QTDE_CDA",NL," "\
					"       ,CASE WHEN GL.CODLOT = '' THEN 'NOLOT'  ELSE GL.CODLOT END                                                                      AS LOT",NL," "\
					"       ,LT.STATUS                                                                                                                      AS STATUS_LOTE",NL," "\
					"       ,CASE WHEN GL.DATFVI = 0 THEN ''  ELSE VARCHAR_FORMAT( to_date(GL.DATFVI ||'000000','YYYY-MM-DD hh24:mi:ss') ,'DD/MM/YYYY') END AS EXPR_DATE",NL," "\
					"       ,GL.UVCSTO QTY",NL," "\
					"       ,GL.UNIPRO UOM_ABREV",NL," "\
					"       ,GL.ZONSTS ||'-'|| RIGHT('000' || GL.ALLSTS,3) ||'-'|| RIGHT('0000' || GL.DPLSTS,4) ||'-'|| RIGHT('00' || GL.NIVSTS,2) LOCACAO",NL," "\
					"       ,CASE WHEN GL.ETAPAL = '50' THEN 'PUT'  ELSE 'LOC' END                                                                          AS TIPO",NL," "\
					"       ,GL.REFREC BL",NL," "\
					"       ,GL.VALPRO                                                                                                                      AS PKG_NO",NL," "\
					"       ,GL.FAMPRO FAMI",NL," "\
					"       ,VARCHAR_FORMAT( to_date(GL.DATREC ||'000000','YYYY-MM-DD hh24:mi:ss') ,'DD/MM/YYYY')                                           AS DREC",NL," "\
					"       ,'' PERC_VIDA_PROD",NL," "\
					"       ,GP.ANAPRO DIVISAO",NL," "\
					"       ,GP.CODTMD COD_ONU",NL," "\
					"       ,GP.CODSEC CLASSE_RISCO",NL," "\
					"       ,GL.REFREC NF",NL," "\
					"       ,GL.DS2PRO                                                                                                                      AS DESCRICAO",NL," "\
					"FROM FGE50FM",tToInfologPrefixFilename,".GEPAL GL",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO GP",NL," "\
					"ON GP.CODPRO = GL.CODPRO",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
					"ON GL.MOTIMM = IM.MOTIMM",NL," "\
					"LEFT JOIN",NL," "\
					"(",NL," "\
					"	SELECT  CODACT",NL," "\
					"	       ,CODRUB",NL," "\
					"	       ,VALRUB ST",NL," "\
					"	FROM FGE50FM",tToInfologPrefixFilename,".GEACRUB",NL," "\
					"	WHERE CODRUB = '",tCODACTLido,"'",NL," "\
					") RBAC",NL," "\
					"ON GL.CODACT = RBAC.CODACT",NL," "\
					"LEFT JOIN",NL," "\
					"(",NL," "\
					"	SELECT  A.CODLOT",NL," "\
					"	       ,A.CODPRO",NL," "\
					"	       ,A.MOTIMM STATUS",NL," "\
					"	       ,B.STOSAP1",NL," "\
					"	FROM FGE50FM",tToInfologPrefixFilename,".GELOT A",NL," "\
					"	JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO B",NL," "\
					"	ON A.MOTIMM = B.MOTIMM AND CODACT = '",tCODACTLido,"'",NL," "\
					") LT",NL," "\
					"ON GL.CODLOT = LT.CODLOT AND GL.CODPRO = LT.CODPRO",NL," "\
					"WHERE GL.CODACT = '",tCODACTLido,"'",NL," "\
					"AND GL.ETAPAL <> '60'",NL," "\
					"GROUP BY  GL.CODPRO",NL," "\
					"         ,GL.DS1PRO",NL," "\
					"         ,GL.CODPAL",NL," "\
					"         ,GL.MOTIMM",NL," "\
					"         ,GL.PCBPRO",NL," "\
					"         ,RBAC.ST",NL," "\
					"         ,IM.STOSAP1",NL," "\
					"         ,GL.CODLOT",NL," "\
					"         ,LT.STATUS",NL," "\
					"         ,GL.DATFVI",NL," "\
					"         ,GL.UVCSTO",NL," "\
					"         ,GL.UNIPRO",NL," "\
					"         ,GL.ZONSTS",NL," "\
					"         ,GL.ALLSTS",NL," "\
					"         ,GL.DPLSTS",NL," "\
					"         ,GL.NIVSTS",NL," "\
					"         ,GL.ETAPAL",NL," "\
					"         ,GL.REFREC",NL," "\
					"         ,GL.VALPRO",NL," "\
					"         ,GL.FAMPRO",NL," "\
					"         ,GL.DATREC",NL," "\
					"         ,GP.ANAPRO",NL," "\
					"         ,GP.CODTMD",NL," "\
					"         ,GP.CODSEC",NL," "\
					"         ,GL.REFREC",NL," "\
					"         ,GL.DS2PRO",NL," "\
					"ORDER BY 1")

	log("------------------------------------------------------------", NL)
	log(tQuery,NL)
	log("------------------------------------------------------------", NL)

	if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

	bQueryTemResul := FALSE
	while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
		if tCODACTLido = "BRO" then
			if bQueryTemResul = FALSE then
				bQueryTemResul := TRUE
				print("SKU;" \
						"SKU_DESC1_35;" \
						"LP;" \
						"STATUS_SAP;" \
						"SP;" \
						"QTDE_CDA;" \
						"LOT;" \
						"STATUS_LOTE;" \
						"EXPR_DATE;" \
						"QTY;" \
						"UOM_ABREV;" \
						"LOCACAO;" \
						"TIPO;" \
						"BL;" \
						"PKG_NO;" \
						"FAMI;" \
						"DREC;" \
						"PERC_VIDA_PROD;" \
						"DIVISAO/CATEGORIA;" \
						"COD_ONU;" \
						"CLASSE_RISCO;" \
						"NF;" \
						"DESCRICAO/REFERENCIA",NL) >> TRACE2.P5_EST_OFICIAL_WMS
			endif
		endif

		print(peel(taDb2Array["SKU"]," "),";", \
				peel(taDb2Array["SKU_DESC1_35"]," "),";", \
				build("'", peel(taDb2Array["LP"]," ")),";", \
				peel(taDb2Array["STATUS_SAP"]," "),";", \
				peel(taDb2Array["SP"]," "),";", \
				peel(taDb2Array["QTDE_CDA"]," "),";", \
				peel(taDb2Array["LOT"]," "),";", \
				peel(taDb2Array["STATUS_LOTE"]," "),";", \
				peel(taDb2Array["EXPR_DATE"]," "),";", \
				peel(taDb2Array["QTY"]," "),";", \
				peel(taDb2Array["UOM_ABREV"]," "),";", \
				peel(taDb2Array["LOCACAO"]," "),";", \
				peel(taDb2Array["TIPO"]," "),";", \
				peel(taDb2Array["BL"]," "),";", \
				peel(taDb2Array["PKG_NO"]," "),";", \
				peel(taDb2Array["FAMI"]," "),";", \
				peel(taDb2Array["DREC"]," "),";", \
				peel(taDb2Array["PERC_VIDA_PROD"]," "),";", \
				peel(taDb2Array["DIVISAO"]," "),";", \
				peel(taDb2Array["COD_ONU"]," "),";", \
				peel(taDb2Array["CLASSE_RISCO"]," "),";", \
				peel(taDb2Array["NF"]," "),";", \
				peel(taDb2Array["DESCRICAO"]," "),";", NL) >> TRACE2.P5_EST_OFICIAL_WMS

		remove(taDb2Array)
	endwhile

	if bQueryTemResul = FALSE then
		print("Consulta não retornou resultados",NL) >> TRACE2.P5_EST_OFICIAL_WMS
	endif

	close(TRACE2.P5_EST_OFICIAL_WMS)

	if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

	tPrefixoSubjectEmail := tBEGINSUBJp5

	if bQueryTemResul = TRUE then
		remove(tArquivoEmailErro)
		tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/P5_EST_OFICIAL_WMS_",time("now","%Y%m%d%H%M%S"),".csv")
		copy(TRACE2.P5_EST_OFICIAL_WMS,tArquivoEmailErro)
		close(TRACE2.P5_EST_OFICIAL_WMS)
		close(tArquivoEmailErro)
		tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_P5_EST_OFICIAL_WMS")
		tNameEMAIL := build("P5_EST_OFICIAL_WMS_",time("now","%Y%m%d%H%M%S"),".csv")
		tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL,"  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
		log("executing command ",tCmdEmailErro,NL)
		nRet := system(tCmdEmailErro)
		close(tArquivoEmailErro)				
		remove(tArquivoEmailErro)
	else
		remove(tArquivoEmailErro)
		tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/P5_EST_OFICIAL_WMS_",time("now","%Y%m%d%H%M%S"),".txt")

		print("***Informações de P5 EST OFICIAL WMS no Dia***",NL,NL,"***Não há dados para emissão do arquivo***",NL,NL,"Processo gerado automaticamente, não utilize a opção responder a este remetente.",NL,NL) >> tArquivoEmailErro
		close(tArquivoEmailErro)

		tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_P5_EST_OFICIAL_WMS")
		tNameEMAIL := build("P5_EST_OFICIAL_WMS_",time("now","%Y%m%d%H%M%S"),".txt")
		tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL," EMAIL.CONTENTID=text/plain EMAIL.DISPOSITION=inline  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
		log("executing command ",tCmdEmailErro,NL)
		nRet := system(tCmdEmailErro)
		close(tArquivoEmailErro)				
		remove(tArquivoEmailErro)
	endif

endfunction

!==============================================================================

function bfP5_InfSepExpDia()

	!==============================================================================
	!P5_INF_SEP_EXP_DIA
	!==============================================================================
			
	tQuery := build("SELECT   SD.CODACT COMP_CODE ",NL," "\
					",SD.CODPRO SKU ",NL," "\
					",SD.NUMSUP UMA ",NL," "\
					",SD.UVCLIV QTD ",NL," "\
					",'EA' UNID ",NL," "\
					",LEFT (ROUND (SUM((SD.PDBCOL/SD.PCBPRO)*SD.UVCLIV),3),7) PESO ",NL," "\
					",LEFT ((ROUND (SUM((SD.VOLCOL/SD.PCBPRO)*SD.UVCLIV),3)/1000),7) CUBAGEM ",NL," "\
					",GP.CODTMD COD_ONU ",NL," "\
					",GP.CODSEC CLASSE_RISCO ",NL," "\
					"FROM FGE50FM",tToInfologPrefixFilename,".GESUPD SD INNER JOIN FGE50FM",tToInfologPrefixFilename,".GEHSUP HS ",NL," "\
					"ON   SD.NUMSUP=HS.NUMSUP ",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO GP ",NL," "\
					"ON GP.CODPRO = SD.CODPRO ",NL," "\
					"WHERE INDEXP=1 ",NL," "\
					"AND    HS.ETASUP=50 ",NL," "\
					"AND    HS.DATHIS=VARCHAR_FORMAT((CURRENT DATE - 1 DAYS), 'YYYYMMDD') ",NL," "\
					"AND SD.CODACT='",tCODACTLido,"' ",NL," "\
					"GROUP BY  SD.CODACT ",NL," "\
					",SD.CODPRO ",NL," "\
					",SD.NUMSUP ",NL," "\
					",SD.UVCLIV ",NL," "\
					",GP.CODTMD ",NL," "\
					",GP.CODSEC ",NL," "\
					"ORDER BY 1,3,2")

	log("------------------------------------------------------------", NL)
	log(tQuery,NL)
	log("------------------------------------------------------------", NL)

	if bfSqlSet( tDbBase ,"SELECTdb2"  , tQuery) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bfSqlOpen( tDbBase , "SELECTdb2" ) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	bQueryTemResul := FALSE
	while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
		if bQueryTemResul = FALSE then
			bQueryTemResul := TRUE
			print("COMP_CODE;SKU;UMA;QTD;UNID;PESO;CUBAGEM;COD_ONU;CLASSE_RISCO;",NL) >>  TRACE2.P5_INF_SEP_EXP_DIA
		endif
		print(peel(taDb2Array["COMP_CODE"]," "),";",peel(taDb2Array["SKU"]," "),";",peel(taDb2Array["UMA"]," "),";",peel(taDb2Array["QTD"]," "),";",peel(taDb2Array["UNID"]," "),";",peel(taDb2Array["PESO"]," "),";",\
		peel(taDb2Array["CUBAGEM"]," "),";",peel(taDb2Array["COD_ONU"]," "),";",peel(taDb2Array["CLASSE_RISCO"]," "),";",NL) >>  TRACE2.P5_INF_SEP_EXP_DIA

		remove(taDb2Array)
	endwhile

	if bQueryTemResul = FALSE then
		print("Consulta não retornou resultados",NL) >> TRACE2.P5_INF_SEP_EXP_DIA
	endif

	close(TRACE2.P5_INF_SEP_EXP_DIA)

	if bfSqlFree( tDbBase , "SELECTdb2"  ) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bQueryTemResul = TRUE then
		remove(tArquivoEmailErro)
		tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/P5_INF_SEP_EXP_DIA_",time("now","%Y%m%d%H%M%S"),".csv")
		copy(TRACE2.P5_INF_SEP_EXP_DIA,tArquivoEmailErro)
		close(TRACE2.P5_INF_SEP_EXP_DIA)
		close(tArquivoEmailErro)
		tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_P5_INF_SEP_EXP_DIA")
		tNameEMAIL := build("P5_INF_SEP_EXP_DIA_",time("now","%Y%m%d%H%M%S"),".csv")
		tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL,"  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
		log("executing command ",tCmdEmailErro,NL)
		nRet := system(tCmdEmailErro)
		close(tArquivoEmailErro)				
		remove(tArquivoEmailErro)
	else
		remove(tArquivoEmailErro)
		tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/P5_INF_SEP_EXP_DIA_",time("now","%Y%m%d%H%M%S"),".txt")

		print("***Informações de P5 INF SEP EXP no Dia***",NL,NL,"***Não há dados para emissão do arquivo***",NL,NL,"Processo gerado automaticamente, não utilize a opção responder a este remetente.",NL,NL) >> tArquivoEmailErro
		close(tArquivoEmailErro)

		tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_P5_INF_SEP_EXP_DIA")
		tNameEMAIL := build("P5_INF_SEP_EXP_DIA_",time("now","%Y%m%d%H%M%S"),".txt")
		tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL," EMAIL.CONTENTID=text/plain EMAIL.DISPOSITION=inline  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
		log("executing command ",tCmdEmailErro,NL)
		nRet := system(tCmdEmailErro)
		close(tArquivoEmailErro)				
		remove(tArquivoEmailErro)
	endif

endfunction

!==============================================================================

function bfP5_InfSepNaoExp()

	!==============================================================================
	!P5_INF_SEP_NAO_EXP
	!==============================================================================
	
	tQuery := build("SELECT SD.CODACT COMP_CODE ",NL," "\
					",SD.CODPRO SKU ",NL," "\
					",SD.NUMSUP UMA ",NL," "\
					",SD.UVCLIV QTD ",NL," "\
					",'EA' UNID ",NL," "\
					",LEFT (ROUND (SUM((SD.PDBCOL/SD.PCBPRO)*SD.UVCLIV),3),7) PESO ",NL," "\
					",LEFT ((ROUND (SUM((SD.VOLCOL/SD.PCBPRO)*SD.UVCLIV),3)/1000),7) CUBAGEM ",NL," "\
					",GP.CODTMD COD_ONU ",NL," "\
					",GP.CODSEC CLASSE_RISCO ",NL," "\
					"FROM FGE50FM",tToInfologPrefixFilename,".GESUPD SD INNER JOIN FGE50FM",tToInfologPrefixFilename,".GEHSUP HS ",NL," "\
					"ON   SD.NUMSUP=HS.NUMSUP ",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO GP ",NL," "\
					"ON GP.CODPRO = SD.CODPRO ",NL," "\
					"WHERE INDEXP=0 ",NL," "\
					"AND    HS.ETASUP=30 ",NL," "\
					"AND    HS.DATHIS=VARCHAR_FORMAT((CURRENT DATE - 1 DAYS), 'YYYYMMDD') ",NL," "\
					"AND SD.CODACT='",tCODACTLido,"' ",NL," "\
					"GROUP BY  SD.CODACT ",NL," "\
					",SD.CODPRO ",NL," "\
					",SD.NUMSUP ",NL," "\
					",SD.UVCLIV ",NL," "\
					",GP.CODTMD ",NL," "\
					",GP.CODSEC ",NL," "\
					"ORDER BY 1,3,2")

	log("------------------------------------------------------------", NL)
	log(tQuery,NL)
	log("------------------------------------------------------------", NL)

	if bfSqlSet( tDbBase ,"SELECTdb2"  , tQuery) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bfSqlOpen( tDbBase , "SELECTdb2" ) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	bQueryTemResul := FALSE
	while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
		if bQueryTemResul = FALSE then
			bQueryTemResul := TRUE
			print("COMP_CODE;SKU;UMA;QTD;UNID;PESO;CUBAGEM;COD_ONU;CLASSE_RISCO;",NL) >>  TRACE2.P5_INF_SEP_NAO_EXP
		endif
		print(peel(taDb2Array["COMP_CODE"]," "),";",peel(taDb2Array["SKU"]," "),";",peel(taDb2Array["UMA"]," "),";",peel(taDb2Array["QTD"]," "),";",peel(taDb2Array["UNID"]," "),";",peel(taDb2Array["PESO"]," "),";",\
		peel(taDb2Array["CUBAGEM"]," "),";",peel(taDb2Array["COD_ONU"]," "),";",peel(taDb2Array["CLASSE_RISCO"]," "),";",NL) >>  TRACE2.P5_INF_SEP_NAO_EXP

		remove(taDb2Array)
	endwhile

	if bQueryTemResul = FALSE then
		print("Consulta não retornou resultados",NL) >> TRACE2.P5_INF_SEP_NAO_EXP
	endif

	close(TRACE2.P5_INF_SEP_NAO_EXP)

	if bfSqlFree( tDbBase , "SELECTdb2"  ) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bQueryTemResul = TRUE then
		remove(tArquivoEmailErro)
		tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/P5_INF_SEP_NAO_EXP_",time("now","%Y%m%d%H%M%S"),".csv")
		copy(TRACE2.P5_INF_SEP_NAO_EXP,tArquivoEmailErro)
		close(TRACE2.P5_INF_SEP_NAO_EXP)
		close(tArquivoEmailErro)
		tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_P5_INF_SEP_NAO_EXP")
		tNameEMAIL := build("P5_INF_SEP_NAO_EXP_",time("now","%Y%m%d%H%M%S"),".csv")
		tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL,"  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
		log("executing command ",tCmdEmailErro,NL)
		nRet := system(tCmdEmailErro)
		close(tArquivoEmailErro)				
		remove(tArquivoEmailErro)
	else
		remove(tArquivoEmailErro)
		tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/P5_INF_SEP_NAO_EXP_",time("now","%Y%m%d%H%M%S"),".txt")

		print("***Informações de P5 INF SEP NAO EXP no Dia***",NL,NL,"***Não há dados para emissão do arquivo***",NL,NL,"Processo gerado automaticamente, não utilize a opção responder a este remetente.",NL,NL) >> tArquivoEmailErro
		close(tArquivoEmailErro)

		tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_P5_INF_SEP_NAO_EXP")
		tNameEMAIL := build("P5_INF_SEP_NAO_EXP_",time("now","%Y%m%d%H%M%S"),".txt")
		tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL," EMAIL.CONTENTID=text/plain EMAIL.DISPOSITION=inline  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
		log("executing command ",tCmdEmailErro,NL)
		nRet := system(tCmdEmailErro)
		close(tArquivoEmailErro)				
		remove(tArquivoEmailErro)
	endif

endfunction

!==============================================================================

function bfP5_EstoqueResumo()

	!==============================================================================
	!SALDO_ESTQ_RESUMIDO
	!==============================================================================
			
	tQuery := build("SELECT  GL.CODPRO 														   AS CODIGO",NL," "\
					"       ,CASE WHEN GL.CODLOT = '' THEN 'NOLOT'  ELSE GL.CODLOT END         AS LOTE",NL," "\
					"       ,GP.DS1PRO 														   AS DESCRICAO",NL," "\
					"       ,REPLACE(CAST(SUM (GL.UVCSTO/GL.PCBPRO) AS NUMERIC(15,2)),'.',',') AS SALDO",NL," "\
					"FROM FGE50FM",tToInfologPrefixFilename,".GEPAL GL",NL," "\
					"JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO GP",NL," "\
					"ON GL.CODPRO = GP.CODPRO",NL," "\
					"WHERE GL.CODACT = '",tCODACTLido,"'",NL," "\
					"AND GL.ETAPAL <> '60'",NL," "\
					"GROUP BY  GL.CODPRO",NL," "\
					"         ,GL.CODLOT",NL," "\
					"         ,GP.DS1PRO",NL," "\
					"ORDER BY 1, 2 ")

	log("------------------------------------------------------------", NL)
	log(tQuery,NL)
	log("------------------------------------------------------------", NL)

	if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

	bQueryTemResul := FALSE
	while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
		if bQueryTemResul = FALSE then
			bQueryTemResul := TRUE
			print("CODIGO;LOTE;DESCRICAO;SALDO;",NL) >> TRACE2.SALDO_ESTQ_RESUMIDO
		endif
		print(peel(taDb2Array["CODIGO"]," "),";", \
				peel(taDb2Array["LOTE"]," "),";", \
				peel(taDb2Array["DESCRICAO"]," "),";", \
				peel(taDb2Array["SALDO"]," "),";",NL) >> TRACE2.SALDO_ESTQ_RESUMIDO

		remove(taDb2Array)
	endwhile

	if bQueryTemResul = FALSE then
		print("Consulta não retornou resultados",NL) >> TRACE2.SALDO_ESTQ_RESUMIDO
	endif

	close(TRACE2.SALDO_ESTQ_RESUMIDO)

	if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bQueryTemResul = TRUE then
		remove(tArquivoEmailErro)
		tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/SALDO_ESTQ_RESUMIDO_",time("now","%Y%m%d%H%M%S"),".csv")
		copy(TRACE2.SALDO_ESTQ_RESUMIDO,tArquivoEmailErro)
		close(TRACE2.SALDO_ESTQ_RESUMIDO)
		close(tArquivoEmailErro)
		tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_SALDO_ESTQ_RESUMIDO")
		tNameEMAIL := build("SALDO_ESTQ_RESUMIDO_",time("now","%Y%m%d%H%M%S"),".csv")
		tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL,"  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
		log("executing command ",tCmdEmailErro,NL)
		nRet := system(tCmdEmailErro)
		close(tArquivoEmailErro)				
		remove(tArquivoEmailErro)
	else
		remove(tArquivoEmailErro)
		tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/SALDO_ESTQ_RESUMIDO_",time("now","%Y%m%d%H%M%S"),".txt")

		print("***Informações de P5 INF SEP NAO EXP no Dia***",NL,NL,"***Não há dados para emissão do arquivo***",NL,NL,"Processo gerado automaticamente, não utilize a opção responder a este remetente.",NL,NL) >> tArquivoEmailErro
		close(tArquivoEmailErro)

		tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_SALDO_ESTQ_RESUMIDO")
		tNameEMAIL := build("SALDO_ESTQ_RESUMIDO_",time("now","%Y%m%d%H%M%S"),".txt")
		tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL," EMAIL.CONTENTID=text/plain EMAIL.DISPOSITION=inline  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
		log("executing command ",tCmdEmailErro,NL)
		nRet := system(tCmdEmailErro)
		close(tArquivoEmailErro)				
		remove(tArquivoEmailErro)
	endif

endfunction

!==============================================================================

function bfP5_Shelflife_BRO()

	!==============================================================================
	!SHELF-LIFE NOTICE
	!==============================================================================
			
	tQuery := build("SELECT   GL.CODPRO                                                                                             AS SKU",NL," "\
					"       ,GL.DS1PRO                                                                                             AS SKU_DESCRICAO",NL," "\
					"       ,GL.CODPAL                                                                                             AS LP",NL," "\
					"       ,GL.NUMPAL                                                                                             AS LPN",NL," "\
					"       ,CASE GL.MOTIMM WHEN '' THEN 'NM' ELSE GL.MOTIMM END                                                   AS DEPOSITO",NL," "\
					"       ,RI.VALRUB                                                                                             AS ESTOQUE",NL," "\
					"       ,CASE GL.CODLOT WHEN '' THEN 'NOLOT' ELSE GL.CODLOT END                                                AS LOTE",NL," "\
					"       ,GP.DESFOU                                                                                             AS NOTE1",NL," "\
					"       ,CASE GL.DATFVI WHEN 0 THEN '' ELSE TO_CHAR(TO_DATE(GL.DATFVI||'','YYYYMMDD') ,'DD/MM/YYYY') END       AS EXPR_DATE",NL," "\
					"       ,GL.UVCSTO                                                                                             AS QTY",NL," "\
					"       ,GL.UNIPRO                                                                                             AS UOM_ABREV",NL," "\
					"       ,GL.ZONSTS ||'-'|| DIGITS(GL.ALLSTS) ||'-'|| DIGITS(GL.DPLSTS) ||'-'|| DIGITS(GL.NIVSTS)               AS LOCACAO",NL," "\
					"       ,CASE GL.ETAPAL WHEN '50' THEN 'PUT' ELSE 'LOC' END                                                    AS TIPO",NL," "\
					"       ,GL.REFREC                                                                                             AS BL",NL," "\
					"       ,GL.VALPRO                                                                                             AS PKG_NO",NL," "\
					"       ,GL.FAMPRO                                                                                             AS FAMI",NL," "\
					"       ,TO_CHAR(TO_DATE(GL.DATREC||'','YYYYMMDD'),'DD/MM/YYYY')                                               AS DREC",NL," "\
					"       ,CASE GL.DATFVI WHEN 0 THEN NULL ELSE DAYS(CURRENT DATE) - DAYS(TO_DATE(GL.DATFVI||'','YYYYMMDD')) END AS DIAS_VIDA_PROD",NL," "\
					"       ,GP.ANAPRO                                                                                             AS DIVISAO",NL," "\
					"       ,GP.CODTMD                                                                                             AS COD_ONU",NL," "\
					"       ,GP.CODSEC                                                                                             AS CLASSE_RISCO",NL," "\
					"       ,GL.REFREC                                                                                             AS NF",NL," "\
					"       ,GL.DS2PRO                                                                                             AS DESCRICAO",NL," "\
					"FROM FGE50FM",tToInfologPrefixFilename,".GEPAL AS GL",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO AS GP",NL," "\
					"ON GP.CODPRO = GL.CODPRO AND GP.CODACT = GL.CODACT",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU AS RI ",NL," "\
					"ON RI.CODRUB = 'STCK' AND RI.CODFIC = 'GEZIMO' AND RI.VALCLE = GL.MOTIMM",NL," "\
					"WHERE GL.CODACT = '",tCODACTLido,"'",NL," "\
					"AND GL.ETAPAL <> '60'",NL," "\
					"--AND GL.MAJUTI = 'UFMSA5SHLF' ",NL," "\
					"ORDER BY 1")
	
	log("------------------------------------------------------------", NL)
	log(tQuery,NL)
	log("------------------------------------------------------------", NL)

	if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

	bQueryTemResul := FALSE
	while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
		if bQueryTemResul = FALSE then
			bQueryTemResul := TRUE
			print("SKU;SKU_DESCRICAO;LP;LPN;DEPOSITO;ESTOQUE;LOTE;NOTE1;EXPR_DATE;QTY;UOM_ABREV;LOCACAO;TIPO;BL;PKG_NO;FAMI;DREC;DIAS_VIDA_PROD;DIVISAO;COD_ONU;CLASSE_RISCO;NF;DESCRICAO",NL) >> TRACE2.SHELFLIFE_NOTICE
		endif
		print(	peel(taDb2Array["SKU"]," "),";", \
				peel(taDb2Array["SKU_DESCRICAO"]," "),";", \
				peel(taDb2Array["LP"]," "),";", \
				peel(taDb2Array["LPN"]," "),";", \
				peel(taDb2Array["DEPOSITO"]," "),";", \
				peel(taDb2Array["ESTOQUE"]," "),";", \
				peel(taDb2Array["LOTE"]," "),";", \
				peel(taDb2Array["NOTE1"]," "),";", \
				peel(taDb2Array["EXPR_DATE"]," "),";", \
				peel(taDb2Array["QTY"]," "),";", \
				peel(taDb2Array["UOM_ABREV"]," "),";", \
				peel(taDb2Array["LOCACAO"]," "),";", \
				peel(taDb2Array["TIPO"]," "),";", \
				peel(taDb2Array["BL"]," "),";", \
				peel(taDb2Array["PKG_NO"]," "),";", \
				peel(taDb2Array["FAMI"]," "),";", \
				peel(taDb2Array["DREC"]," "),";", \
				peel(taDb2Array["DIAS_VIDA_PROD"]," "),";", \
				peel(taDb2Array["DIVISAO"]," "),";", \
				peel(taDb2Array["COD_ONU"]," "),";", \
				peel(taDb2Array["CLASSE_RISCO"]," "),";", \
				peel(taDb2Array["NF"]," "),";", \
				peel(taDb2Array["DESCRICAO"]," "),";", NL) >> TRACE2.SHELFLIFE_NOTICE

		remove(taDb2Array)
	endwhile

	if bQueryTemResul = FALSE then
		print("Consulta não retornou resultados",NL) >> TRACE2.SHELFLIFE_NOTICE
	endif

	close(TRACE2.SHELFLIFE_NOTICE)

	if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bQueryTemResul = TRUE then
		remove(tArquivoEmailErro)
		tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/SHELF-LIFE_NOTICE_",time("now","%Y%m%d%H%M%S"),".csv")
		copy(TRACE2.SHELFLIFE_NOTICE,tArquivoEmailErro)
		close(TRACE2.SHELFLIFE_NOTICE)
		close(tArquivoEmailErro)
		tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_SHELF-LIFE_NOTICE")
		tNameEMAIL := build("SHELF-LIFE_NOTICE_",time("now","%Y%m%d%H%M%S"),".csv")
		tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL,"  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
		log("executing command ",tCmdEmailErro,NL)
		nRet := system(tCmdEmailErro)
		close(tArquivoEmailErro)				
		remove(tArquivoEmailErro)
	else
		remove(tArquivoEmailErro)
		tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/SHELF-LIFE_NOTICE_",time("now","%Y%m%d%H%M%S"),".txt")

		print("***Informações de Notificação de Shelf-Life no Dia ***",NL,NL,"***Não há dados para emissão do arquivo***",NL,NL,"Processo gerado automaticamente, não utilize a opção responder a este remetente.",NL,NL) >> tArquivoEmailErro
		close(tArquivoEmailErro)

		tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_SHELF-LIFE_NOTICE")
		tNameEMAIL := build("SHELF-LIFE_NOTICE_",time("now","%Y%m%d%H%M%S"),".txt")
		tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL," EMAIL.CONTENTID=text/plain EMAIL.DISPOSITION=inline  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
		log("executing command ",tCmdEmailErro,NL)
		nRet := system(tCmdEmailErro)
		close(tArquivoEmailErro)				
		remove(tArquivoEmailErro)
	endif

endfunction

!==============================================================================

function bfP5_EstoqueOficial_BRO()

	!==============================================================================
	!P5_EST_OFICIAL_WMS
	!==============================================================================

	tQuery := build("SELECT   GL.CODPRO                                                                                                                 AS SKU",NL," "\
					"       ,TRIM(GL.DS1PRO)                                                                                                           AS SKU_DESC1_35",NL," "\
					"       ,TRIM(GL.CODPAL)                                                                                                           AS LP",NL," "\
					"       ,TRIM(RU.VALRUB)                                                                                                           AS STATUS_SAP",NL," "\
					"       ,CASE GL.MOTIMM WHEN '' THEN TRIM(RB.VALRUB) ELSE GL.MOTIMM END                                                            AS SP",NL," "\
					"       ,REPLACE(TO_CHAR(CAST(GL.UVCSTO / GL.PCBPRO AS NUMERIC(15,2))),'.',',')                                                    AS QTDE_CDA",NL," "\
					"       ,CASE GL.CODLOT WHEN '' THEN 'NOLOT' ELSE GL.CODLOT END                                                                    AS LOT",NL," "\
					"       ,COALESCE(LT.STATUS,'')                                                                                                    AS STATUS_LOTE",NL," "\
					"       ,CASE GL.DATFVI WHEN 0 THEN '' ELSE VARCHAR_FORMAT(TO_DATE(GL.DATFVI||'000000','YYYY-MM-DD HH24:MI:SS') ,'DD/MM/YYYY') END AS EXPR_DATE",NL," "\
					"       ,GL.UVCSTO                                                                                                                 AS QTY",NL," "\
					"       ,GL.UNIPRO                                                                                                                 AS UOM_ABREV",NL," "\
					"       ,GL.ZONSTS||'-'||DIGITS(GL.ALLSTS)||'-'||DIGITS(GL.DPLSTS)||'-'||DIGITS(GL.NIVSTS)                                         AS LOCACAO",NL," "\
					"       ,CASE GL.ETAPAL WHEN '50' THEN 'PUT' ELSE 'LOC' END                                                                        AS TIPO",NL," "\
					"       ,TRIM(GL.REFREC)                                                                                                           AS BL",NL," "\
					"       ,GL.VALPRO                                                                                                                 AS PKG_NO",NL," "\
					"       ,TRIM(GL.FAMPRO)                                                                                                           AS FAMI",NL," "\
					"       ,VARCHAR_FORMAT(TO_DATE(GL.DATREC||'000000','YYYY-MM-DD HH24:MI:SS'),'DD/MM/YYYY')                                         AS DREC",NL," "\
					"       ,''                                                                                                                        AS PERC_VIDA_PROD",NL," "\
					"       ,TRIM(GP.ANAPRO)                                                                                                           AS DIVISAO",NL," "\
					"       ,GP.CODTMD                                                                                                                 AS COD_ONU",NL," "\
					"       ,GP.CODSEC                                                                                                                 AS CLASSE_RISCO",NL," "\
					"       ,TRIM(GL.REFREC)                                                                                                           AS NF",NL," "\
					"       ,GL.DS2PRO                                                                                                                 AS DESCRICAO",NL," "\
					"FROM FGE50FM",tToInfologPrefixFilename,".GEPAL        AS GL",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO   AS GP",NL," "\
					"ON GP.CODPRO = GL.CODPRO",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO  AS IM",NL," "\
					"ON GL.MOTIMM = IM.MOTIMM",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AS RB",NL," "\
					"ON RB.CODRUB = RB.CODACT AND GL.CODACT = RB.CODACT",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU  AS RU",NL," "\
					"ON RU.VALCLE = GL.MOTIMM AND RU.CODRUB = 'STCK'",NL," "\
					"LEFT JOIN",NL," "\
					"(",NL," "\
					"	SELECT  A.CODLOT",NL," "\
					"	       ,A.CODPRO",NL," "\
					"	       ,A.MOTIMM AS STATUS",NL," "\
					"	       ,B.STOSAP1",NL," "\
					"	FROM FGE50FM",tToInfologPrefixFilename,".GELOT AS A",NL," "\
					"	JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO AS B",NL," "\
					"	ON A.MOTIMM = B.MOTIMM AND CODACT = 'BRO'",NL," "\
					")                                                     AS LT",NL," "\
					"ON GL.CODLOT = LT.CODLOT AND GL.CODPRO = LT.CODPRO",NL," "\
					"WHERE GL.CODACT = '",tCODACTLido,"'",NL," "\
					"AND GL.ETAPAL <> '60'",NL," "\
					"ORDER BY 1")

	log("------------------------------------------------------------", NL)
	log(tQuery,NL)
	log("------------------------------------------------------------", NL)

	if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

	bQueryTemResul := FALSE
	while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
		if tCODACTLido = "BRO" then
			if bQueryTemResul = FALSE then
				bQueryTemResul := TRUE
				print("SKU;" \
						"SKU_DESC1_35;" \
						"LP;" \
						"STATUS_SAP;" \
						"SP;" \
						"QTDE_CDA;" \
						"LOT;" \
						"STATUS_LOTE;" \
						"EXPR_DATE;" \
						"QTY;" \
						"UOM_ABREV;" \
						"LOCACAO;" \
						"TIPO;" \
						"BL;" \
						"PKG_NO;" \
						"FAMI;" \
						"DREC;" \
						"PERC_VIDA_PROD;" \
						"DIVISAO/CATEGORIA;" \
						"COD_ONU;" \
						"CLASSE_RISCO;" \
						"NF;" \
						"DESCRICAO/REFERENCIA",NL) >> TRACE2.P5_EST_OFICIAL_WMS
			endif
		endif

		print(peel(taDb2Array["SKU"]," "),";", \
				peel(taDb2Array["SKU_DESC1_35"]," "),";", \
				build("'", peel(taDb2Array["LP"]," ")),";", \
				peel(taDb2Array["STATUS_SAP"]," "),";", \
				peel(taDb2Array["SP"]," "),";", \
				peel(taDb2Array["QTDE_CDA"]," "),";", \
				peel(taDb2Array["LOT"]," "),";", \
				peel(taDb2Array["STATUS_LOTE"]," "),";", \
				peel(taDb2Array["EXPR_DATE"]," "),";", \
				peel(taDb2Array["QTY"]," "),";", \
				peel(taDb2Array["UOM_ABREV"]," "),";", \
				peel(taDb2Array["LOCACAO"]," "),";", \
				peel(taDb2Array["TIPO"]," "),";", \
				peel(taDb2Array["BL"]," "),";", \
				peel(taDb2Array["PKG_NO"]," "),";", \
				peel(taDb2Array["FAMI"]," "),";", \
				peel(taDb2Array["DREC"]," "),";", \
				peel(taDb2Array["PERC_VIDA_PROD"]," "),";", \
				peel(taDb2Array["DIVISAO"]," "),";", \
				peel(taDb2Array["COD_ONU"]," "),";", \
				peel(taDb2Array["CLASSE_RISCO"]," "),";", \
				peel(taDb2Array["NF"]," "),";", \
				peel(taDb2Array["DESCRICAO"]," "),";", NL) >> TRACE2.P5_EST_OFICIAL_WMS

		remove(taDb2Array)
	endwhile

	if bQueryTemResul = FALSE then
		print("Consulta não retornou resultados",NL) >> TRACE2.P5_EST_OFICIAL_WMS
	endif

	close(TRACE2.P5_EST_OFICIAL_WMS)

	if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

	tPrefixoSubjectEmail := tBEGINSUBJp5

	if bQueryTemResul = TRUE then
		remove(tArquivoEmailErro)
		tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/P5_EST_OFICIAL_WMS_",time("now","%Y%m%d%H%M%S"),".csv")
		copy(TRACE2.P5_EST_OFICIAL_WMS,tArquivoEmailErro)
		close(TRACE2.P5_EST_OFICIAL_WMS)
		close(tArquivoEmailErro)
		tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_P5_EST_OFICIAL_WMS")
		tNameEMAIL := build("P5_EST_OFICIAL_WMS_",time("now","%Y%m%d%H%M%S"),".csv")
		tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL,"  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
		log("executing command ",tCmdEmailErro,NL)
		nRet := system(tCmdEmailErro)
		close(tArquivoEmailErro)				
		remove(tArquivoEmailErro)
	else
		remove(tArquivoEmailErro)
		tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/P5_EST_OFICIAL_WMS_",time("now","%Y%m%d%H%M%S"),".txt")

		print("***Informações de P5 EST OFICIAL WMS no Dia***",NL,NL,"***Não há dados para emissão do arquivo***",NL,NL,"Processo gerado automaticamente, não utilize a opção responder a este remetente.",NL,NL) >> tArquivoEmailErro
		close(tArquivoEmailErro)

		tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_P5_EST_OFICIAL_WMS")
		tNameEMAIL := build("P5_EST_OFICIAL_WMS_",time("now","%Y%m%d%H%M%S"),".txt")
		tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL," EMAIL.CONTENTID=text/plain EMAIL.DISPOSITION=inline  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
		log("executing command ",tCmdEmailErro,NL)
		nRet := system(tCmdEmailErro)
		close(tArquivoEmailErro)				
		remove(tArquivoEmailErro)
	endif

endfunction

!==============================================================================

function bfP5_InfSepExpDia_BRO()

	!==============================================================================
	!P5_INF_SEP_EXP_DIA
	!==============================================================================
			
	tQuery := build("SELECT   SD.CODACT                                                                                  AS COMP_CODE",NL," "\
					"       ,SD.CODPRO                                                                                  AS SKU",NL," "\
					"       ,SD.NUMSUP                                                                                  AS UMA",NL," "\
					"       ,SD.UVCLIV                                                                                  AS QTD",NL," "\
					"       ,'EA'                                                                                       AS UNID",NL," "\
					"       ,REPLACE(TO_CHAR(CAST(SUM((SD.PDBCOL/SD.PCBPRO)*SD.UVCLIV) AS NUMERIC(15,3))),'.',',')      AS PESO",NL," "\
					"       ,REPLACE(TO_CHAR(CAST(SUM((SD.VOLCOL/SD.PCBPRO)*SD.UVCLIV)/1000 AS NUMERIC(15,3))),'.',',') AS CUBAGEMT",NL," "\
					"       ,GP.CODTMD                                                                                  AS COD_ONU",NL," "\
					"       ,GP.CODSEC                                                                                  AS CLASSE_RISCO",NL," "\
					"FROM FGE50FM",tToInfologPrefixFilename,".GESUPD AS SD",NL," "\
					"JOIN FGE50FM",tToInfologPrefixFilename,".GEHSUP AS HS",NL," "\
					"ON SD.NUMSUP = HS.NUMSUP",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO AS GP",NL," "\
					"ON GP.CODPRO = SD.CODPRO",NL," "\
					"WHERE SD.INDEXP = '1'",NL," "\
					"AND HS.ETASUP = '50'",NL," "\
					"AND HS.DATHIS = VARCHAR_FORMAT((CURRENT DATE - 1 DAYS), 'YYYYMMDD')",NL," "\
					"AND SD.CODACT = '",tCODACTLido,"'",NL," "\
					"GROUP BY  SD.CODACT",NL," "\
					"         ,SD.CODPRO",NL," "\
					"         ,SD.NUMSUP",NL," "\
					"         ,SD.UVCLIV",NL," "\
					"         ,GP.CODTMD",NL," "\
					"         ,GP.CODSEC",NL," "\
					"ORDER BY  1, 3, 2")

	log("------------------------------------------------------------", NL)
	log(tQuery,NL)
	log("------------------------------------------------------------", NL)

	if bfSqlSet( tDbBase ,"SELECTdb2"  , tQuery) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bfSqlOpen( tDbBase , "SELECTdb2" ) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	bQueryTemResul := FALSE
	while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
		if bQueryTemResul = FALSE then
			bQueryTemResul := TRUE
			print("COMP_CODE;SKU;UMA;QTD;UNID;PESO;CUBAGEM;COD_ONU;CLASSE_RISCO;",NL) >>  TRACE2.P5_INF_SEP_EXP_DIA
		endif
		print(peel(taDb2Array["COMP_CODE"]," "),";",peel(taDb2Array["SKU"]," "),";",peel(taDb2Array["UMA"]," "),";",peel(taDb2Array["QTD"]," "),";",peel(taDb2Array["UNID"]," "),";",peel(taDb2Array["PESO"]," "),";",\
		peel(taDb2Array["CUBAGEM"]," "),";",peel(taDb2Array["COD_ONU"]," "),";",peel(taDb2Array["CLASSE_RISCO"]," "),";",NL) >>  TRACE2.P5_INF_SEP_EXP_DIA

		remove(taDb2Array)
	endwhile

	if bQueryTemResul = FALSE then
		print("Consulta não retornou resultados",NL) >> TRACE2.P5_INF_SEP_EXP_DIA
	endif

	close(TRACE2.P5_INF_SEP_EXP_DIA)

	if bfSqlFree( tDbBase , "SELECTdb2"  ) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bQueryTemResul = TRUE then
		remove(tArquivoEmailErro)
		tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/P5_INF_SEP_EXP_DIA_",time("now","%Y%m%d%H%M%S"),".csv")
		copy(TRACE2.P5_INF_SEP_EXP_DIA,tArquivoEmailErro)
		close(TRACE2.P5_INF_SEP_EXP_DIA)
		close(tArquivoEmailErro)
		tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_P5_INF_SEP_EXP_DIA")
		tNameEMAIL := build("P5_INF_SEP_EXP_DIA_",time("now","%Y%m%d%H%M%S"),".csv")
		tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL,"  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
		log("executing command ",tCmdEmailErro,NL)
		nRet := system(tCmdEmailErro)
		close(tArquivoEmailErro)				
		remove(tArquivoEmailErro)
	else
		remove(tArquivoEmailErro)
		tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/P5_INF_SEP_EXP_DIA_",time("now","%Y%m%d%H%M%S"),".txt")

		print("***Informações de P5 INF SEP EXP no Dia***",NL,NL,"***Não há dados para emissão do arquivo***",NL,NL,"Processo gerado automaticamente, não utilize a opção responder a este remetente.",NL,NL) >> tArquivoEmailErro
		close(tArquivoEmailErro)

		tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_P5_INF_SEP_EXP_DIA")
		tNameEMAIL := build("P5_INF_SEP_EXP_DIA_",time("now","%Y%m%d%H%M%S"),".txt")
		tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL," EMAIL.CONTENTID=text/plain EMAIL.DISPOSITION=inline  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
		log("executing command ",tCmdEmailErro,NL)
		nRet := system(tCmdEmailErro)
		close(tArquivoEmailErro)				
		remove(tArquivoEmailErro)
	endif

endfunction

!==============================================================================

function bfP5_InfSepNaoExp_BRO()

	!==============================================================================
	!P5_INF_SEP_NAO_EXP
	!==============================================================================
	
	tQuery := build("SELECT   SD.CODACT                                                                                  AS COMP_CODE",NL," "\
					"       ,SD.CODPRO                                                                                  AS SKU",NL," "\
					"       ,SD.NUMSUP                                                                                  AS UMA",NL," "\
					"       ,SD.UVCLIV                                                                                  AS QTD",NL," "\
					"       ,'EA'                                                                                       AS UNID",NL," "\
					"       ,REPLACE(TO_CHAR(CAST(SUM((SD.PDBCOL/SD.PCBPRO)*SD.UVCLIV) AS NUMERIC(15,3))),'.',',')      AS PESO",NL," "\
					"       ,REPLACE(TO_CHAR(CAST(SUM((SD.VOLCOL/SD.PCBPRO)*SD.UVCLIV)/1000 AS NUMERIC(15,3))),'.',',') AS CUBAGEMT",NL," "\
					"       ,GP.CODTMD                                                                                  AS COD_ONU",NL," "\
					"       ,GP.CODSEC                                                                                  AS CLASSE_RISCO",NL," "\
					"FROM FGE50FM",tToInfologPrefixFilename,".GESUPD AS SD",NL," "\
					"JOIN FGE50FM",tToInfologPrefixFilename,".GEHSUP AS HS",NL," "\
					"ON SD.NUMSUP = HS.NUMSUP",NL," "\
					"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO AS GP",NL," "\
					"ON GP.CODPRO = SD.CODPRO",NL," "\
					"WHERE SD.INDEXP = '0'",NL," "\
					"AND HS.ETASUP = '30'",NL," "\
					"AND HS.DATHIS = VARCHAR_FORMAT((CURRENT DATE - 1 DAYS), 'YYYYMMDD')",NL," "\
					"AND SD.CODACT = '",tCODACTLido,"'",NL," "\
					"GROUP BY  SD.CODACT",NL," "\
					"         ,SD.CODPRO",NL," "\
					"         ,SD.NUMSUP",NL," "\
					"         ,SD.UVCLIV",NL," "\
					"         ,GP.CODTMD",NL," "\
					"         ,GP.CODSEC",NL," "\
					"ORDER BY  1, 3, 2")

	log("------------------------------------------------------------", NL)
	log(tQuery,NL)
	log("------------------------------------------------------------", NL)

	if bfSqlSet( tDbBase ,"SELECTdb2"  , tQuery) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bfSqlOpen( tDbBase , "SELECTdb2" ) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	bQueryTemResul := FALSE
	while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
		if bQueryTemResul = FALSE then
			bQueryTemResul := TRUE
			print("COMP_CODE;SKU;UMA;QTD;UNID;PESO;CUBAGEM;COD_ONU;CLASSE_RISCO;",NL) >>  TRACE2.P5_INF_SEP_NAO_EXP
		endif
		print(peel(taDb2Array["COMP_CODE"]," "),";",peel(taDb2Array["SKU"]," "),";",peel(taDb2Array["UMA"]," "),";",peel(taDb2Array["QTD"]," "),";",peel(taDb2Array["UNID"]," "),";",peel(taDb2Array["PESO"]," "),";",\
		peel(taDb2Array["CUBAGEM"]," "),";",peel(taDb2Array["COD_ONU"]," "),";",peel(taDb2Array["CLASSE_RISCO"]," "),";",NL) >>  TRACE2.P5_INF_SEP_NAO_EXP

		remove(taDb2Array)
	endwhile

	if bQueryTemResul = FALSE then
		print("Consulta não retornou resultados",NL) >> TRACE2.P5_INF_SEP_NAO_EXP
	endif

	close(TRACE2.P5_INF_SEP_NAO_EXP)

	if bfSqlFree( tDbBase , "SELECTdb2"  ) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bQueryTemResul = TRUE then
		remove(tArquivoEmailErro)
		tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/P5_INF_SEP_NAO_EXP_",time("now","%Y%m%d%H%M%S"),".csv")
		copy(TRACE2.P5_INF_SEP_NAO_EXP,tArquivoEmailErro)
		close(TRACE2.P5_INF_SEP_NAO_EXP)
		close(tArquivoEmailErro)
		tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_P5_INF_SEP_NAO_EXP")
		tNameEMAIL := build("P5_INF_SEP_NAO_EXP_",time("now","%Y%m%d%H%M%S"),".csv")
		tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL,"  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
		log("executing command ",tCmdEmailErro,NL)
		nRet := system(tCmdEmailErro)
		close(tArquivoEmailErro)				
		remove(tArquivoEmailErro)
	else
		remove(tArquivoEmailErro)
		tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/P5_INF_SEP_NAO_EXP_",time("now","%Y%m%d%H%M%S"),".txt")

		print("***Informações de P5 INF SEP NAO EXP no Dia***",NL,NL,"***Não há dados para emissão do arquivo***",NL,NL,"Processo gerado automaticamente, não utilize a opção responder a este remetente.",NL,NL) >> tArquivoEmailErro
		close(tArquivoEmailErro)

		tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_P5_INF_SEP_NAO_EXP")
		tNameEMAIL := build("P5_INF_SEP_NAO_EXP_",time("now","%Y%m%d%H%M%S"),".txt")
		tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL," EMAIL.CONTENTID=text/plain EMAIL.DISPOSITION=inline  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
		log("executing command ",tCmdEmailErro,NL)
		nRet := system(tCmdEmailErro)
		close(tArquivoEmailErro)				
		remove(tArquivoEmailErro)
	endif

endfunction

!==============================================================================

function bfP5_EstoqueResumo_BRO()

	!==============================================================================
	!SALDO_ESTQ_RESUMIDO
	!==============================================================================
			
	tQuery := build("SELECT   GL.CODPRO                                              AS CODIGO",NL," "\
					"       ,CASE GL.CODLOT WHEN '' THEN 'NOLOT' ELSE GL.CODLOT END AS LOTE",NL," "\
					"       ,TRIM(GP.DS1PRO)                                        AS DESCRICAO",NL," "\
					"       ,SUM(GL.UVCSTO)                                         AS SALDO",NL," "\
					"FROM FGE50FM",tToInfologPrefixFilename,".GEPAL AS GL",NL," "\
					"JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO AS GP",NL," "\
					"ON GL.CODPRO = GP.CODPRO",NL," "\
					"WHERE GL.CODACT = '",tCODACTLido,"'",NL," "\
					"AND GL.ETAPAL <> '60'",NL," "\
					"GROUP BY  GL.CODPRO",NL," "\
					"         ,GL.CODLOT",NL," "\
					"         ,GP.DS1PRO",NL," "\
					"ORDER BY  1,2 ")

	log("------------------------------------------------------------", NL)
	log(tQuery,NL)
	log("------------------------------------------------------------", NL)

	if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

	bQueryTemResul := FALSE
	while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
		if bQueryTemResul = FALSE then
			bQueryTemResul := TRUE
			print("CODIGO;LOTE;DESCRICAO;SALDO;",NL) >> TRACE2.SALDO_ESTQ_RESUMIDO
		endif
		print(peel(taDb2Array["CODIGO"]," "),";", \
				peel(taDb2Array["LOTE"]," "),";", \
				peel(taDb2Array["DESCRICAO"]," "),";", \
				peel(taDb2Array["SALDO"]," "),";",NL) >> TRACE2.SALDO_ESTQ_RESUMIDO

		remove(taDb2Array)
	endwhile

	if bQueryTemResul = FALSE then
		print("Consulta não retornou resultados",NL) >> TRACE2.SALDO_ESTQ_RESUMIDO
	endif

	close(TRACE2.SALDO_ESTQ_RESUMIDO)

	if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
		bfSqlErro()
		exit(1)
	endif

	if bQueryTemResul = TRUE then
		remove(tArquivoEmailErro)
		tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/SALDO_ESTQ_RESUMIDO_",time("now","%Y%m%d%H%M%S"),".csv")
		copy(TRACE2.SALDO_ESTQ_RESUMIDO,tArquivoEmailErro)
		close(TRACE2.SALDO_ESTQ_RESUMIDO)
		close(tArquivoEmailErro)
		tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_SALDO_ESTQ_RESUMIDO")
		tNameEMAIL := build("SALDO_ESTQ_RESUMIDO_",time("now","%Y%m%d%H%M%S"),".csv")
		tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL,"  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
		log("executing command ",tCmdEmailErro,NL)
		nRet := system(tCmdEmailErro)
		close(tArquivoEmailErro)				
		remove(tArquivoEmailErro)
	else
		remove(tArquivoEmailErro)
		tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/SALDO_ESTQ_RESUMIDO_",time("now","%Y%m%d%H%M%S"),".txt")

		print("***Informações de P5 INF SEP NAO EXP no Dia***",NL,NL,"***Não há dados para emissão do arquivo***",NL,NL,"Processo gerado automaticamente, não utilize a opção responder a este remetente.",NL,NL) >> tArquivoEmailErro
		close(tArquivoEmailErro)

		tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_SALDO_ESTQ_RESUMIDO")
		tNameEMAIL := build("SALDO_ESTQ_RESUMIDO_",time("now","%Y%m%d%H%M%S"),".txt")
		tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL," EMAIL.CONTENTID=text/plain EMAIL.DISPOSITION=inline  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
		log("executing command ",tCmdEmailErro,NL)
		nRet := system(tCmdEmailErro)
		close(tArquivoEmailErro)				
		remove(tArquivoEmailErro)
	endif

endfunction

!==============================================================================
