%@(#) $Id:  M40_HENKEL_CSV_IN.rte,v 1.2 2020/04/23 17:02:20 gmt Exp $
!===========================================================================================================
% File         : $RCSfile: M40_HENKEL_CSV_IN.rte $   $Revision: 1.2 $
!-----------------------------------------------------------------------------------------------------------
% Description   : M40_HENKEL_CSV_IN
!-----------------------------------------------------------------------------------------------------------
% Author        : GMT - GENERIX BR
!===========================================================================================================
! 2020/04/23 GMT 1.2 Creation
!===========================================================================================================
!
! M40_HENKEL_CSV_IN
!
!===========================================================================================================

!base "syslog.cfg" SYSLOG
base "../trace/trace.cfg" TRACE,autoflush off

!===========================================================

! Input/output macros file
#define PROG_NAME "$RCSfile: $"
#define PROG_VER  "$Revision: $"
#define PROG_DATE "$Date: $"
#define TX_PROG_INFO "M40_M50_M44_ASCII_OUT"
#include "include/generix_func.inc"
#include "include/M40_HENKEL_CSV_IN.inc"
#include "include/M40.inc"
#include "include/M50.inc"

!===========================================================

! Initialization section

begin
	! PROCESS_ERRONEOUS := TRUE
	nPos := 1
	nRec := 1
	SYSLOG := find(sSYSLOG,INDEX=number(pINDEX))
	nMessageID := cMessageID

	load (0, build(sHOME,"/config/FM_wms_configuration.properties"), taPARAM)

	tToInfologPrefixFilename := taPARAM["ToInfologPrefixFilenameHENKEL"]

	nContadorLinhasEscritas  := 0
	nNumeroLinha := 0
	nMainIndex := 0
	tCODACTConst := ""
endbegin

!===========================================================
line(not "")
	S_REGISTO

	if length(peel(S_REGISTO_Produto," ")) > 0 and peel(S_REGISTO_Produto," ") <> "Produto" then
		nNumeroLinha++
		taCODPRO[nNumeroLinha] := S_REGISTO_Produto
		taUVCREA[nNumeroLinha] := S_REGISTO_Quantidade
		taPDBCOL[nNumeroLinha] := S_REGISTO_PesoBruto
		taCODLOT[nNumeroLinha] := S_REGISTO_Lote
		taDIPREC[nNumeroLinha] := S_REGISTO_Caminhao
		taDTIREC[nNumeroLinha] := S_REGISTO_DataEnvio
		taREFREC[nNumeroLinha] := S_REGISTO_NumeroOrdem
		tCODTRE :=  S_REGISTO_TipoOrdem
		tCODACTConst :=  S_REGISTO_Planta
		taPLANT[nNumeroLinha] :=  S_REGISTO_Planta
		taMOTIMM[nNumeroLinha] := S_REGISTO_IMOBILIZACAO
		taEMBARQUE[nNumeroLinha] := S_REGISTO_EMBARQUE
		baConsideraHeader[nNumeroLinha] := TRUE
		baProdutoDuplicado[nNumeroLinha] := FALSE
		baEscreveMSGLIG[nNumeroLinha] := FALSE
		taStringConcatenada[nNumeroLinha] := ""
		baEscreveIMO[nNumeroLinha] := TRUE
	endif
endline

! Default statements section
default

enddefault

!===========================================================
! End statements section

end
	tFileOut := build(sHOME,"/ToInfolog/",tToInfologPrefixFilename,"40",build(nMessageID:R015),".DAT")
	tFileOutTemp := build(sHOME,"/ToInfolog/Temp/",tToInfologPrefixFilename,"40",build(nMessageID:R015),".DAT")
	tNameOut := build(tToInfologPrefixFilename,"40",build(nMessageID:R015),".DAT")

	nTempNumeroLinha := 1
	while nTempNumeroLinha  <= nNumeroLinha do
		nTempNumeroLinha2 := nTempNumeroLinha+1
		while nTempNumeroLinha2  <= nNumeroLinha do
			if taREFREC[nTempNumeroLinha2] = taREFREC[nTempNumeroLinha] then
				baConsideraHeader[nTempNumeroLinha2] := FALSE
			endif
				
			if taREFREC[nTempNumeroLinha2] = taREFREC[nTempNumeroLinha] and taCODPRO[nTempNumeroLinha2] = taCODPRO[nTempNumeroLinha] and taMOTIMM[nTempNumeroLinha2] = taMOTIMM[nTempNumeroLinha] then
				baProdutoDuplicado[nTempNumeroLinha2] := TRUE
				taUVCREA[nTempNumeroLinha] := build(number(taUVCREA[nTempNumeroLinha])+ number(taUVCREA[nTempNumeroLinha2]))
				taPDBCOL[nTempNumeroLinha] := build(number(taPDBCOL[nTempNumeroLinha])+ number(taPDBCOL[nTempNumeroLinha2]))

				baEscreveMSGLIG[nTempNumeroLinha] := TRUE
				baEscreveMSGLIG[nTempNumeroLinha2] := TRUE
				if length(taStringConcatenada[nTempNumeroLinha]) = 0 then
					taStringConcatenada[nTempNumeroLinha] := build(taEMBARQUE[nTempNumeroLinha],"/",taEMBARQUE[nTempNumeroLinha2 ])
				else
					taStringConcatenada[nTempNumeroLinha] := build(taStringConcatenada[nTempNumeroLinha],"/",taEMBARQUE[nTempNumeroLinha2 ])
				endif
			endif
					
			if taREFREC[nTempNumeroLinha2] = taREFREC[nTempNumeroLinha] and taCODPRO[nTempNumeroLinha2] = taCODPRO[nTempNumeroLinha] and taMOTIMM[nTempNumeroLinha2] <> taMOTIMM[nTempNumeroLinha] then
				baEscreveMSGLIG[nTempNumeroLinha] := TRUE
				baEscreveMSGLIG[nTempNumeroLinha2] := TRUE
				baProdutoDuplicado[nTempNumeroLinha2] := TRUE
				taUVCREA[nTempNumeroLinha] := build(number(taUVCREA[nTempNumeroLinha]) + number(taUVCREA[nTempNumeroLinha2]))
				taPDBCOL[nTempNumeroLinha] := build(number(taPDBCOL[nTempNumeroLinha]) + number(taPDBCOL[nTempNumeroLinha2]))
				if length(taStringConcatenada[nTempNumeroLinha]) = 0 then
					taStringConcatenada[nTempNumeroLinha] := build(taEMBARQUE[nTempNumeroLinha],"/",taEMBARQUE[nTempNumeroLinha2])
				else
					taStringConcatenada[nTempNumeroLinha] := build(taStringConcatenada[nTempNumeroLinha],"/",taEMBARQUE[nTempNumeroLinha2 ])
				endif
				baEscreveIMO[nTempNumeroLinha] := FALSE
				baEscreveIMO[nTempNumeroLinha2] := FALSE
			endif

			nTempNumeroLinha2 ++
		endwhile

		nTempNumeroLinha ++
	endwhile

	nTempNumeroLinha := 1
	while nTempNumeroLinha <= nNumeroLinha do
		if baConsideraHeader[nTempNumeroLinha] = TRUE then
			if nContadorLinhasEscritas = 0 then
				R_00HEADER_CODEXC("00")
				R_00HEADER_SEPEXC(".")
				R_00HEADER_SCOEXC("00")
				R_00HEADER_TRTEXC("")
				R_00HEADER_EMTEXC("FM") 
				R_00HEADER_RCTEXC("")
				R_00HEADER_DATEXC(time("now" ,"%Y%m%d"))
				R_00HEADER_HEUEXC(time("now" ,"%H%M%S"))
				R_00HEADER_NUMEXC("0000000")
				R_00HEADER_ACQEXC("0")
				R_00HEADER_VEREXC("5.00") 
				R_00HEADER_NOMSYS("")  
				R_00HEADER_NOMDTQ("M40")
				R_00HEADER_BIBDTQ("")
				R_00HEADER_LIBEXC(build(nMessageID:R010))
				R_00HEADER_BIBDST("")
				R_00HEADER_PGMDST("")
				R_00HEADER_PARDST("")
				R_00HEADER_CODACT("")
				R_00HEADER_IGLSIT("")
				R_00HEADER_EDISIT(build(number(tCentro_De_Custo)))
				R_00HEADER_IMAEXC("")  
				R_00HEADER_DISEXC("")

				flush(0,0,NL) >> tFileOutTemp
				nContadorLinhasEscritas++
			endif

			R_40HEADER_CODEXC("40")
			R_40HEADER_SEPEXC(".")
			R_40HEADER_SCOEXC("00")
			R_40HEADER_REFREC(taREFREC[nTempNumeroLinha])
			R_40HEADER_CODLDR("STD")
			if tCODTRE = "ENVIO" then
				R_40HEADER_CODTRE("TR")
			else
				R_40HEADER_CODTRE(tCODTRE)
			endif
				
			tCODFOU := "02777131000105"
			tEDIFOU := "02777131000105"
				
			R_40HEADER_EDIFOU(tEDIFOU)
			R_40HEADER_CODFOU(tCODFOU)
			R_40HEADER_CODACT(tCODACTConst)
			R_40HEADER_DTIREC(tfConvertDate(taDTIREC[nTempNumeroLinha], "DD-MM-YYYY", "YYYYMMDD"))

			flush(0,0,NL) >> tFileOutTemp
			nContadorLinhasEscritas++

			R_40_01ORDHEADER_CODEXC("40")
			R_40_01ORDHEADER_SEPEXC(".")
			R_40_01ORDHEADER_SCOEXC("01")
			R_40_01ORDHEADER_REFREC(taREFREC[nTempNumeroLinha])
			R_40_01ORDHEADER_DIPREC(taDIPREC[nTempNumeroLinha])

			flush(0,0,NL) >> tFileOutTemp
			nContadorLinhasEscritas++

			nContadorLinhasEncomenda := 0
			nContador := 8
			nContadorTmpTOTAL := 1
			nTempNumeroLinha2 := nTempNumeroLinha
			while nTempNumeroLinha2  <= nNumeroLinha do
				if taREFREC[nTempNumeroLinha2] = taREFREC[nTempNumeroLinha] then			   
					if baProdutoDuplicado[nTempNumeroLinha2] = FALSE then
						nContadorLinhasEncomenda++
						R_40_20M40_CODEXC("40")
						R_40_20M40_SEPEXC(".")
						R_40_20M40_SCOEXC("20")
						R_40_20M40_CODACT(tCODACTConst )
						R_40_20M40_REFREC(taREFREC[nTempNumeroLinha2])
						R_40_20M40_CODPRO(taCODPRO[nTempNumeroLinha2])
						R_40_20M40_UVCREA(build(number(taUVCREA[nTempNumeroLinha2 ]):R09.0))
						R_40_20M40_NLIREC(build(nContadorLinhasEncomenda:R05)) 
						R_40_20M40_CODLOT(taCODLOT[nTempNumeroLinha2])
						tCont := build(number(taPDBCOL[nTempNumeroLinha2]) * 1000)
						R_40_20M40_PDBCOL(build(number(tCont):R07)) 
						if baEscreveMSGLIG[nTempNumeroLinha2] = FALSE then
							R_40_20M40_MOTIMM(taMOTIMM[nTempNumeroLinha2])
							if length(taEMBARQUE[nTempNumeroLinha2]) > 0 then
								R_40_20M40_TYPOPE("2")
								R_40_20M40_NUMOPE(build(number(taEMBARQUE[nTempNumeroLinha2 ]):R06))
							endif
						else
							if baEscreveIMO[nTempNumeroLinha2] = FALSE then
								R_40_20M40_MOTIMM("")
							endif
							if baEscreveIMO[nTempNumeroLinha2] = TRUE then
								R_40_20M40_MOTIMM(taMOTIMM[nTempNumeroLinha2])
							endif
							R_40_20M40_TYPOPE("2")
							R_40_20M40_NUMOPE(build(number(taEMBARQUE[nTempNumeroLinha2 ]):R06))
							R_40_20M40_MSGLIG(taStringConcatenada[nTempNumeroLinha2])

						endif
						R_40_20M40_CODMDR("")

						flush(0,0,NL) >> tFileOutTemp
						nContadorLinhasEscritas++
					endif
				endif    
				nContadorTmpTOTAL++
				nTempNumeroLinha2++ 	
			endwhile
				
			R_40_99TRAILLER_CODEXC("40")
			R_40_99TRAILLER_SEPEXC(".")
			R_40_99TRAILLER_SCOEXC("99")
			R_40_99TRAILLER_REFREC(taREFREC[nTempNumeroLinha] )
			R_40_99TRAILLER_CUMLIG(build(nContadorLinhasEncomenda:R04.0))

			flush(0,0,NL) >> tFileOutTemp
			nContadorLinhasEscritas++

			bfMajtrace("Recebida","0",taREFREC[nTempNumeroLinha],tDataDocumento,tFileInput,tFileOut,"Produtos","")
		endif
		nTempNumeroLinha++
	endwhile

	R_TRAILLER_CODEXC("99")
	R_TRAILLER_SEPEXC(".")
	R_TRAILLER_SCOEXC("00")
	R_TRAILLER_TRTEXC("")
	R_TRAILLER_EMTEXC("FM")
	R_TRAILLER_RCTEXC("")
	R_TRAILLER_DATEXC(time("now", "%Y%m%d"))
	R_TRAILLER_HEUEXC(time("now", "H%M%S"))
	R_TRAILLER_NUMEXC("")
	tContadorLinhasEscritas := build(nContadorLinhasEscritas)
	R_TRAILLER_CPTEXC(build(number(tContadorLinhasEscritas):R08.0))

	flush(0,0,NL)  >> tFileOutTemp
	close(tFileOutTemp)

	copy(tFileOutTemp,tFileOut)
	close(tFileOutTemp)
	remove(tFileOutTemp)
	close(tFileOut)

	exit(0)
endend

!===========================================================

function bfMajtrace(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
	TRACE:=new(build(sHOME,"/trace"))
	TRACE.ESTADO := tStatus
	TRACE.ERRO := tError
	TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
	TRACE.MENSAGEM := tTipoDocumento
	TRACE.PERFIL := "HENKEL"
	TRACE.SENTIDO := "I"
	TRACE.MENSAGEM := "RECEBIMENTO E DEVOLUCAO"
	TRACE.NUMDOC := taREFREC[nTempNumeroLinha]
	TRACE.DATDOC := tfConvertDate(taDTIREC[nTempNumeroLinha] , "DD-MM-YYYY" , "YYYY-MM-DD")
	TRACE.MESSAGEID := build(nMessageID)
	if pEDISEND.ORIGINAL.NAME <> build(SYSLOG.INDEX) then
		TRACE.REDE := pEDISEND.ORIGINAL.NAME
	else
		TRACE.REDE := "REPROCESSADO"
	endif
	TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
	TRACE.FICHEIROSAIDA := tNameOut

   if tStatus = "Recebida" then
		print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
		print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
		print("Traduzida com Sucesso",NL) >> TRACE.Detail
	else
		if tStatus = "Erro de Traducao" then
			print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
			print("Erro de Traducao",NL) >> TRACE.Detail
			print(tMensagemErrro,NL) >> TRACE.Detail
        endif
	endif
	close(TRACE.Detail)

	if nMainIndex = 0 then
		close(SYSLOG.a)
		copy(SYSLOG.a,TRACE.In)
		close(SYSLOG.a)
		close(TRACE.In)
		nMainIndex := TRACE.INDEX
	else
		tCmd := build("ln -s ", sHOME, "/trace/files/In/", nMainIndex, " ", TRACE.In)
		system(tCmd)
	endif

	if tError="0" then
		close(tFileOutTemp)
		copy(tFileOutTemp,TRACE.Out)
		close(tFileOutTemp)
		close(TRACE.Out)
	endif
		flush(TRACE)
	endfunction

!===========================================================

