%@(#)  source_filename.rte     modif:18-09-2018
!==============================================================================
% File          : source_filename.rte   version 1.0
!------------------------------------------------------------------------------
% Description   : <short program description>
!------------------------------------------------------------------------------
% Author        : <developer name> - COMPANY
!==============================================================================
! 18-09-2018  XX  Creation
! 18-09-2018  XX  <comments>
!==============================================================================
!
! <detailed program description>
!
!==============================================================================
! input file     : <name or rule for naming input file>
! output file    : <name or rule for naming output file> 
! temporary file : <name or rule for naming temporary file> 
!==============================================================================

! Message definition
schema "XML/FMBrasil/BAT_STS-BR_FMLOG-SAP-IWAY_OUP - v01.xsd" validating
message "XML/FMBrasil/USAGE_DECISION-IWAY_OUP.dtd" receiving, passthru

base "syslog.cfg" SYSLOG
base "../trace/trace.cfg" TRACE,autoflush off

#include "include/M06.inc"
!===========================================================

! Initialization section

begin
   PROCESS_ERRONEOUS := TRUE
  nPos := 1
    nRec := 1
   SYSLOG := find(sSYSLOG,INDEX=number(pINDEX))
    nMessageID := cMessageID
    pXML.INCONVIN := "UTF-8"
   pXML.ENCODING := "UTF-8"

if not(valid(MESSAGE_IN)) then
      bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"ERRO ESQUEMA",build("Schema not matched file IN",NL))
      exit(1)
endif


 load (0, build(sHOME,"/config/FM_wms_configuration.properties"), taPARAM)

        tToInfologPrefixFilename := taPARAM["ToInfologPrefixFilenameCOTY"]

  tFileOut := build(sHOME,"/ToInfolog/",tToInfologPrefixFilename,"06",build(nMessageID:R015),".DAT")
  tFileOutTemp := build(sHOME,"/ToInfolog/Temp/",tToInfologPrefixFilename,"06",build(nMessageID:R015),".DAT")
  !tFileOut := build(sHOME,"/rte/",tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
  tNameOut := build(tToInfologPrefixFilename,"06",build(nMessageID:R015),".DAT")
    


 tDbBase			:= "FMWMS"
	tDbUsername		:= taPARAM["WMSDBUSER"]
	tDbPassword		:= taPARAM["WMSDBPASS"]
	tDbUrl			:= taPARAM["WMSDBURL"]
	
	
bfSqlInit()
   if not bfSqlJdbc(tDbBase , tDbUsername,tDbPassword,tDbUrl) then
      print("FATAL ",tfSqlErrorStr())
      bfSqlClose(tDbBase)
	  bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na abertura do banco de dados: ",tfSqlErrorStr()))
		
      exit(1)
   endif
    
  
    nNumeroLinha := 0
    tCODACTConst := "001"
    nContadorLinhasEscritas  := 0
endbegin

!===========================================================

segment SBAT_STS-BR_FMLOG-SAP-IWAY_OUP gGBAT_STS-BR_FMLOG-SAP-IWAY_OUP     ! M 1/1 

endsegment

! Group gGBAT_STS-BR_FMLOG-SAP-IWAY_OUP,gGCTRL_SEG : M 1/1 
segment STrnNam gGBAT_STS-BR_FMLOG-SAP-IWAY_OUP,gGCTRL_SEG     ! M 1/1 

endsegment

segment STrnVer gGBAT_STS-BR_FMLOG-SAP-IWAY_OUP,gGCTRL_SEG     ! M 1/1 

endsegment

! Group gGBAT_STS-BR_FMLOG-SAP-IWAY_OUP,gGCTRL_SEG,gGDATA_SEG : M 1/unbound 
segment SSegNam gGBAT_STS-BR_FMLOG-SAP-IWAY_OUP,gGCTRL_SEG,gGDATA_SEG     ! C 1/1 

endsegment

segment SMaterialNumber gGBAT_STS-BR_FMLOG-SAP-IWAY_OUP,gGCTRL_SEG,gGDATA_SEG     ! C 1/1 

   
   tCODPRO := eEMaterialNumber
   
endsegment

segment SBatch gGBAT_STS-BR_FMLOG-SAP-IWAY_OUP,gGCTRL_SEG,gGDATA_SEG     ! C 1/1 
	tBatch := eEBatch
	tCODLOT := eEBatch
endsegment

segment SBatchStatus gGBAT_STS-BR_FMLOG-SAP-IWAY_OUP,gGCTRL_SEG,gGDATA_SEG     ! C 1/1 
	tBatchStatus := eEBatchStatus
endsegment

segment SReleaseCharacteristic gGBAT_STS-BR_FMLOG-SAP-IWAY_OUP,gGCTRL_SEG,gGDATA_SEG     ! C 1/1 

endsegment

! Default statements section
default

enddefault

!===========================================================

! End statements section

end


 /*
   
   
   
   CODPAL

**ESCREVER 1 LINHA PARA CADA CODPAL**


----------------------
   
   
   SE BatchStatus = 0

SELECT CODPAL
FROM GEPAL
WHERE CODPRO='MaterialNumber' 
AND CODLOT='Batch'
AND MOTIMM=''

SE BatchStatus = 1

SELECT CODPAL
FROM GEPAL
WHERE CODPRO='MaterialNumber' 
AND CODLOT='Batch'
AND MOTIMM='CQ'
   
   */

   
   nContadorCODPALs := 0
   
   
   if tBatchStatus = "1" then

		tQuery := build("SELECT CODPAL "\
						"FROM FGE50FM",tToInfologPrefixFilename,".GEPAL "\
						"WHERE CODPRO='",tCODPRO,"' "\
						"AND CODLOT='",tCODLOT,"' "\
						"AND MOTIMM=''")
   endif
   
   if tBatchStatus = "0" then

		tQuery := build("SELECT CODPAL "\
						"FROM FGE50FM",tToInfologPrefixFilename,".GEPAL "\
						"WHERE CODPRO='",tCODPRO,"' "\
						"AND CODLOT='",tCODLOT,"' "\
						"AND MOTIMM='CQ'")
   endif
		log(tQuery,NL)


			if bfSqlSet( tDbBase ,"SELECTdb2"  , tQuery) = FALSE then
						 print("FATAL ", tfSqlErrorStr())
						 bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
						exit(1)
				
			endif

			if bfSqlOpen( tDbBase , "SELECTdb2" ) = FALSE then
				 print("FATAL ", tfSqlErrorStr())
				  bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
						exit(1)

			endif

		
			while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
				nContadorCODPALs++
				
				taCODPAL[nContadorCODPALs] := peel(taDb2Array["CODPAL"]," ")
				remove(taDb2Array)

			endwhile
			
			

			if bfSqlFree( tDbBase , "SELECTdb2"  ) = FALSE then
				print("FATAL", tfSqlErrorStr())
				 bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
				exit(1)

			endif
   
 if nContadorCODPALs > 0 then
		  if nContadorLinhasEscritas = 0 then
			
			 R_00HEADER_CODEXC("00")
			 R_00HEADER_SEPEXC(".")
			 R_00HEADER_SCOEXC("00")
			 R_00HEADER_TRTEXC("")
			 R_00HEADER_EMTEXC("FM") 
			 R_00HEADER_RCTEXC("")
			 R_00HEADER_DATEXC(time("now" ,"%Y%m%d"))
			 R_00HEADER_HEUEXC(time("now" ,"%H%M%S"))
			 R_00HEADER_NUMEXC("0000000")
			 R_00HEADER_ACQEXC("0")
			 R_00HEADER_VEREXC("5.00") 
			 R_00HEADER_NOMSYS("")  
			 R_00HEADER_NOMDTQ("M06")
			 R_00HEADER_BIBDTQ("")
			 R_00HEADER_LIBEXC(build(nMessageID:R010))
			 R_00HEADER_BIBDST("")
			 R_00HEADER_PGMDST("")
			 R_00HEADER_PARDST("")
			 R_00HEADER_CODACT("")
			 R_00HEADER_IGLSIT("")
			 R_00HEADER_EDISIT(build(number(tCentro_De_Custo)))
			 R_00HEADER_IMAEXC("")  
			 R_00HEADER_DISEXC("")
			 
			 flush(0,0,NL) >> tFileOutTemp   !ESCRITA DO HEADER M00.00
			 
		   endif
		   
		  
		   
		   
		   nTempContadorCODPALs := 1
		   
		   while nTempContadorCODPALs <= nContadorCODPALs do
			   R_M06_CODEXC("06")
			   R_M06_SEPEXC(".")
			   R_M06_SCOEXC("00")
			   R_M06_TRTEXC("2")
			   R_M06_CODACT(tCODACTConst )
			   R_M06_CODPRO(tCODPRO)
			   R_M06_CODLOT(tCODLOT)
			   R_M06_CODPAL(taCODPAL[nTempContadorCODPALs])
			   if tBatchStatus = "1" then
					R_M06_CODTRT("1")
					R_M06_MOTIMM("CQ")
				endif
				if tBatchStatus = "0" then
					R_M06_CODTRT("2")
					R_M06_MOTIMM("")
			  endif
			   
			   nContadorLinhasEscritas++
			   flush(0,0,NL) >> tFileOutTemp   !ESCRITA DO HEADER M00.00
			   
			   nTempContadorCODPALs++
			endwhile
		 
		 
		  if nContadorLinhasEscritas > 0 then
		  


			R_99FILEFOOTER_CODEXC("99")
			R_99FILEFOOTER_SEPEXC(".")
			R_99FILEFOOTER_SCOEXC("00")
			R_99FILEFOOTER_TRTEXC("")
			R_99FILEFOOTER_EMTEXC("FM")
			R_99FILEFOOTER_RCTEXC("")
			R_99FILEFOOTER_DATEXC(time("now" ,"%Y%m%d"))
			R_99FILEFOOTER_HEUEXC(time("now" ,"H%M%S"))
			R_99FILEFOOTER_NUMEXC("")
			tContadorLinhasEscritas := build(nContadorLinhasEscritas)
			!print(tContadorLinhasEscritas) > "c:/influe/tContadorLinhasEscritas.txt"
			R_99FILEFOOTER_CPTEXC(build(number(tContadorLinhasEscritas):R08.0)) !VER NUMERO DE REGISTOS EXEPTO HEADER E TRAILLER
			!R_99FILEFOOTER_NOMSYS("")
			!R_99FILEFOOTER_NOMDTQ("")
			!R_99FILEFOOTER_BIBDTQ("")
			!R_99FILEFOOTER_IDEMSG("")
			!R_99FILEFOOTER_DISEXC("")

			flush(0,0,NL)  >> tFileOutTemp
			close(tFileOutTemp)
			
			endif
			
				copy(tFileOutTemp,tFileOut)
			close(tFileOutTemp)
			remove(tFileOutTemp)
			close(tFileOut)
			

	

	
endif	
if nContadorCODPALs > 0 then
	bfMajtrace("Recebida","0",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos","")
close(tFileOut)
else
 bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("A query ",tQuery," nÃ£o devolveu resultados"))
 close(tFileOut)
endif
	
bfSqlClose(tDbBase)




exit(0)

endend

!===========================================================


!===========================================================



function bfMajtrace(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
   TRACE:=new(build(sHOME,"/trace"))
   TRACE.ESTADO := tStatus
   TRACE.ERRO := tError
   TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
   TRACE.MENSAGEM := tTipoDocumento

   TRACE.PERFIL := "COTY"
   TRACE.SENTIDO := "I"
   if tBatchStatus = "1" then
	TRACE.MENSAGEM := "BLOQUEIO DE PALETE"
   else
	   if tBatchStatus = "0" then
			TRACE.MENSAGEM := "DESBLOQUEIO DE PALETE"
		else
			TRACE.MENSAGEM := "BATCH STATUS DESCONHECIDO"
       endif
   endif
   TRACE.NUMDOC := tCODPRO
   TRACE.DATDOC := time("now","%Y-%m-%d")
   TRACE.MESSAGEID := build(nMessageID:R010)   

    TRACE.REDE := pGW.ORIGINAL.NAME

  TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
 TRACE.FICHEIROSAIDA := tNameOut

   if tStatus = "Recebida" then
    print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
    print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
    print("Traduzida com Sucesso",NL) >> TRACE.Detail
  
  else
          if tStatus = "Erro de Traducao" then

        print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
        print("Erro de Traducao",NL) >> TRACE.Detail
        print(tMensagemErrro,NL) >> TRACE.Detail
        endif
  endif
close(TRACE.Detail)
close(SYSLOG.e)
copy(SYSLOG.e,TRACE.In)
close(SYSLOG.e)
close(TRACE.In)





if tError="0" and nContadorCODPALs > 0 then
copy(tFileOut,TRACE.Out)
close(tFileOut)
close(TRACE.Out)
endif
flush(TRACE)
endfunction

   


!===========================================================

