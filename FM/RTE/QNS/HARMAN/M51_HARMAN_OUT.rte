%@(#)  source_filename.rte     modif:26-12-2017
!==============================================================================
% File          : source_filename.rte   version 1.0
!------------------------------------------------------------------------------
% Description   : <short program description>
!------------------------------------------------------------------------------
% Author        : <developer name> - COMPANY
!==============================================================================
! 26-12-2017  XX  Creation
! 26-12-2017  XX  <comments>
!==============================================================================
!
! <detailed program description>
!
!==============================================================================
! input file     : <name or rule for naming input file>
! output file    : <name or rule for naming output file> 
! temporary file : <name or rule for naming temporary file> 
!==============================================================================

!base "syslog.cfg" SYSLOG
base "../trace/trace.cfg" TRACE,autoflush off
base "../fmbrasil_inftransp_harman/fmbrasil_inftransp_harman.cfg" fmbrasil_inftransp_harman

!===========================================================

! Input/output macros file
#define TX_PROG_INFO "M51_HARMAN_PED_CSV_OUT"
#include "include/generix_func.inc"
#include "include/ERPFMviaCSV.inc"
#include "include/M51.inc"
#include "include/M51InforTranspHARMAN.inc"

!===========================================================

! Initialization section

begin
	nPos := 1
	nRec := 1
	SYSLOG := find(sSYSLOG,INDEX=number(pINDEX))
	nMessageID := cMessageID

	load(0, build(sHOME,"/config/FM_wms_configuration.properties"), taPARAM)
	tToInfologPrefixFilename := taPARAM["ToInfologPrefixFilenameHARMAN"]

	tSNDPORHARMAN := taPARAM["SNDPORHARMAN"]
	tRCVPRNHARMAN := taPARAM["RCVPRNHARMAN"]
	tRCVPORHARMAN := taPARAM["RCVPORHARMAN"]
	tDbBase := "FMWMS"
	tDbBase2 := "FMWMS2"
	tDbBase3 := "FMWMS3"
	tDbUsername := taPARAM["WMSDBUSER"]
	tDbPassword := taPARAM["WMSDBPASS"]
	tDbUrl := taPARAM["WMSDBURL"]

	bfSqlInit()
	if not bfSqlJdbc(tDbBase, tDbUsername, tDbPassword, tDbUrl) then
		print("FATAL ",tfSqlErrorStr())
		bfSqlClose(tDbBase)
		bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na abertura do banco de dados: ",tfSqlErrorStr()))
		exit(1)
	endif

	if not bfSqlJdbc(tDbBase2, tDbUsername, tDbPassword, tDbUrl) then
		print("FATAL ",tfSqlErrorStr())
		bfSqlClose(tDbBase2)
		bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na abertura do banco de dados: ",tfSqlErrorStr()))
		exit(1)
	endif

	if not bfSqlJdbc(tDbBase3, tDbUsername, tDbPassword, tDbUrl) then
		print("FATAL ",tfSqlErrorStr())
		bfSqlClose(tDbBase3)
		bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na abertura do banco de dados: ",tfSqlErrorStr()))
		exit(1)
	endif

	tCODACTConst := "001"
	nContadorLinhasEscritas  := 0
	nContador5100 := 0
	nMainIndex := 0
	tCODRGT := ""
	bFezHeaderInfTransp := FALSE
endbegin

!===========================================================

line(1:"00.00")
	tData00DATEXC := S_0000HEADER_DATEXC
	tData00HEUEXC := S_0000HEADER_HEUEXC
	tCODRGT := ""
endline

line(1:"51.00")
	nContador5100++
	nContadorRegisto := 0
	nContador5120 := 0
	nContador5120PED := 0
	nContadorSup5130 := 0
	bFazPED := FALSE
	nContadorLinha5130Global := 0
	tORIGEMSelect :=  ""
	nContadorCPKRegistosLidos := 0
	remove(taHEADER)
	remove(taQTDE_PERDA)
	remove(taCOMPONENTE_PERDA)
	remove(taCOMPONENTE_PERDA_AUX)
	remove(taLOTE_PERDA_AUX)
	tVALRUBSRNF :=  ""
	nContadorHEADERCPK := 0
	bFazHEaderNovamenteIND := FALSE
	nMessageID := cMessageID

	tFileOut := build(sHOME,"/FMBR_AS2/FM",tToInfologPrefixFilename,"HARPED.",time("now" ,"%Y%m%d%H%M%S"),".CSV")
	tFileOutTemp := build(sHOME,"/FMBR_AS2/Temp/FM",tToInfologPrefixFilename,"HARPED.",time("now" ,"%Y%m%d%H%M%S"),".CSV")
	tNameOut := build("FM",tToInfologPrefixFilename,"HARPED.",time("now" ,"%Y%m%d%H%M%S"),".CSV")

	tFileOutCSV := build(sHOME,"/EmailsAEnviar/",tToInfologPrefixFilename,"HAR_INF_TRANSP_",tCODTRA,"_",time("now" ,"%Y%m%d%H%M%S"),".CSV")
	tFileOutTempCSV := build(sHOME,"/EmailsAEnviar/Temp/",tToInfologPrefixFilename,"HAR_INF_TRANSP_",tCODTRA,"_",time("now" ,"%Y%m%d%H%M%S"),".CSV")
	tNameOutCSV := build(tToInfologPrefixFilename,"HAR_INF_TRANSP_",tCODTRA,"_",time("now" ,"%Y%m%d%H%M%S"),".CSV")

	nLinha := 0
	nConta5120 := 0
	tCODACT := S_5100ORDERHEADER_CODACT
	tCodigoCliente := S_5100ORDERHEADER_CODCLI
	tNumeroPedido := S_5100ORDERHEADER_REFLIV
	tRota := S_5100ORDERHEADER_TOULIV
	tNumLivLido := S_5100ORDERHEADER_NUMLIV
	tData := S_5100ORDERHEADER_DATEXP
	if length(S_5100ORDERHEADER_HEUEXP) = 4 then
		tHora := build(S_5100ORDERHEADER_HEUEXP,"00")
	else
		tHora := S_5100ORDERHEADER_HEUEXP
	endif
	tCODTLI := S_5100ORDERHEADER_CODTLI
	tCODCLI  := S_5100ORDERHEADER_CODCLI
	tCODRGT := S_5100ORDERHEADER_CODRGT
	tNUMTOU := S_5100ORDERHEADER_NUMTOU
	tCODTRA  := S_5100ORDERHEADER_CODTRA
	tCLILIV := S_5100ORDERHEADER_CLILIV

	fmbrasil_inftransp_harman := find(build(sHOME,"/fmbrasil_inftransp_harman"),CODTRA=tCODTRA)
	if valid(fmbrasil_inftransp_harman) then
		tTOEMAILbat := fmbrasil_inftransp_harman.TOEMAIL
		tCCEMAILbat := fmbrasil_inftransp_harman.CCEMAIL
		tBEGINSUBJbat := fmbrasil_inftransp_harman.BEGINSUBJ
	else
		bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Nao existe na tabela fmbrasil_inftransp_harman os valores CODTRA= ",tCODTRA," "))
		exit(0)
	endif
endline
	
line(1:"51.01")
	tDIPLIV := S_5101ORDERHEADER_COMP_DIPLIV
	split(tDIPLIV,taArrayDIPLIV,"+")
	tWERKS := taArrayDIPLIV[1]
	tLGORT := taArrayDIPLIV[2]
endline

line(1:"51.05")
	tRubrica1 := substr(S_GEEX5105_CODRUB,1,4)
	tRubrica2 := substr(S_GEEX5105_CODRUB,5,4)
	tRubrica3 := substr(S_GEEX5105_CODRUB,9,4)
	tRubrica4 := substr(S_GEEX5105_CODRUB,13,4)

	if tRubrica1 = "NF01" then
		tNF01 := S_GEEX5105_VALRUB1
	endif
	
	if tRubrica1 = "SE01" then
		tSE01 := S_GEEX5105_VALRUB1
	endif
	
	if tRubrica1 = "DT01" then
		tDT01 := S_GEEX5105_VALRUB1
	endif
	
	if tRubrica1 = "VL01" then
		tVL01 := S_GEEX5105_VALRUB1
	endif
	
	if tRubrica1 = "PS01" then
		tPS01 := S_GEEX5105_VALRUB1
	endif
	
	if tRubrica1 = "VO01" then
		tVO01 := S_GEEX5105_VALRUB1
	endif
	
	if tRubrica1 = "VC01" then
		tVC01 := S_GEEX5105_VALRUB1
	endif
	
	!-----------------
	
	if tRubrica2 = "NF01" then
		tNF01 := S_GEEX5105_VALRUB2
	endif
	
	if tRubrica2 = "SE01" then
		tSE01 := S_GEEX5105_VALRUB2
	endif
	
	if tRubrica2 = "DT01" then
		tDT01 := S_GEEX5105_VALRUB2
	endif
	
	if tRubrica2 = "VL01" then
		tVL01 := S_GEEX5105_VALRUB2
	endif
	
	if tRubrica2 = "PS01" then
		tPS01 := S_GEEX5105_VALRUB2
	endif
	
	if tRubrica2 = "VO01" then
		tVO01 := S_GEEX5105_VALRUB2
	endif
	
	if tRubrica2 = "VC01" then
		tVC01 := S_GEEX5105_VALRUB2
	endif
	
	!-----------------
	
	if tRubrica3 = "NF01" then
		tNF01 := S_GEEX5105_VALRUB3
	endif
	
	if tRubrica3 = "SE01" then
		tSE01 := S_GEEX5105_VALRUB3
	endif
	
	if tRubrica3 = "DT01" then
		tDT01 := S_GEEX5105_VALRUB3
	endif
	
	if tRubrica3 = "VL01" then
		tVL01 := S_GEEX5105_VALRUB3
	endif
	
	if tRubrica3 = "PS01" then
		tPS01 := S_GEEX5105_VALRUB3
	endif
	
	if tRubrica3 = "VO01" then
		tVO01 := S_GEEX5105_VALRUB3
	endif
	
	if tRubrica3 = "VC01" then
		tVC01 := S_GEEX5105_VALRUB3
	endif
	
	!-----------------
	
	if tRubrica4 = "NF01" then
		tNF01 := S_GEEX5105_VALRUB4
	endif
	
	if tRubrica4 = "SE01" then
		tSE01 := S_GEEX5105_VALRUB4
	endif
	
	if tRubrica4 = "DT01" then
		tDT01 := S_GEEX5105_VALRUB4
	endif
	
	if tRubrica4 = "VL01" then
		tVL01 := S_GEEX5105_VALRUB4
	endif
	
	if tRubrica4 = "PS01" then
		tPS01 := S_GEEX5105_VALRUB4
	endif
	
	if tRubrica4 = "VO01" then
		tVO01 := S_GEEX5105_VALRUB4
	endif
	
	if tRubrica4 = "VC01" then
		tVC01 := S_GEEX5105_VALRUB4
	endif
endline


line(1:"51.10")
	tNOMCLI := S_5110_NOMCLI
	tVILCLI := S_5110_VILCLI
endline

line(1:"51.20")
	nContador5120++
	tCodigoProduto := S_5120ORDERLINE_CODPRO
	tQuantidadeSeparada := S_5120ORDERLINE_UVCLIV
	taCODPRO[tCodigoProduto] := S_5120ORDERLINE_CODPRO
	taUVCLIV[tCodigoProduto] := S_5120ORDERLINE_UVCLIV
	taNLILIV[tCodigoProduto] := S_5120ORDERLINE_NLILIV
	taUVCLIV5120[nContador5120] := S_5120ORDERLINE_UVCLIV
	taCODPRO5120[nContador5120] := S_5120ORDERLINE_CODPRO
	taNLILIV5120[nContador5120] := S_5120ORDERLINE_NLILIV
	naNumeroDe5130Por5120[nContador5120] := 0
	naNumeroDeLotesNeste5120[nContador5120] := 0
endline

line(1:"51.25")
	if S_5125ORDERLINE_CODRUB = "SRNF" then
		tVALRUBSRNF := S_5125ORDERLINE_VALRUB
	endif
endline

line(1:"51.30")
	nContadorSup5130++
	taReferecencia5120no5130[nContadorSup5130] := build(nContador5120)
	naNumeroDe5130Por5120[nContador5120]++
	baPrimeiroLotepor5120[nContadorSup5130] := TRUE
	taDS1PRO5130[nContadorSup5130] := tDS1PRO
	taNUMSUP5130[nContadorSup5130] := S_5130ORDERLINE_DETAIL_NUMSUP
	taREFLIV5130[nContadorSup5130] := S_5130ORDERLINE_DETAIL_REFLIV
	taCODPAL5130[nContadorSup5130] := S_5130ORDERLINE_DETAIL_CODPAL
	taSSCHET5130[nContadorSup5130] := S_5130ORDERLINE_DETAIL_SSCHET
	taCODLOT5130[nContadorSup5130] := S_5130ORDERLINE_DETAIL_CODLOT
	taDATFVI5130[nContadorSup5130] :=  S_5130ORDERLINE_DETAIL_DATFVI
	taCODEMB5130[nContadorSup5130] :=  S_5130ORDERLINE_DETAIL_CODEMB
	taUVCLIV5130[nContadorSup5130] :=  build(number(S_5130ORDERLINE_DETAIL_UVCLIV))
	taUVCLIV5130Acumulado[nContadorSup5130] :=  build(number(S_5130ORDERLINE_DETAIL_UVCLIV))
	taPCBPRO5130[nContadorSup5130] :=  S_5130ORDERLINE_DETAIL_PCBPRO
	taCODPRO5130[nContadorSup5130] := S_5130ORDERLINE_DETAIL_CODPRO
	taNLILIV5130[nContadorSup5130] := S_5130ORDERLINE_DETAIL_NLILIV
	baPrimeiroSSCCUnico[nContadorSup5130] := TRUE
	baLoteRepetido[nContadorSup5130] := FALSE
	taUVCLIV5130_acum[nContadorSup5130] := taUVCLIV5130[nContadorSup5130]
endline

line(1:"51.31")
	if S_GEEX5131_TYPSUP = "1" then
		taSSCC5130[nContadorSup5130] := taSSCHET5130[nContadorSup5130]
	endif
	if S_GEEX5131_TYPSUP = "2" then
		taSSCC5130[nContadorSup5130] := taCODPAL5130[nContadorSup5130]
	endif
endline

!===========================================================

! Default statements section
default

enddefault

!===========================================================

! End statements section
end
	bfSqlClose(tDbBase)
	bfSqlClose(tDbBase2)
	bfSqlClose(tDbBase3)
	exit(0)
endend

!===========================================================

function bfMajtrace(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
	TRACE:=new(build(sHOME,"/trace"))
	TRACE.ESTADO := tStatus
	TRACE.ERRO := tError
	TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
	TRACE.PERFIL := "HARMAN"
	TRACE.SENTIDO := "O"
	TRACE.MENSAGEM := "CONFIRMACAO DE PEDIDO - TOTVS RM"
	if tCODRGT = "CPK" then 
		TRACE.NUMDOC := build(tNumeroPedido,"-",tContadorHEADERCPKEscrito)
	else
		TRACE.NUMDOC := build(tNumeroPedido)
	endif
	TRACE.DATDOC := tfConvertDate(build(tData00DATEXC), "YYYYMMDD" , "YYYY-MM-DD") 
	TRACE.MESSAGEID := build(nMessageID:R010)
	TRACE.REDE := substr(pEDISEND.ORIGINAL.NAME,1,20)
	TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
	TRACE.FICHEIROSAIDA := tNameOut

	if tStatus = "Recebida" then
		print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
		print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
		print("Traduzida com Sucesso",NL) >> TRACE.Detail
	else
		if tStatus = "Erro de Traducao" then
			print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
			print("Erro de Traducao",NL) >> TRACE.Detail
			print(tMensagemErrro,NL) >> TRACE.Detail
		endif
	endif
	close(TRACE.Detail)
	close(SYSLOG.a)

	if nMainIndex = 0 then
		copy(SYSLOG.a,TRACE.In)
		close(SYSLOG.a)
		close(TRACE.In)
		nMainIndex := TRACE.INDEX
	else
		tCmd := build("ln -s ", sHOME, "/trace/files/In/", nMainIndex, " ", TRACE.In)
		system(tCmd)
	endif

	close(tFileOutTemp)
	copy(tFileOutTemp,TRACE.Out)
	close(tFileOutTemp)
	close(TRACE.Out)
	flush(TRACE)
endfunction

!===========================================================

function bfMajtraceCSV(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
	TRACE:=new(build(sHOME,"/trace"))
	TRACE.ESTADO := tStatus
	TRACE.ERRO := tError
	TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
	TRACE.PERFIL := "HARMAN"
	TRACE.SENTIDO := "O"
	TRACE.MENSAGEM := "CONFIRMACAO DE PEDIDO - INF TRANSP"
	TRACE.NUMDOC := tNumeroPedido
	TRACE.DATDOC := tfConvertDate(build(tData00DATEXC), "YYYYMMDD" , "YYYY-MM-DD") 
	TRACE.MESSAGEID := build(nMessageID:R010)
	TRACE.REDE := substr(pEDISEND.ORIGINAL.NAME,1,20)
	TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
	TRACE.FICHEIROSAIDA := tNameOutCSV

	if tStatus = "Recebida" then
		print(build("Ficheiro de Saida: "),tFileOutCSV,NL,NL) >> TRACE.Detail
		print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
		print("Traduzida com Sucesso",NL) >> TRACE.Detail
	else
		if tStatus = "Erro de Traducao" then
			print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
			print("Erro de Traducao",NL) >> TRACE.Detail
			print(tMensagemErrro,NL) >> TRACE.Detail
		endif
	endif
	close(TRACE.Detail)
	close(SYSLOG.a)

	if nMainIndex = 0 then
		copy(SYSLOG.a,TRACE.In)
		close(SYSLOG.a)
		close(TRACE.In)
		nMainIndex := TRACE.INDEX
	else
		tCmd := build("ln -s ", sHOME, "/trace/files/In/", nMainIndex, " ", TRACE.In)
		system(tCmd)
	endif

	close(tFileOutTempCSV)
	copy(tFileOutTempCSV,TRACE.Out)
	close(tFileOutTempCSV)
	close(TRACE.Out)
	flush(TRACE)
endfunction
