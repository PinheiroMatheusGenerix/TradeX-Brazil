%@(#)  M90_MARS_CJ_CSV.rte     modif:08-12-2017
!==============================================================================
% File          : M90_MARS_CJ_CSV.rte   version 1.0
!------------------------------------------------------------------------------
% Description   : <short program description>
!------------------------------------------------------------------------------
% Author        : <developer name> - COMPANY
!==============================================================================
! 08-12-2017  XX  Creation
! 08-12-2017  XX  <comments>
!==============================================================================
!
! <detailed program description>
!
!==============================================================================
! input file     : <name or rule for naming input file>
! output file    : <name or rule for naming output file> 
! temporary file : <name or rule for naming temporary file>  
!==============================================================================

base "../trace/trace.cfg" TRACE,autoflush off
base "../trace/trace.cfg" TRACE2,autoflush off
base "../fmbrasil_gama_ajustes_estoque/fmbrasil_gama_ajustes_estoque.cfg" fmbrasil_gama_ajustes_estoque
base "../fmbrasil_batimento_p5/fmbrasil_batimento_p5.cfg" fmbrasil_batimento_p5_batimento
base "../fmbrasil_batimento_p5/fmbrasil_batimento_p5.cfg" fmbrasil_batimento_p5_p5

!==============================================================================

! Input/output macros file
#define TX_PROG_INFO "M90_MARS_CJ_CSV"
#include "include/generix_func.inc"
#include "include/GEEXM90.inc"
#include "include/GEEXM06.inc"
#include "include/GEEXM90_BYPASS.inc"
!==============================================================================

! Initialization section
begin
	nPos := 1
	nRec := 1
	nMainIndex := 0
	SYSLOG := find(sSYSLOG,INDEX=number(pINDEX))
	load(0, build(sHOME,"/config/FM_wms_configuration.properties"), taPARAM)
	tToInfologPrefixFilename := taPARAM["ToInfologPrefixFilenameCJM"]

	! Parametros do TRACE
		nMessageID := cMessageID
		tPerfil := "MARS CAJAMAR"
		tSentido := "O"
		tMensagem := "M90 - MARS CAJAMAR"
		tDataDocumento := time("now","%Y-%m-%d")

	!Inicio do processo
		log("------------------------------------------------------------", NL)
		log("Inicio: ", time("now","%Y-%m-%d %H:%M:%S"), NL)
		log("Arquivo de entrada: ",pEDISEND.ORIGINAL.NAME, NL)
		log("------------------------------------------------------------", NL)

	!Abertura do banco de dados - WMS
		tDbBase		:= "FMWMS"
		tDbUsername	:= taPARAM["WMSDBUSER"]
		tDbPassword	:= taPARAM["WMSDBPASS"]
		tDbUrl		:= taPARAM["WMSDBURL"]

		bfSqlInit()
		if not bfSqlJdbc(tDbBase, tDbUsername, tDbPassword, tDbUrl) then
			bfSqlErro()
			exit(1)
		endif

	!Variaveis Gerais
		bLogSQL := TRUE
		bFazP5 := FALSE
		bFazBatimento := FALSE
		bPrimeiro9900 := TRUE
		bTem9000 := FALSE
		bTem9070 := FALSE
		nNumero9070 := 0
		nContadorQuerys := 0
		bPrimeiraLinhaM06 := FALSE
endbegin

!==============================================================================

line(1:"00.00")
	tData := S_GEEX0000_DATEXC
	tHora := S_GEEX0000_HEUEXC

	!BYPASS INICIO
		if S_GEEX0000_CODACT = "MAC" then
			tNameOutBP := build("FM",tToInfologPrefixFilename,S_GEEX0000_CODACT,"_M90",time("now" ,"%Y%m%d%H%M%S"),substr(build(nMessageID), length(build(nMessageID)) - 1, 2),".txt")
			tFileOutBP := build(sHOME,"/mdn/auto/",tNameOutBP)
			tFileOutTempBP := build(sHOME,"/mdn/auto/Temp/",tNameOutBP)

			R_GEEX0000_CODEXC(S_GEEX0000_CODEXC)
			R_GEEX0000_SEPEXC(S_GEEX0000_SEPEXC)
			R_GEEX0000_SCOEXC(S_GEEX0000_SCOEXC)
			R_GEEX0000_TRTEXC(S_GEEX0000_TRTEXC)
			R_GEEX0000_EMTEXC(S_GEEX0000_EMTEXC)
			R_GEEX0000_RCTEXC(S_GEEX0000_RCTEXC)
			R_GEEX0000_DATEXC(S_GEEX0000_DATEXC)
			R_GEEX0000_HEUEXC(S_GEEX0000_HEUEXC)
			R_GEEX0000_NUMEXC(S_GEEX0000_NUMEXC)
			R_GEEX0000_ACQEXC(S_GEEX0000_ACQEXC)
			R_GEEX0000_VEREXC(S_GEEX0000_VEREXC)
			R_GEEX0000_NOMSYS(S_GEEX0000_NOMSYS)
			R_GEEX0000_NOMDTQ(S_GEEX0000_NOMDTQ)
			R_GEEX0000_BIBDTQ(S_GEEX0000_BIBDTQ)
			R_GEEX0000_LIBEXC(S_GEEX0000_LIBEXC)
			R_GEEX0000_BIBDST(S_GEEX0000_BIBDST)
			R_GEEX0000_PGMDST(S_GEEX0000_PGMDST)
			R_GEEX0000_PARDST(S_GEEX0000_PARDST)
			R_GEEX0000_CODACT(S_GEEX0000_CODACT)
			R_GEEX0000_IGLSIT(S_GEEX0000_IGLSIT)
			R_GEEX0000_EDISIT(S_GEEX0000_EDISIT)
			R_GEEX0000_IMAEXC(S_GEEX0000_IMAEXC)
			R_GEEX0000_IDEMSG(S_GEEX0000_IDEMSG)
			R_GEEX0000_NATEXC(S_GEEX0000_NATEXC)
			R_GEEX0000_EMTORI(S_GEEX0000_EMTORI)
			R_GEEX0000_DISEXC(S_GEEX0000_DISEXC)

			flush(0,0,NL) >> tFileOutTempBP

			tQuery := build("SELECT  VALCLE, TRIM(RUB.LIBVAL) LIBVAL",NL," "\
							"FROM FGE50FM",tToInfologPrefixFilename,".GEZZRU IMO",NL," "\
							"JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRI RUB",NL," "\
							"ON IMO.CODRUB = RUB.CODRUB AND IMO.VALRUB = RUB.VALRUB AND IMO.CODRUB = 'STAG'")

			log("------------------------------------------------------------", NL)
			log(tQuery,NL)
			log("------------------------------------------------------------", NL)

			if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
				bfSqlErro()
				exit(1)
			endif

			if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
				bfSqlErro()
				exit(1)
			endif

			while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
				taLIBIMO_BP[peel(taDb2Array["VALCLE"]," ")] := peel(taDb2Array["LIBVAL"]," ")
				remove(taDb2Array)
			endwhile

			if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
				bfSqlErro()
				exit(1)
			endif
		endif
	!BYPASS FIM
endline

!==============================================================================

line("90.00")
	bTem9000 := TRUE

	if bPrimeiro9900 = TRUE then
		tCODACTLido := S_GEEX9000_CODACT
		bPrimeiro9900 := FALSE
	endif

	! Verifica as atividades validas para envio
		if tCODACTLido <> "MAC" then
			exit(1)
		endif
endline

!==============================================================================

line("90.70")
	! SHELF LIFE
		if S_GEEX9070_CODACT = "MAC" then
			tCODPRO_9070 := S_GEEX9070_CODPRO
			tCODPAL_9070 := S_GEEX9070_CODPAL
			if length(S_GEEX9070_MOTIMM) > 0 and number(S_GEEX9070_DATFVI) > 0 and number(S_GEEX9070_DATMVT) > 0 then
				! QUERY tVALRUB_GEZZRU
					tQuery := build("SELECT VALRUB",NL," "\
									"FROM FGE50FM",tToInfologPrefixFilename,".GEZZRU",NL," "\
									"WHERE CODRUB = 'SHLF'",NL," "\
									"AND VALCLE = '",S_GEEX9070_MOTIMM,"'")

					log("------------------------------------------------------------", NL)
					log(tQuery,NL)
					log("------------------------------------------------------------", NL)

					if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
						bfSqlErro()
						exit(1)
					endif

					if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
						bfSqlErro()
						exit(1)
					endif

					if bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE then
						tVALRUB_GEZZRU := peel(taDb2Array["VALRUB"]," ")
						remove(taDb2Array)
					endif

					if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
						bfSqlErro()
						exit(1)
					endif
				! FIM QUERY tVALRUB_GEZZRU

				if tVALRUB_GEZZRU = "SIM" then
					! QUERY tVALRUB_GEZZRU
						tQuery := build("SELECT IMOFVI",NL," "\
										"FROM FGE50FM",tToInfologPrefixFilename,".GEPRO AS PRO",NL," "\
										"JOIN FGE50FM",tToInfologPrefixFilename,".GEWEM01 AS EM",NL," "\
										"ON EM.CODACT = PRO.CODACT",NL," "\
										"WHERE DAYS(TO_DATE('",S_GEEX9070_DATFVI,"', 'YYYYMMDD')) - DAYS(TO_DATE('",S_GEEX9070_DATMVT,"', 'YYYYMMDD')) < PRO.SECDLV",NL," "\
										"AND PRO.CODPRO = '",S_GEEX9070_CODPRO,"'",NL," "\
										"AND PRO.CODACT = 'MAC'")

						log("------------------------------------------------------------", NL)
						log(tQuery,NL)
						log("------------------------------------------------------------", NL)

						if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
							bfSqlErro()
							exit(1)
						endif

						if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
							bfSqlErro()
							exit(1)
						endif

						bQueryResult := FALSE
						if bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE then
							if peel(taDb2Array["IMOFVI"]," ") <> S_GEEX9070_MOTIMM then
								bQueryResult := TRUE

								! M06
									if bPrimeiraLinhaM06 = FALSE then
										bPrimeiraLinhaM06 := TRUE
										tFileOutM06 := build(sHOME,"/ToInfolog/",tToInfologPrefixFilename,"06",build(nMessageID:R015),".DAT")
										tFileOutTempM06 := build(sHOME,"/ToInfolog/Temp/",tToInfologPrefixFilename,"06",build(nMessageID:R015),".DAT")
										tNameOutM06 := build(tToInfologPrefixFilename,"06",build(nMessageID:R015),".DAT")
												
										R_GEEX0000_CODEXC("00")
										R_GEEX0000_SEPEXC(".")
										R_GEEX0000_SCOEXC("00")
										R_GEEX0000_EMTEXC("FM") 
										R_GEEX0000_DATEXC(time("now" ,"%Y%m%d"))
										R_GEEX0000_HEUEXC(time("now" ,"%H%M%S"))
										R_GEEX0000_NUMEXC("0000000")
										R_GEEX0000_ACQEXC("0")
										R_GEEX0000_VEREXC("5.00") 
										R_GEEX0000_NOMDTQ("M06")
										R_GEEX0000_LIBEXC(build(nMessageID:R010))
													
										flush(0,0,NL) >> tFileOutTempM06
									endif

									R_GEEX0600_CODEXC("06")
									R_GEEX0600_SEPEXC(".")
									R_GEEX0600_SCOEXC("00")
									R_GEEX0600_TRTEXC("2")
									R_GEEX0600_CODTRT("1")
									R_GEEX0600_CODACT(S_GEEX9070_CODACT)
									R_GEEX0600_CODPRO(S_GEEX9070_CODPRO)
									R_GEEX0600_CODPAL(S_GEEX9070_CODPAL)
									R_GEEX0600_MOTIMM(peel(taDb2Array["IMOFVI"]," "))

									nContadorLinhasEscritas++
									flush(0,0,NL) >> tFileOutTempM06
								! FIM M06
								remove(taDb2Array)
							endif
						endif

						if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
							bfSqlErro()
							exit(1)
						endif
					! FIM QUERY tVALRUB_GEZZRU
				endif
			endif
		endif
	! FIM SHELF LIFE

	bTem9070 := TRUE

	if bPrimeiro9900 = TRUE then
		tCODACTLido := S_GEEX9070_CODACT
		bPrimeiro9900 := FALSE
	endif

	if tCODACTLido = "MAC" then
		!BYPASS INICIO	
			if length(S_GEEX9070_CODPAL) > 0 then
				tQuery := build("SELECT  PL.NUMPAL",NL," "\
								"       ,PL.CODPAL",NL," "\
								"       ,LEFT(JL.DATHEU_MVT,8)  AS DATMVT",NL," "\
								"       ,RIGHT(JL.DATHEU_MVT,6) AS HEUMVT",NL," "\
								"       ,PL.DATSTO 				AS DTRREC",NL," "\
								"       ,PL.HEUSTO 				AS HERREC",NL," "\
								"       ,IM.LIBIMO",NL," "\
								"       ,PP.DS1PRO",NL," "\
								"       ,PP.DS2PRO",NL," "\
								"       ,PP.DS3PRO",NL," "\
								"       ,COALESCE(SP.UVCLIV,0)  AS UVCSUP",NL," "\
								"FROM FGE50FM",tToInfologPrefixFilename,".GEPAL AS PL",NL," "\
								"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GERECE AS RE",NL," "\
								"ON PL.NUMREC = RE.NUMREC",NL," "\
								"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO AS PP",NL," "\
								"ON PL.CODACT = PP.CODACT AND PL.CODPRO = PP.CODPRO",NL," "\
								"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO AS IM",NL," "\
								"ON PL.MOTIMM = IM.MOTIMM",NL," "\
								"LEFT JOIN",NL," "\
								"(",NL," "\
								"	SELECT  JL.NUMPAL",NL," "\
								"	       ,JL.CODPAL",NL," "\
								"	       ,MAX(JL.DATMVT||DIGITS(JL.HEUMVT)) AS DATHEU_MVT",NL," "\
								"	FROM FGE50FM",tToInfologPrefixFilename,".GEJNL AS JL",NL," "\
								"	LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZMVT AS MT",NL," "\
								"	ON JL.CODMVT = MT.CODMVT",NL," "\
								"	WHERE 1 = 1",NL," "\
								"	AND CODPAL = '",S_GEEX9070_CODPAL,"'",NL," "\
								"	AND (JL.CODMVT NOT IN ('00', '30', '35', '45', '65', '70', '80') OR (JL.CODMVT IN ('30') AND MT.TRTMVT IN ('2')))",NL," "\
								"	GROUP BY  JL.NUMPAL",NL," "\
								"	         ,JL.CODPAL",NL," "\
								") AS JL",NL," "\
								"ON PL.NUMPAL = JL.NUMPAL",NL," "\
								"LEFT JOIN",NL," "\
								"(",NL," "\
								"	SELECT  SD.NUMPAL",NL," "\
								"	       ,SUM(UVCLIV) AS UVCLIV",NL," "\
								"	FROM FGE50FM",tToInfologPrefixFilename,".GESUPE AS SE",NL," "\
								"	JOIN FGE50FM",tToInfologPrefixFilename,".GESUPD AS SD",NL," "\
								"	ON SE.NUMSUP = SD.NUMSUP",NL," "\
								"	WHERE SE.TYPSUP = '1'",NL," "\
								"	AND SE.ETASUP < '30'",NL," "\
								"	AND SD.CNFLIG = '2'",NL," "\
								"	GROUP BY  SD.NUMPAL",NL," "\
								") AS SP",NL," "\
								"ON PL.NUMPAL = SP.NUMPAL",NL," "\
								"WHERE PL.CODACT = '",S_GEEX9070_CODACT,"'",NL," "\
								"AND PL.CODPAL = '",S_GEEX9070_CODPAL,"'")

				if bLogSQL then
					log("------------------------------------------------------------", NL)
					log("--- LINHA 90.70 (ESCREVE N*)--------------------------------", NL)
					log(tQuery,NL)
					log("------------------------------------------------------------", NL)
					bLogSQL := FALSE
				endif

				if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
					bfSqlErro()
					exit(1)
				endif

				if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
					bfSqlErro()
					exit(1)
				endif

				if bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE then
					tDATMVT := peel(taDb2Array["DATMVT"]," ")
					tHEUMVT := peel(taDb2Array["HEUMVT"]," ")
					tDTRREC := peel(taDb2Array["DTRREC"]," ")
					tHERREC := peel(taDb2Array["HERREC"]," ")
					tDS1PRO := peel(taDb2Array["DS1PRO"]," ")
					tDS2PRO := peel(taDb2Array["DS2PRO"]," ")
					tDS3PRO := peel(taDb2Array["DS3PRO"]," ")
					tUVCSUP := peel(taDb2Array["UVCSUP"]," ")
					remove(taDb2Array)
				endif

				if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
					bfSqlErro()
					exit(1)
				endif			

				R_GEEX9070_BP_CODEXC(S_GEEX9070_CODEXC)
				R_GEEX9070_BP_SEPEXC(S_GEEX9070_SEPEXC)
				R_GEEX9070_BP_SCOEXC(S_GEEX9070_SCOEXC)
				R_GEEX9070_BP_TRTEXC(S_GEEX9070_TRTEXC)
				R_GEEX9070_BP_CODPAL(S_GEEX9070_CODPAL)
				R_GEEX9070_BP_CODACT(S_GEEX9070_CODACT)
				R_GEEX9070_BP_CODCLI(S_GEEX9070_CODCLI)
				R_GEEX9070_BP_CODPRO(S_GEEX9070_CODPRO)
				R_GEEX9070_BP_VALPRO(S_GEEX9070_VALPRO)
				R_GEEX9070_BP_NATPRO(S_GEEX9070_NATPRO)
				if length(S_GEEX9070_MOTIMM) = 0 then
					R_GEEX9070_BP_MOTIMM("REA")
					R_GEEX9070_BP_LIBIMO("Released")
				else
					R_GEEX9070_BP_MOTIMM(S_GEEX9070_MOTIMM)
					R_GEEX9070_BP_LIBIMO(taLIBIMO_BP[peel(S_GEEX9070_MOTIMM," ")])
				endif
				R_GEEX9070_BP_DATIMM1(S_GEEX9070_DATIMM1)
				R_GEEX9070_BP_DATIMM2(S_GEEX9070_DATIMM2)
				R_GEEX9070_BP_TOPEDI(S_GEEX9070_TOPEDI)
				R_GEEX9070_BP_DATFVI(S_GEEX9070_DATFVI)
				R_GEEX9070_BP_CODLOT(S_GEEX9070_CODLOT)
				R_GEEX9070_BP_UVCSTO(S_GEEX9070_UVCSTO)
				R_GEEX9070_BP_UVCDES(S_GEEX9070_UVCDES)
				R_GEEX9070_BP_INDENC(S_GEEX9070_INDENC)
				R_GEEX9070_BP_STOKAI(S_GEEX9070_STOKAI)
				R_GEEX9070_BP_TOPREC(S_GEEX9070_TOPREC)
				R_GEEX9070_BP_SITPAL(S_GEEX9070_SITPAL)
				R_GEEX9070_BP_PCBPRO(S_GEEX9070_PCBPRO)
				R_GEEX9070_BP_SPCPRO(S_GEEX9070_SPCPRO)
				R_GEEX9070_BP_SENMVT(S_GEEX9070_SENMVT)
				R_GEEX9070_BP_DATLIB(S_GEEX9070_DATLIB)
				R_GEEX9070_BP_ETAPAL(S_GEEX9070_ETAPAL)
				R_GEEX9070_BP_ALLSTS(S_GEEX9070_ALLSTS)
				R_GEEX9070_BP_ZONSTS(S_GEEX9070_ZONSTS)
				R_GEEX9070_BP_DPLSTS(S_GEEX9070_DPLSTS)
				R_GEEX9070_BP_NIVSTS(S_GEEX9070_NIVSTS)
				R_GEEX9070_BP_INDPRO(S_GEEX9070_INDPRO)
				R_GEEX9070_BP_IMOCOM(S_GEEX9070_IMOCOM)
				R_GEEX9070_BP_MOTIMM2(S_GEEX9070_MOTIMM2)
				R_GEEX9070_BP_PDBPAL(S_GEEX9070_PDBPAL)
				R_GEEX9070_BP_UVCKAI(S_GEEX9070_UVCKAI)
				R_GEEX9070_BP_CODRGT(S_GEEX9070_CODRGT)
				R_GEEX9070_BP_DATREC(tDTRREC)
				R_GEEX9070_BP_MESPRO(S_GEEX9070_MESPRO)
				R_GEEX9070_BP_DISEXC(S_GEEX9070_DISEXC)
				R_GEEX9070_BP_DATMVT(tDATMVT)
				R_GEEX9070_BP_HEUMVT(tHEUMVT)
				R_GEEX9070_BP_HEUREC(tHERREC)
				R_GEEX9070_BP_DS1PRO(tDS1PRO)
				R_GEEX9070_BP_DS2PRO(tDS2PRO)
				R_GEEX9070_BP_DS3PRO(tDS3PRO)
				R_GEEX9070_BP_UVCSUP(tUVCSUP)

				flush(0,0,NL) >> tFileOutTempBP
			endif
		!BYPASS FIM
	endif
endline

!==============================================================================

line("99.00")
	! SHELF LIFE
		if bPrimeiraLinhaM06 = TRUE then
			R_GEEX9900_CODEXC("99")
			R_GEEX9900_SEPEXC(".")
			R_GEEX9900_SCOEXC("00")
			R_GEEX9900_TRTEXC("")
			R_GEEX9900_EMTEXC("FM")
			R_GEEX9900_DATEXC(time("now" ,"%Y%m%d"))
			R_GEEX9900_HEUEXC(time("now" ,"H%M%S"))
			tContadorLinhasEscritas := build(nContadorLinhasEscritas)
			R_GEEX9900_CPTEXC(build(number(tContadorLinhasEscritas):R08.0))

			flush(0,0,NL) >> tFileOutTempM06
			close(tFileOutTempM06)

			copy(tFileOutTempM06,tFileOutM06)
			close(tFileOutTempM06)
			remove(tFileOutTempM06)
			close(tFileOutM06)

			bfMajtraceM06("Recebida","0","MARS CAJAMAR",time("now","%Y-%m-%d"),tFileInput,tFileOut,"Produtos","")
		
            ! Enviar interface para o cliente
                tCmd := build("edisend ToInfolog ", tFileOutM06)
                log("executando o comando - ", tCmd, NL)
                system(tCmd) 
        endif
	! FIM SHELF LIFE

	!BYPASS INICIO
		tCODEXC_9900 := S_GEEX9900_CODEXC
		tSEPEXC_9900 := S_GEEX9900_SEPEXC
		tSCOEXC_9900 := S_GEEX9900_SCOEXC
		tTRTEXC_9900 := S_GEEX9900_TRTEXC
		tEMTEXC_9900 := S_GEEX9900_EMTEXC
		tRCTEXC_9900 := S_GEEX9900_RCTEXC
		tDATEXC_9900 := S_GEEX9900_DATEXC
		tHEUEXC_9900 := S_GEEX9900_HEUEXC
		tNUMEXC_9900 := S_GEEX9900_NUMEXC
		tCPTEXC_9900 := S_GEEX9900_CPTEXC
		tNOMSYS_9900 := S_GEEX9900_NOMSYS
		tNOMDTQ_9900 := S_GEEX9900_NOMDTQ
		tBIBDTQ_9900 := S_GEEX9900_BIBDTQ
		tIDEMSG_9900 := S_GEEX9900_IDEMSG
		tDISEXC_9900 := S_GEEX9900_DISEXC
	!BYPASS FIM

	if bTem9000 = TRUE then
		fmbrasil_batimento_p5_batimento := find(build(sHOME,"/fmbrasil_batimento_p5"),CODACT=tCODACTLido,TIPO="BATIMENTO")
		if valid(fmbrasil_batimento_p5_batimento) then
			tTOEMAILbat := fmbrasil_batimento_p5_batimento.TOEMAIL
			tCCEMAILbat := fmbrasil_batimento_p5_batimento.CCEMAIL
			tBEGINSUBJbat := fmbrasil_batimento_p5_batimento.BEGINSUBJ
			tHORARIOSPERMITIDOSbat := fmbrasil_batimento_p5_batimento.HORARIOSPERMITIDOS
			tHORARIOSPERMITIDOS := replace(replace(tHORARIOSPERMITIDOSbat," ",""),",",";")
			nHorariosPermitidosAux := split(tHORARIOSPERMITIDOS,taArrayAuxApaga,";")
			if nHorariosPermitidosAux <= 1 then
				taArrayHORARIOSPERMITIDOS[1] := tHORARIOSPERMITIDOS
				nHorariosPermitidosAux := 1
			else
				taArrayHORARIOSPERMITIDOS := taArrayAuxApaga
			endif
			remove(taArrayAuxApaga)
			nTempPesquisaArray := 1
			while nTempPesquisaArray <= nHorariosPermitidosAux do
				log("Horario Permitidos BATIMENTO: ",taArrayHORARIOSPERMITIDOS[nTempPesquisaArray], NL)
				if taArrayHORARIOSPERMITIDOS[nTempPesquisaArray] = substr(tHora,1,2) then
					bFazBatimento := TRUE
				endif
				nTempPesquisaArray++
			endwhile
		
			remove(taArrayHORARIOSPERMITIDOS)
		else
			bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Nao existe na tabela fmbrasil_batimento_p5 os valores CODACT= ",tCODACTLido," para o TIPO=BATIMENTO"))
		endif

		fmbrasil_batimento_p5_p5 := find(build(sHOME,"/fmbrasil_batimento_p5"),CODACT=tCODACTLido,TIPO="P5")
		if valid(fmbrasil_batimento_p5_p5) then
			tTOEMAILp5 := fmbrasil_batimento_p5_p5.TOEMAIL
			tCCEMAILp5 := fmbrasil_batimento_p5_p5.CCEMAIL
			tBEGINSUBJp5 := fmbrasil_batimento_p5_p5.BEGINSUBJ
			tHORARIOSPERMITIDOSp5 := fmbrasil_batimento_p5_p5.HORARIOSPERMITIDOS
			tHORARIOSPERMITIDOS := replace(replace(tHORARIOSPERMITIDOSp5," ",""),",",";")
			nHorariosPermitidosAux := split(tHORARIOSPERMITIDOS,taArrayAuxApaga,";")
			if nHorariosPermitidosAux <= 1 then
				taArrayHORARIOSPERMITIDOS[1] := tHORARIOSPERMITIDOS
				nHorariosPermitidosAux := 1
			else
				taArrayHORARIOSPERMITIDOS := taArrayAuxApaga
			endif
			
			remove(taArrayAuxApaga)
			
			nTempPesquisaArray := 1
			while nTempPesquisaArray <= nHorariosPermitidosAux do
				log("Horario Permitidos P5: ",taArrayHORARIOSPERMITIDOS[nTempPesquisaArray],NL)
				if taArrayHORARIOSPERMITIDOS[nTempPesquisaArray]  = substr(tHora,1,2) then
					bFazP5 := TRUE
				endif
				nTempPesquisaArray++
			endwhile
			
			remove(taArrayHORARIOSPERMITIDOS)
		else
			bfMajtrace2("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Nao existe na tabela fmbrasil_batimento_p5 os valores CODACT= ",tCODACTLido," para o TIPO=P5"))
		endif

		!==============================================================================
		!                      MARS
		!==============================================================================
		
		if bFazBatimento = TRUE then
			TRACE:=new(build(sHOME,"/trace"))
		endif
		
		if bFazP5 = TRUE then
			TRACE2:=new(build(sHOME,"/trace"))
		endif

		!==============================================================================
		!RESUMO
				
            tQuery := build("SELECT  SUBSTR(CHAR(CURRENT_TIMESTAMP),9,2)||'/'||SUBSTR(CHAR(CURRENT_TIMESTAMP),6,2)||'/'||LEFT(CHAR(CURRENT_TIMESTAMP),4) DATADIA",NL," "\
                            "       ,RE.PRODUTO",NL," "\
                            "       ,RE.PLANTA",NL," "\
                            "       ,CASE WHEN RB.VALRUB IS NULL THEN AC.VALRUB  ELSE RB.VALRUB END DEPOSITO",NL," "\
                            "       ,'0' LOTE",NL," "\
                            "       ,CASE WHEN (RE.SITUACAO = 'LIV' or RE.SITUACAO is null) THEN CASE",NL," "\
                            "             WHEN SUM(RE.QTDE_LIVRE + QTDE_CHK_CONF - QTDE_PUT_SEM_ITF - RE.QTD_ONDA_SEM_SEP) < 0 THEN 0  ELSE SUM(RE.QTDE_LIVRE + QTDE_CHK_CONF - QTDE_PUT_SEM_ITF - RE.QTD_ONDA_SEM_SEP) END  ELSE 0 END LIVRE",NL," "\
                            "       ,CASE WHEN (RE.SITUACAO = 'LIV' or RE.SITUACAO is null) THEN SUM(RE.QTDE_LIVRE * PP.VOLUVC) / 10",NL," "\
                            "             WHEN RE.SITUACAO = 'BLO' THEN SUM(RE.QTDE_BLOQ * PP.VOLUVC) / 10",NL," "\
                            "             WHEN RE.SITUACAO = 'CQ' THEN SUM(RE.QTDE_CQ * PP.VOLUVC) / 10 END VOLUME",NL," "\
                            "       ,CASE WHEN RE.SITUACAO = 'BLO' THEN SUM(RE.QTDE_BLOQ + QTDE_CHK_CONF - QTDE_PUT_SEM_ITF - RE.QTD_ONDA_SEM_SEP)  ELSE 0 END BLOQ",NL," "\
                            "       ,CASE WHEN RE.SITUACAO = 'CQ' THEN SUM(RE.QTDE_CQ + QTDE_CHK_CONF - QTDE_PUT_SEM_ITF - RE.QTD_ONDA_SEM_SEP)  ELSE 0 END CQ",NL," "\
                            "       ,SUM(RE.QTDE_REC_DIA) QTDE_ENT_DIA",NL," "\
                            "       ,SUM(RE.QTDESEPDIA) QTDE_SAI_DIA",NL," "\
                            "       ,RE.STATUS",NL," "\
                            "       ,SUBSTR(CHAR(CURRENT_TIMESTAMP),9,2)||'/'||SUBSTR(CHAR(CURRENT_TIMESTAMP),6,2)||'/'||LEFT(CHAR(CURRENT_TIMESTAMP),4) || ' ' || SUBSTR(CHAR(CURRENT_TIMESTAMP),12,2)||':'||SUBSTR(CHAR(CURRENT_TIMESTAMP),15,2) DATAHORADIA",NL," "\
                            "       ,EA.EDIPRO EAN_PRINCIPAL",NL," "\
                            "FROM",NL," "\
                            "(",NL," "\
                            "	SELECT  CODPRO PRODUTO",NL," "\
                            "	       ,PL.CODACT PLANTA",NL," "\
                            "	       ,0 DEPOSITO",NL," "\
                            "	       ,'0' LOTE",NL," "\
                            "	       ,CASE WHEN (IM.EDIIMO = 'LIV' or IM.EDIIMO is null) THEN SUM(PL.UVCSTO)  ELSE 0 END QTDE_LIVRE",NL," "\
                            "	       ,CASE WHEN IM.EDIIMO = 'BLO' THEN SUM(PL.UVCSTO)  ELSE 0 END QTDE_BLOQ",NL," "\
                            "	       ,CASE WHEN IM.EDIIMO = 'CQ' THEN SUM(PL.UVCSTO)  ELSE 0 END QTDE_CQ",NL," "\
                            "	       ,0 QTDE_REC_DIA",NL," "\
                            "	       ,0 QTDE_PUT_SEM_ITF",NL," "\
                            "	       ,0 QTDE_CHK_CONF",NL," "\
                            "	       ,0 QTDESEPDIA",NL," "\
                            "	       ,0 QTD_ONDA_SEM_SEP",NL," "\
                            "	       ,0 QTD_SEM_ONDA",NL," "\
                            "	       ,CASE WHEN IM.EDIIMO IS NULL THEN 'NM'  ELSE PL.MOTIMM END STATUS",NL," "\
                            "	       ,CASE WHEN IM.EDIIMO IS NULL THEN 'LIV'  ELSE IM.EDIIMO END SITUACAO",NL," "\
                            "	FROM FGE50FM",tToInfologPrefixFilename,".GEPAL PL",NL," "\
                            "	LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
                            "	ON IM.MOTIMM = PL.MOTIMM",NL," "\
                            "	WHERE PL.CODACT = '",tCODACTLido,"'",NL," "\
                            "	AND PL.ETAPAL NOT IN (50, 60)",NL," "\
                            "	GROUP BY  CODPRO",NL," "\
                            "	         ,PL.CODACT",NL," "\
                            "	         ,PL.MOTIMM",NL," "\
                            "	         ,IM.EDIIMO",NL," "\
                            "	UNION ALL",NL," "\
                            "	SELECT  PL.CODPRO PRODUTO",NL," "\
                            "	       ,PL.CODACT PLANTA",NL," "\
                            "	       ,0 DEPOSITO",NL," "\
                            "	       ,'0' LOTE",NL," "\
                            "	       ,0 QTDE_LIVRE",NL," "\
                            "	       ,0 QTDE_BLOQ",NL," "\
                            "	       ,0 QTDE_CQ",NL," "\
                            "	       ,CASE WHEN RD.ETAREC = 50 THEN SUM(PL.UVCSTO)  ELSE 0 END QTDE_REC_DIA",NL," "\
                            "	       ,CASE WHEN RD.ETAREC < 50 THEN SUM(PL.UVCSTO)  ELSE 0 END QTDE_PUT_SEM_ITF",NL," "\
                            "	       ,CASE WHEN RD.ETAREC = 50 THEN CASE",NL," "\
                            "	             WHEN PL.ETAPAL = 50 THEN SUM(PL.UVCSTO)  ELSE 0 END END QTDE_CHK_CONF",NL," "\
                            "	       ,0 QTDESEPDIA",NL," "\
                            "	       ,0 QTD_ONDA_SEM_SEP",NL," "\
                            "	       ,0 QTD_SEM_ONDA",NL," "\
                            "	       ,CASE WHEN IM.EDIIMO IS NULL THEN 'NM'  ELSE PL.MOTIMM END STATUS",NL," "\
                            "	       ,CASE WHEN IM.EDIIMO IS NULL THEN 'LIV'  ELSE IM.EDIIMO END SITUACAO",NL," "\
                            "	FROM FGE50FM",tToInfologPrefixFilename,".GEPAL PL",NL," "\
                            "	INNER JOIN FGE50FM",tToInfologPrefixFilename,".GERECD RD",NL," "\
                            "	ON PL.NUMREC = RD.NUMREC AND PL.SNUREC = RD.SNUREC AND PL.CODPRO = RD.CODPRO AND PL.CODACT = RD.CODACT",NL," "\
                            "	LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GERECE RE",NL," "\
                            "	ON RD.NUMREC = RE.NUMREC AND RD.SNUREC = RE.SNUREC",NL," "\
                            "	LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
                            "	ON IM.MOTIMM = PL.MOTIMM",NL," "\
                            "	WHERE PL.CODACT = '",tCODACTLido,"'",NL," "\
                            "	AND PL.ETAPAL <> 60",NL," "\
                            "	GROUP BY  PL.CODPRO",NL," "\
                            "	         ,PL.CODACT",NL," "\
                            "	         ,IM.EDIIMO",NL," "\
                            "	         ,PL.MOTIMM",NL," "\
                            "	         ,RD.ETAREC",NL," "\
                            "	         ,PL.ETAPAL",NL," "\
                            "	UNION ALL",NL," "\
                            "	SELECT  SD.CODPRO PRODUTO",NL," "\
                            "	       ,SE.CODACT PLANTA",NL," "\
                            "	       ,0 DEPOSITO",NL," "\
                            "	       ,'0' LOTE",NL," "\
                            "	       ,0 QTDE_LIVRE",NL," "\
                            "	       ,0 QTDE_BLOQ",NL," "\
                            "	       ,0 QTDE_CQ",NL," "\
                            "	       ,0 QTDE_REC_DIA",NL," "\
                            "	       ,0 QTDE_PUT_SEM_ITF",NL," "\
                            "	       ,0 QTDE_CHK_CONF",NL," "\
                            "	       ,SUM(SD.UVCLIV) QTDESEPDIA",NL," "\
                            "	       ,0 QTD_ONDA_SEM_SEP",NL," "\
                            "	       ,0 QTD_SEM_ONDA",NL," "\
                            "	       ,CASE WHEN IM.EDIIMO IS NULL THEN 'NM'  ELSE SD.MOTIMM END STATUS",NL," "\
                            "	       ,CASE WHEN IM.EDIIMO IS NULL THEN 'LIV'  ELSE IM.EDIIMO END SITUACAO",NL," "\
                            "	FROM",NL," "\
                            "	(",NL," "\
                            "		SELECT  DATSUP2",NL," "\
                            "		       ,TOULIV",NL," "\
                            "		       ,NUMLIV",NL," "\
                            "		       ,SNULIV",NL," "\
                            "		       ,NUMTOU",NL," "\
                            "		       ,CODACT",NL," "\
                            "		       ,MIN (ETASUP) ETASUP",NL," "\
                            "		FROM FGE50FM",tToInfologPrefixFilename,".GESUPE",NL," "\
                            "		WHERE TYPSUP <> 3",NL," "\
                            "		AND CLILIV <> 'MASSIFICATION'",NL," "\
                            "		GROUP BY  DATSUP2",NL," "\
                            "		         ,TOULIV",NL," "\
                            "		         ,NUMLIV",NL," "\
                            "		         ,SNULIV",NL," "\
                            "		         ,NUMTOU",NL," "\
                            "		         ,CODACT",NL," "\
                            "	) SE",NL," "\
                            "	INNER JOIN FGE50FM",tToInfologPrefixFilename,".GESUPD SD",NL," "\
                            "	ON SE.NUMLIV = SD.NUMLIV AND SE.SNULIV = SD.SNULIV AND SE.CODACT = SD.CODACT AND SE.NUMLIV = SD.NUMLIV",NL," "\
                            "	LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
                            "	ON IM.MOTIMM = SD.MOTIMM",NL," "\
                            "	WHERE SE.ETASUP = 30",NL," "\
                            "	AND SE.CODACT = '",tCODACTLido,"'",NL," "\
                            "	AND SD.UVCLIV > 0",NL," "\
                            "	GROUP BY  SD.CODPRO",NL," "\
                            "	         ,SE.CODACT",NL," "\
                            "	         ,SE.TOULIV",NL," "\
                            "	         ,IM.EDIIMO",NL," "\
                            "	         ,SD.MOTIMM",NL," "\
                            "	UNION ALL",NL," "\
                            "	SELECT  SD.CODPRO PRODUTO",NL," "\
                            "	       ,SD.CODACT PLANTA",NL," "\
                            "	       ,0 DEPOSITO",NL," "\
                            "	       ,'0' LOTE",NL," "\
                            "	       ,0 QTDE_LIVRE",NL," "\
                            "	       ,0 QTDE_BLOQ",NL," "\
                            "	       ,0 QTDE_CQ",NL," "\
                            "	       ,0 QTDE_REC_DIA",NL," "\
                            "	       ,0 QTDE_PUT_SEM_ITF",NL," "\
                            "	       ,0 QTDE_CHK_CONF",NL," "\
                            "	       ,0 QTDESEPDIA",NL," "\
                            "	       ,SUM( case sd.indmas WHEN '3' THEN d.uvcliv else sd.uvcliv end) AS QTD_ONDA_SEM_SEP",NL," "\
                            "	       ,0 QTD_SEM_ONDA",NL," "\
                            "	       ,CASE WHEN SE.TYPSUP = 1 THEN CASE",NL," "\
                            "	             WHEN IM2.EDIIMO IS NULL THEN 'NM'  ELSE PL.MOTIMM END  ELSE CASE",NL," "\
                            "	             WHEN IM.EDIIMO IS NULL THEN 'NM'  ELSE SD.MOTIMM END END STATUS",NL," "\
                            "	       ,CASE WHEN SE.TYPSUP = 1 THEN CASE",NL," "\
                            "	             WHEN IM2.EDIIMO IS NULL THEN 'LIV'  ELSE IM2.EDIIMO END  ELSE CASE",NL," "\
                            "	             WHEN IM.EDIIMO IS NULL THEN 'LIV'  ELSE IM.EDIIMO END END SITUACAO",NL," "\
                            "	FROM FGE50FM",tToInfologPrefixFilename,".GESUPE SE",NL," "\
                            "	LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GESUPD SD",NL," "\
                            "	ON SE.NUMSUP = SD.NUMSUP AND SE.SNUSUP = SD.SNUSUP AND SE.NUMLIV = SD.NUMLIV",NL," "\
                            "	LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GESUPD d",NL," "\
                            "	ON d.CPTMAS = sd.CPTMAS AND d.indMas = '1' AND D.CPTMAS > 0",NL," "\
                            "	LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPAL PL",NL," "\
                            "	ON SD.NUMPAL = PL.NUMPAL",NL," "\
                            "	LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
                            "	ON IM.MOTIMM = SD.MOTIMM",NL," "\
                            "	LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM2",NL," "\
                            "	ON IM2.MOTIMM = PL.MOTIMM",NL," "\
                            "	WHERE SD.CODACT = '",tCODACTLido,"'",NL," "\
                            "	AND se.etasup < 30",NL," "\
                            "	AND SD.UVCLIV > 0",NL," "\
                            "	AND SD.NUMLIV <> 0",NL," "\
                            "	AND se.typsup IN (1, 2)",NL," "\
                            "	AND sd.indMas <> '1'",NL," "\
                            "	AND SD.ZONSTS <> 'Z'",NL," "\
                            "	GROUP BY  COALESCE(D.REFLIV,SD.REFLIV)",NL," "\
                            "	         ,SD.CODPRO",NL," "\
                            "	         ,SD.CODACT",NL," "\
                            "	         ,IM.EDIIMO",NL," "\
                            "	         ,SD.MOTIMM",NL," "\
                            "	         ,IM2.EDIIMO",NL," "\
                            "	         ,PL.MOTIMM",NL," "\
                            "	         ,SE.TYPSUP",NL," "\
                            ") RE",NL," "\
                            "INNER JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO PP",NL," "\
                            "ON RE.PRODUTO = PP.CODPRO AND RE.PLANTA = PP.CODACT",NL," "\
                            "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA",NL," "\
                            "ON PP.CODPRO = EA.CODPRO AND PP.CODACT = EA.CODACT AND EA.EANDS1 = '12NC'",NL," "\
                            "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU RB",NL," "\
                            "ON RB.VALCLE = RE.STATUS AND RB.CODRUB = RE.PLANTA",NL," "\
                            "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AC",NL," "\
                            "ON AC.CODACT = RE.PLANTA",NL," "\
                            "WHERE RE.PRODUTO = PP.CODPRO",NL," "\
                            "AND RE.PLANTA = PP.CODACT",NL," "\
                            "GROUP BY  RE.PRODUTO",NL," "\
                            "         ,RE.PLANTA",NL," "\
                            "         ,AC.VALRUB",NL," "\
                            "         ,RB.VALRUB",NL," "\
                            "         ,RE.STATUS",NL," "\
                            "         ,RE.SITUACAO",NL," "\
                            "         ,EA.EDIPRO",NL," "\
                            "ORDER BY RE.PRODUTO")

            if bFazBatimento = TRUE then
                log("------------------------------------------------------------", NL)
                log(tQuery,NL)
                log("------------------------------------------------------------", NL)

                if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                bQueryTemResul := FALSE
                while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
                    if bQueryTemResul = FALSE then
                        bQueryTemResul := TRUE
                        print("DATADIA;" \
                                "PRODUTO;" \
                                "PLANTA;" \
                                "DEPOSITO;" \
                                "LOTE;" \
                                "LIVRE;" \
                                "VOLUME;" \
                                "BLOQ;" \
                                "CQ;" \
                                "QTDE_ENT_DIA;" \
                                "QTDE_SAI_DIA;" \
                                "STATUS;" \
                                "DATAHORADIA;" \
                                "EAN_PRINCIPAL;" \
                                "",NL) >> TRACE.RESUMO

                        fmbrasil_gama_ajustes_estoque := find(build(sHOME,"/fmbrasil_gama_ajustes_estoque/"),Planta=tCODACTLido)dINDEX
                        if valid(fmbrasil_gama_ajustes_estoque) then
                            close(fmbrasil_gama_ajustes_estoque.CSV)
                            copy(fmbrasil_gama_ajustes_estoque.CSV, TRACE.CONTROLE_AJUSTES_WMS)
                            close(TRACE.CONTROLE_AJUSTES_WMS)
                            close(fmbrasil_gama_ajustes_estoque.CSV)
                        endif
                    endif
                                
                    if length(peel(taDb2Array["STATUS"]," ")) > 0 then
                        fmbrasil_gama_ajustes_estoque := find(build(sHOME,"/fmbrasil_gama_ajustes_estoque/"),Produto=peel(taDb2Array["PRODUTO"]," "),Planta=peel(taDb2Array["PLANTA"]," "),STATUS=peel(taDb2Array["STATUS"]," "))
                        while valid(fmbrasil_gama_ajustes_estoque) do
                            taDb2Array[fmbrasil_gama_ajustes_estoque.COD_SIT_CLI] := peel(taDb2Array[fmbrasil_gama_ajustes_estoque.COD_SIT_CLI]," ")
                            if (number(taDb2Array[fmbrasil_gama_ajustes_estoque.COD_SIT_CLI])-number(fmbrasil_gama_ajustes_estoque.Qtd)) >= 0 then
                                taDb2Array[fmbrasil_gama_ajustes_estoque.COD_SIT_CLI] := build(number(taDb2Array[fmbrasil_gama_ajustes_estoque.COD_SIT_CLI])-number(fmbrasil_gama_ajustes_estoque.Qtd))
                            endif
                            fmbrasil_gama_ajustes_estoque.TRACEGIM := build(TRACE.INDEX)
                            fmbrasil_gama_ajustes_estoque := find()
                        endwhile
                    else
                        fmbrasil_gama_ajustes_estoque := find(build(sHOME,"/fmbrasil_gama_ajustes_estoque/"),Produto=peel(taDb2Array["PRODUTO"]," "),Planta=peel(taDb2Array["PLANTA"]," "),STATUS="")
                        while valid(fmbrasil_gama_ajustes_estoque) do
                            if length(fmbrasil_gama_ajustes_estoque.STATUS) > 0 and (number(taDb2Array["LIVRE"])-number(fmbrasil_gama_ajustes_estoque.Qtd)) >= 0 then
                                taDb2Array["LIVRE"] := peel(taDb2Array["LIVRE"]," ")
                                taDb2Array["LIVRE"] := build(number(taDb2Array["LIVRE"])-number(fmbrasil_gama_ajustes_estoque.Qtd))
                            endif
                            fmbrasil_gama_ajustes_estoque.TRACEGIM := build(TRACE.INDEX)
                            fmbrasil_gama_ajustes_estoque := find()
                        endwhile
                    endif
                                
                    print(peel(taDb2Array["DATADIA"]," "),";", \
                            peel(taDb2Array["PRODUTO"]," "),";", \
                            peel(taDb2Array["PLANTA"]," "),";", \
                            peel(taDb2Array["DEPOSITO"]," "),";", \
                            peel(taDb2Array["LOTE"]," "),";", \
                            peel(taDb2Array["LIVRE"]," "),";", \
                            peel(taDb2Array["VOLUME"]," "),";", \
                            peel(taDb2Array["BLOQ"]," "),";", \
                            peel(taDb2Array["CQ"]," "),";", \
                            peel(taDb2Array["QTDE_ENT_DIA"]," "),";", \
                            peel(taDb2Array["QTDE_SAI_DIA"]," "),";", \
                            peel(taDb2Array["STATUS"]," "),";", \
                            peel(taDb2Array["DATAHORADIA"]," "),";", \
                            peel(taDb2Array["EAN_PRINCIPAL"]," "),";", \
                            NL) >> TRACE.RESUMO

                    remove(taDb2Array)
                endwhile

                if bQueryTemResul = FALSE then
                    print("Consulta não retornou resultados",NL) >> TRACE.RESUMO
                endif
                        
                !acrescenta CSV entradas que nao foram processadas
                fmbrasil_gama_ajustes_estoque := find(build(sHOME,"/fmbrasil_gama_ajustes_estoque/"),Planta=tCODACTLido)
                while valid(fmbrasil_gama_ajustes_estoque) do
                    if fmbrasil_gama_ajustes_estoque.TRACEGIM <> build(TRACE.INDEX) then
                        if fmbrasil_gama_ajustes_estoque.COD_SIT_CLI = "LIVRE" and number(fmbrasil_gama_ajustes_estoque.Qtd) <= 0 then
                            print(fmbrasil_gama_ajustes_estoque.Data,";", \
                                    fmbrasil_gama_ajustes_estoque.Produto,";", \
                                    fmbrasil_gama_ajustes_estoque.Planta,";", \
                                    fmbrasil_gama_ajustes_estoque.Deposito,";", \
                                    fmbrasil_gama_ajustes_estoque.Lote,";", \
                                    "",";", \
                                    replace(fmbrasil_gama_ajustes_estoque.Qtd,"-",""),";", \
                                    "",";", \
                                    "",";", \
                                    "",";", \
                                    "",";", \
                                    fmbrasil_gama_ajustes_estoque.STATUS,";", \
                                    "",";", \
                                    NL) >> TRACE.RESUMO
                        endif
                        if fmbrasil_gama_ajustes_estoque.COD_SIT_CLI = "BLOQ" and number(fmbrasil_gama_ajustes_estoque.Qtd) <= 0 then
                            print(fmbrasil_gama_ajustes_estoque.Data,";", \
                                    fmbrasil_gama_ajustes_estoque.Produto,";", \
                                    fmbrasil_gama_ajustes_estoque.Planta,";", \
                                    fmbrasil_gama_ajustes_estoque.Deposito,";", \
                                    fmbrasil_gama_ajustes_estoque.Lote,";", \
                                    "",";", \
                                    "",";", \
                                    replace(fmbrasil_gama_ajustes_estoque.Qtd,"-",""),";", \
                                    "",";", \
                                    "",";", \
                                    "",";", \
                                    fmbrasil_gama_ajustes_estoque.STATUS,";", \
                                    "",";", \
                                    NL) >> TRACE.RESUMO
                        endif
                    endif									
                    fmbrasil_gama_ajustes_estoque := find()
                endwhile
                        
                close(TRACE.RESUMO)

                if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                tPrefixoSubjectEmail := tBEGINSUBJbat
                
                if bQueryTemResul = TRUE then
                    remove(tArquivoEmailErro)
                    tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/RESUMO_",time("now","%Y%m%d%H%M%S"),".csv")
                    copy(TRACE.RESUMO,tArquivoEmailErro)
                    close(TRACE.RESUMO)
                    close(tArquivoEmailErro)

                    tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_RESUMO") 
                    tNameEMAIL := build("RESUMO_",time("now","%Y%m%d%H%M%S"),".csv")
                    tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL,"  EMAIL.RCPT=",replace(replace(tTOEMAILbat," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILbat," ",""),";",",")," EmailResumo ",tArquivoEmailErro)
                    log("executing command ",tCmdEmailErro,NL)
                    nRet := system(tCmdEmailErro)
                    close(tArquivoEmailErro)				
                    remove(tArquivoEmailErro)
                else
                    remove(tArquivoEmailErro)
                    tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/RESUMO_",time("now","%Y%m%d%H%M%S"),".txt")
                    print("***Informações de Resumo no Dia***",NL,NL,"***Não há dados para emissão do arquivo***",NL,NL,"Processo gerado automaticamente, não utilize a opção responder a este remetente.",NL,NL) >> tArquivoEmailErro
                    close(tArquivoEmailErro)

                    tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_RESUMO")
                    tNameEMAIL := build("RESUMO_",time("now","%Y%m%d%H%M%S"),".txt")
                    tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL," EMAIL.CONTENTID=text/plain EMAIL.DISPOSITION=inline EMAIL.RCPT=",replace(replace(tTOEMAILbat," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILbat," ",""),";",",")," EmailResumo ",tArquivoEmailErro)
                    log("executing command ",tCmdEmailErro,NL)
                    nRet := system(tCmdEmailErro)
                    close(tArquivoEmailErro)				
                    remove(tArquivoEmailErro)
                endif
            endif

        !==============================================================================

		!==============================================================================
		!ESTOQUE_PRODUTO

            tQuery := build("SELECT SUBSTR(CHAR(CURRENT_TIMESTAMP),9,2)||'/'||SUBSTR(CHAR(CURRENT_TIMESTAMP),6,2)||'/'||LEFT(CHAR(CURRENT_TIMESTAMP),4) DTMVTO",NL," "\
                            "      ,PL.CODPRO PRODUTO",NL," "\
                            "      ,PL.CODACT PLANTA      ",NL," "\
                            "      ,CASE",NL," "\
                            "       WHEN RB.VALRUB IS NULL THEN AC.VALRUB ",NL," "\
                            "       ELSE RB.VALRUB ",NL," "\
                            "       END DEPOSITO      ",NL," "\
                            "      ,'' LOTE",NL," "\
                            "      ,CASE",NL," "\
                            "       WHEN IM.EDIIMO IS NULL THEN 'LIV' ",NL," "\
                            "       ELSE IM.EDIIMO",NL," "\
                            "       END COD_SIT_CLI           ",NL," "\
                            "      ,SUM(PL.UVCSTO) QUANTIDADE",NL," "\
                            "      ,PL.MOTIMM STATUS",NL," "\
                            "      ,EA.EDIPRO EAN_PRINCIPAL ",NL," "\
                            "FROM FGE50FM",tToInfologPrefixFilename,".GEPAL PL LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
                            "ON     IM.MOTIMM=PL.MOTIMM",NL," "\
                            "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU RB",NL," "\
                            "ON     IM.MOTIMM=RB.VALCLE",NL," "\
                            "AND    RB.VALCLE=PL.MOTIMM",NL," "\
                            "AND    RB.CODRUB=PL.CODACT",NL," "\
                            "AND    RB.CODRUB=PL.CODACT",NL," "\
                            "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AC",NL," "\
                            "ON     AC.CODACT =PL.CODACT",NL," "\
                            "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA ",NL," "\
                            "    ON    PL.CODPRO = EA.CODPRO ",NL," "\
                            "	AND   PL.CODACT = EA.CODACT ",NL," "\
                            "	AND   EA.EANDS1 = '12NC' ",NL," "\
                            "WHERE  PL.ETAPAL NOT IN (50,60)",NL," "\
                            "AND    PL.CODACT='",tCODACTLido,"'",NL," "\
                            "GROUP BY PL.CODPRO",NL," "\
                            "        ,PL.CODACT   ",NL," "\
                            "        ,RB.VALRUB ",NL," "\
                            "        ,AC.VALRUB ",NL," "\
                            "        ,IM.EDIIMO",NL," "\
                            "        ,PL.MOTIMM ",NL," "\
                            "        ,EA.EDIPRO ",NL," "\
                            "ORDER BY 3,2")

            if bFazBatimento = TRUE then

                log("------------------------------------------------------------", NL)
                log(tQuery,NL)
                log("------------------------------------------------------------", NL)

                if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                bQueryTemResul := FALSE
                while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
                    if bQueryTemResul = FALSE then
                        bQueryTemResul := TRUE
                        print("DTMVTO;"\
                                "PRODUTO;"\
                                "PLANTA;"\
                                "DEPOSITO;"\
                                "LOTE;"\
                                "COD_SIT_CLI;"\
                                "QUANTIDADE;"\
                                "STATUS;"\
                                "EAN_PRINCIPAL;"\
                                "", NL) >> TRACE.ESTOQUE_PRODUTO
                    endif
                                
                    print(peel(taDb2Array["DTMVTO"]," "),";", \
                            peel(taDb2Array["PRODUTO"]," "),";", \
                            peel(taDb2Array["PLANTA"]," "),";", \
                            peel(taDb2Array["DEPOSITO"]," "),";", \
                            peel(taDb2Array["LOTE"]," "),";", \
                            peel(taDb2Array["COD_SIT_CLI"]," "),";", \
                            peel(taDb2Array["QUANTIDADE"]," "),";", \
                            peel(taDb2Array["STATUS"]," "),";", \
                            peel(taDb2Array["EAN_PRINCIPAL"]," "),";", NL) >> TRACE.ESTOQUE_PRODUTO

                    remove(taDb2Array)
                endwhile

                if bQueryTemResul = FALSE then
                    print("Consulta não retornou resultados",NL) >> TRACE.ESTOQUE_PRODUTO
                endif

                close(TRACE.ESTOQUE_PRODUTO)

                if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
                    bfSqlErro()
                    exit(1)
                endif			
            endif

        !==============================================================================		
		
		!==============================================================================
		!ESTOQUE_PALETE_LOCACAO

            tQuery := build("SELECT  SUBSTR(CHAR(CURRENT_TIMESTAMP),9,2)||'/'||SUBSTR(CHAR(CURRENT_TIMESTAMP),6,2)||'/'||LEFT(CHAR(CURRENT_TIMESTAMP),4) DTMVTO",NL," "\
                            "       ,PL.CODPRO PRODUTO",NL," "\
                            "       ,PL.CODACT PLANTA",NL," "\
                            "       ,CASE WHEN RB.VALRUB IS NULL THEN AC.VALRUB  ELSE RB.VALRUB END DEPOSITO",NL," "\
                            "       ,PL.CODLOT LOTE",NL," "\
                            "       ,CASE WHEN IM.EDIIMO IS NULL THEN 'LIV'  ELSE IM.EDIIMO END COD_SIT_CLI",NL," "\
                            "       ,PL.ZONSTS ||'-'|| RIGHT('000' || PL.ALLSTS,3) ||'-'|| RIGHT('0000' || PL.DPLSTS,4) ||'-'|| RIGHT('00' || PL.NIVSTS,2) LOCALIZACAO",NL," "\
                            "       ,PL.UVCSTO QUANTIDADE",NL," "\
                            "       ,PL.MOTIMM STATUS",NL," "\
                            "       ,PL.CODPAL PALETE",NL," "\
                            "       ,EA.EDIPRO EAN_PRINCIPAL",NL," "\
                            "FROM FGE50FM",tToInfologPrefixFilename,".GEPAL PL",NL," "\
                            "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
                            "ON IM.MOTIMM = PL.MOTIMM",NL," "\
                            "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU RB",NL," "\
                            "ON IM.MOTIMM = RB.VALCLE AND RB.VALCLE = PL.MOTIMM AND RB.CODRUB = PL.CODACT AND RB.CODRUB = PL.CODACT",NL," "\
                            "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AC",NL," "\
                            "ON AC.CODACT = PL.CODACT",NL," "\
                            "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA",NL," "\
                            "ON PL.CODPRO = EA.CODPRO AND PL.CODACT = EA.CODACT AND EA.EANDS1 = '12NC'",NL," "\
                            "WHERE PL.ETAPAL NOT IN (50, 60)",NL," "\
                            "AND PL.CODACT = '",tCODACTLido,"'",NL," "\
                            "ORDER BY 3, 2")

            if bFazBatimento = TRUE then
                log("------------------------------------------------------------", NL)
                log(tQuery,NL)
                log("------------------------------------------------------------", NL)

                if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                bQueryTemResul := FALSE
                while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
                    if bQueryTemResul = FALSE then
                        bQueryTemResul := TRUE
                        print("DTMVTO;" \
                                "PRODUTO;" \
                                "PLANTA;" \
                                "DEPOSITO;" \
                                "LOTE;" \
                                "COD_SIT_CLI;" \
                                "LOCALIZACAO;" \
                                "QUANTIDADE;" \
                                "STATUS;" \
                                "PALETE;" \
                                "EAN_PRINCIPAL;" \
                                "",NL) >> TRACE.ESTOQUE_PALETE_LOCACAO
                    endif
                    print(peel(taDb2Array["DTMVTO"]," "),";", \
                            peel(taDb2Array["PRODUTO"]," "),";", \
                            peel(taDb2Array["PLANTA"]," "),";", \
                            peel(taDb2Array["DEPOSITO"]," "),";", \
                            peel(taDb2Array["LOTE"]," "),";", \
                            peel(taDb2Array["COD_SIT_CLI"]," "),";", \
                            peel(taDb2Array["LOCALIZACAO"]," "),";", \
                            peel(taDb2Array["QUANTIDADE"]," "),";", \
                            peel(taDb2Array["STATUS"]," "),";", \
                            peel(taDb2Array["PALETE"]," "),";", \
                            peel(taDb2Array["EAN_PRINCIPAL"]," "),";", NL) >> TRACE.ESTOQUE_PALETE_LOCACAO

                    remove(taDb2Array)
                endwhile

                if bQueryTemResul = FALSE then
                    print("Consulta não retornou resultados",NL) >> TRACE.ESTOQUE_PALETE_LOCACAO
                endif
                        
                close(TRACE.ESTOQUE_PALETE_LOCACAO)

                if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
                    bfSqlErro()
                    exit(1)
                endif		 
            endif

        !==============================================================================
		
		!==============================================================================
		!CHECKIN_CONF

            nContadorQuerys++
            tNomeQuery := "CHECKIN_CONF"
            tQuery := build("SELECT  RD.DATREC DATA",NL," "\
                            "       ,PL.REFREC BL",NL," "\
                            "       ,PL.CODPRO PRODUTO",NL," "\
                            "       ,PL.CODACT PLANTA",NL," "\
                            "       ,RB.VALRUB DEPOSITO",NL," "\
                            "       ,PL.CODLOT LOTE",NL," "\
                            "       ,CASE",NL," "\
                            "        WHEN IM.EDIIMO IS NULL THEN 'LIV' ",NL," "\
                            "        ELSE IM.EDIIMO",NL," "\
                            "        END COD_SIT_CLI",NL," "\
                            "       ,SUM(PL.UVCSTO) QUANTIDADE",NL," "\
                            "       ,PL.MOTIMM STATUS",NL," "\
                            "        ,EA.EDIPRO EAN_PRINCIPAL ",NL," "\
                            " FROM   FGE50FM",tToInfologPrefixFilename,".GEPAL PL INNER JOIN FGE50FM",tToInfologPrefixFilename,".GERECD RD",NL," "\
                            " ON     PL.NUMREC=RD.NUMREC",NL," "\
                            " AND    PL.CODPRO=RD.CODPRO",NL," "\
                            " AND    PL.CODACT=RD.CODACT",NL," "\
                            " LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
                            " ON     IM.MOTIMM=PL.MOTIMM",NL," "\
                            " LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU RB",NL," "\
                            " ON     IM.MOTIMM=RB.VALCLE",NL," "\
                            " AND    RB.VALCLE=PL.MOTIMM",NL," "\
                            " AND    RB.CODRUB=PL.CODACT",NL," "\
                            " AND    RB.CODRUB=RD.CODACT",NL," "\
                            " LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA",NL," "\
                            " ON    PL.CODPRO = EA.CODPRO",NL," "\
                            " AND   PL.CODACT = EA.CODACT",NL," "\
                            " AND   EA.EANDS1 = '12NC' ",NL," "\
                            " WHERE  RD.ETAREC=50",NL," "\
                            " AND    PL.ETAPAL=50",NL," "\
                            " AND    PL.CODACT='",tCODACTLido,"'",NL," "\
                            " GROUP BY RD.DATREC",NL," "\
                            "		,PL.CODPRO",NL," "\
                            "		,PL.REFREC",NL," "\
                            "        ,PL.CODACT",NL," "\
                            "        ,RB.VALRUB",NL," "\
                            "        ,PL.CODLOT",NL," "\
                            "        ,IM.EDIIMO",NL," "\
                            "        ,PL.MOTIMM,EA.EDIPRO",NL," "\
                            " ORDER BY 1,2,3")

            if bFazBatimento = TRUE then
                log("------------------------------------------------------------", NL)
                log(tQuery,NL)
                log("------------------------------------------------------------", NL)

                if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                bQueryTemResul := FALSE
                while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
                    if bQueryTemResul = FALSE then
                        bQueryTemResul := TRUE
                        print("DATA;" \
                                "BL;" \
                                "PRODUTO;" \
                                "PLANTA;" \
                                "DEPOSITO;" \
                                "LOTE;" \
                                "COD_SIT_CLI;" \
                                "QUANTIDADE;" \
                                "STATUS;" \
                                "",NL) >> TRACE.CHECKIN_CONF_SOMA
                    endif
                    print(peel(taDb2Array["DATA"]," "),";", \
                            peel(taDb2Array["BL"]," "),";", \
                            peel(taDb2Array["PRODUTO"]," "),";", \
                            peel(taDb2Array["PLANTA"]," "),";", \
                            peel(taDb2Array["DEPOSITO"]," "),";", \
                            peel(taDb2Array["LOTE"]," "),";", \
                            peel(taDb2Array["COD_SIT_CLI"]," "),";", \
                            peel(taDb2Array["QUANTIDADE"]," "),";", \
                            peel(taDb2Array["STATUS"]," "),";", NL) >> TRACE.CHECKIN_CONF_SOMA

                    remove(taDb2Array)
                endwhile

                if bQueryTemResul = FALSE then
                    print("Consulta não retornou resultados",NL) >> TRACE.CHECKIN_CONF_SOMA
                endif

                close(TRACE.CHECKIN_CONF_SOMA)

                if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
                    bfSqlErro()
                    exit(1)
                endif
            endif

        !==============================================================================	

		!==============================================================================
		!PUTAWAY_SEM_INTERFACE

            nContadorQuerys++
            tNomeQuery := "PUTAWAY_SEM_INTERFACE"
            tQuery := build("SELECT  RE.REFREC",NL," "\
                            "	   ,PL.CODPRO PRODUTO",NL," "\
                            "       ,PL.CODACT PLANTA",NL," "\
                            "      ,CASE",NL," "\
                            "       WHEN RB.VALRUB IS NULL THEN AC.VALRUB ",NL," "\
                            "       ELSE RB.VALRUB ",NL," "\
                            "       END DEPOSITO      ",NL," "\
                            "       ,'' LOTE",NL," "\
                            "       ,SUM(PL.UVCSTO) QTDE_PUT_SEM_ITF",NL," "\
                            "       ,CASE WHEN IM.EDIIMO IS NULL THEN 'NM'",NL," "\
                            "        	ELSE PL.MOTIMM",NL," "\
                            "        END STATUS",NL," "\
                            "	  ,CASE WHEN IM.EDIIMO IS NULL THEN 'LIV'",NL," "\
                            "       ELSE IM.EDIIMO  END SITUACAO",NL," "\
                            "      ,EA.EDIPRO EAN_PRINCIPAL ",NL," "\
                            " FROM   FGE50FM",tToInfologPrefixFilename,".GEPAL PL INNER JOIN FGE50FM",tToInfologPrefixFilename,".GERECD RD",NL," "\
                            "		ON     PL.NUMREC=RD.NUMREC",NL," "\
                            "		AND    PL.SNUREC=RD.SNUREC",NL," "\
                            "		AND    PL.CODPRO=RD.CODPRO",NL," "\
                            "		AND    PL.CODACT=RD.CODACT",NL," "\
                            "		LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GERECE RE",NL," "\
                            "		ON     RD.NUMREC=RE.NUMREC",NL," "\
                            "		AND    RD.SNUREC=RE.SNUREC",NL," "\
                            "		LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
                            "		ON     IM.MOTIMM=PL.MOTIMM",NL," "\
                            "		LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU RB",NL," "\
                            "		ON     IM.MOTIMM=RB.VALCLE",NL," "\
                            "		AND    RB.VALCLE=PL.MOTIMM",NL," "\
                            "		AND    RB.CODRUB=PL.CODACT",NL," "\
                            "		AND    RB.CODRUB=RD.CODACT",NL," "\
                            "		LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AC",NL," "\
                            "		ON     AC.CODACT =PL.CODACT",NL," "\
                            "		LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA ",NL," "\
                            "		ON    PL.CODPRO = EA.CODPRO ",NL," "\
                            "		AND   PL.CODACT = EA.CODACT ",NL," "\
                            "		AND   EA.EANDS1 = '12NC'  ",NL," "\
                            " WHERE  PL.CODACT = '",tCODACTLido,"'",NL," "\
                            " AND    RE.ETAREC < 50",NL," "\
                            " GROUP BY RE.REFREC,",NL," "\
                            "		 PL.CODPRO ",NL," "\
                            "        ,PL.CODACT ",NL," "\
                            "        ,IM.EDIIMO ",NL," "\
                            "        ,PL.MOTIMM ",NL," "\
                            "        ,RB.VALRUB ",NL," "\
                            "        ,AC.VALRUB,EA.EDIPRO ")

            if bFazBatimento = TRUE then
                log("------------------------------------------------------------", NL)
                log(tQuery,NL)
                log("------------------------------------------------------------", NL)

                if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                bQueryTemResul := FALSE
                while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
                    if bQueryTemResul = FALSE then
                        bQueryTemResul := TRUE
                        print("REFREC;" \
                                "PRODUTO;" \
                                "PLANTA;" \
                                "DEPOSITO;" \
                                "LOTE;" \
                                "QTDE_PUT_SEM_ITF;" \
                                "STATUS;" \
                                "SITUACAO;" \
                                "EAN_PRINCIPAL;" \
                                "", NL) >> TRACE.PUTAWAY_SEM_INTERFACE_SUBTRAI
                    endif
                    print(peel(taDb2Array["REFREC"]," "),";", \
                            peel(taDb2Array["PRODUTO"]," "),";", \
                            peel(taDb2Array["PLANTA"]," "),";", \
                            peel(taDb2Array["DEPOSITO"]," "),";", \
                            peel(taDb2Array["LOTE"]," "),";", \
                            peel(taDb2Array["QTDE_PUT_SEM_ITF"]," "),";", \
                            peel(taDb2Array["STATUS"]," "),";", \
                            peel(taDb2Array["SITUACAO"]," "),";", \
                            peel(taDb2Array["EAN_PRINCIPAL"]," "),";", NL) >> TRACE.PUTAWAY_SEM_INTERFACE_SUBTRAI

                    remove(taDb2Array)
                endwhile

                if bQueryTemResul = FALSE then
                    print("Consulta não retornou resultados",NL) >> TRACE.PUTAWAY_SEM_INTERFACE_SUBTRAI
                endif

                close(TRACE.PUTAWAY_SEM_INTERFACE_SUBTRAI)

                if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
                    bfSqlErro()
                    exit(1)
                endif
            endif

        !==============================================================================

		!==============================================================================
		!SEPARADO_NÃO_CONF

            nContadorQuerys++
            tNomeQuery := "SEPARADO_NÃO_CONF"
            tQuery := build("SELECT  CASE WHEN SE.DATSUP2 = 0 THEN se.DATPRP  ELSE SE.DATSUP2 END DATE_TIME_CREATED",NL," "\
                            "       ,SD.CODPRO PRODUTO",NL," "\
                            "       ,SE.CODACT PLANTA",NL," "\
                            "       ,COALESCE(RB.VALRUB,AC.VALRUB) DEPOSITO",NL," "\
                            "       ,'' LOTE",NL," "\
                            "       ,CASE WHEN SE.TYPSUP = 1 THEN COALESCE(IM2.EDIIMO,'LIV')  ELSE COALESCE(IM.EDIIMO ,'LIV') END COD_SIT_CLI",NL," "\
                            "       ,SUM(sd.uvcliv) QUANTIDADE",NL," "\
                            "       ,SE.REFLIV PEDIDO",NL," "\
                            "       ,EA.EDIPRO EAN_PRINCIPAL",NL," "\
                            "FROM FGE50FM",tToInfologPrefixFilename,".GESUPE SE",NL," "\
                            "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GESUPD SD",NL," "\
                            "ON SE.NUMSUP = SD.NUMSUP AND SE.SNUSUP = SD.SNUSUP AND SE.NUMLIV = SD.NUMLIV",NL," "\
                            "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPAL PL",NL," "\
                            "ON SD.NUMPAL = PL.NUMPAL",NL," "\
                            "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
                            "ON IM.MOTIMM = SD.MOTIMM",NL," "\
                            "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM2",NL," "\
                            "ON IM2.MOTIMM = PL.MOTIMM",NL," "\
                            "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU RB",NL," "\
                            "ON IM.MOTIMM = RB.VALCLE AND RB.VALCLE = SD.MOTIMM AND RB.CODRUB = SD.CODACT AND RB.CODRUB = SE.CODACT",NL," "\
                            "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AC",NL," "\
                            "ON AC.CODACT = SE.CODACT",NL," "\
                            "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA",NL," "\
                            "ON SD.CODPRO = EA.CODPRO AND EA.EANDS1 = '12NC'",NL," "\
                            "WHERE SD.CODACT = '",tCODACTLido,"'",NL," "\
                            "AND se.etasup = 30",NL," "\
                            "AND SD.UVCLIV > 0",NL," "\
                            "AND SD.NUMLIV <> 0",NL," "\
                            "AND se.typsup IN (1, 2)",NL," "\
                            "AND sd.indMas <> '1'",NL," "\
                            "GROUP BY  CASE WHEN SE.DATSUP2 = 0 THEN se.DATPRP  ELSE SE.DATSUP2 END",NL," "\
                            "         ,SD.CODPRO",NL," "\
                            "         ,SE.CODACT",NL," "\
                            "         ,COALESCE(RB.VALRUB,AC.VALRUB)",NL," "\
                            "         ,CASE WHEN SE.TYPSUP = 1 THEN COALESCE(IM2.EDIIMO,'LIV')  ELSE COALESCE(IM.EDIIMO ,'LIV') END",NL," "\
                            "         ,SE.REFLIV",NL," "\
                            "         ,EA.EDIPRO",NL," "\
                            "ORDER BY 1",NL," "\
                            "         ,2",NL," "\
                            "         ,3",NL," "\
                            "         ,4")

            if bFazBatimento = TRUE then
                log("------------------------------------------------------------", NL)
                log(tQuery,NL)
                log("------------------------------------------------------------", NL)

                if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                bQueryTemResul := FALSE
                while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
                    if bQueryTemResul = FALSE then
                        bQueryTemResul := TRUE
                        print("DATE_TIME_CREATED;" \
                                "PRODUTO;" \
                                "PLANTA;" \
                                "DEPOSITO;" \
                                "LOTE;" \
                                "COD_SIT_CLI;" \
                                "QUANTIDADE;" \
                                "PEDIDO;" \
                                "EAN_PRINCIPAL",NL) >> TRACE.SEPARADO_NAO_CONF_SOMA
                    endif
                    print(peel(taDb2Array["DATE_TIME_CREATED"]," "),";", \
                            peel(taDb2Array["PRODUTO"]," "),";", \
                            peel(taDb2Array["PLANTA"]," "),";", \
                            peel(taDb2Array["DEPOSITO"]," "),";", \
                            peel(taDb2Array["LOTE"]," "),";", \
                            peel(taDb2Array["COD_SIT_CLI"]," "),";", \
                            peel(taDb2Array["QUANTIDADE"]," "),";", \
                            peel(taDb2Array["PEDIDO"]," "),";", \
                            peel(taDb2Array["EAN_PRINCIPAL"]," "),";", NL) >> TRACE.SEPARADO_NAO_CONF_SOMA

                    remove(taDb2Array)
                endwhile

                if bQueryTemResul = FALSE then
                    print("Consulta não retornou resultados",NL) >> TRACE.SEPARADO_NAO_CONF_SOMA
                endif

                close(TRACE.SEPARADO_NAO_CONF_SOMA)

                if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
                    bfSqlErro()
                    exit(1)
                endif
            endif

        !==============================================================================

		!==============================================================================
		!ONDA_SOLTA_CONFIRMADOS_SEM_SEP
						
            tQuery := build("SELECT  SUBSTR(CHAR(CURRENT_TIMESTAMP),9,2)||'/'||SUBSTR(CHAR(CURRENT_TIMESTAMP),6,2)||'/'||LEFT(CHAR(CURRENT_TIMESTAMP),4) DATADIA",NL," "\
                    "       ,COALESCE(D.REFLIV,SD.REFLIV) PO_NO",NL," "\
                    "       ,SD.CODPRO PRODUTO",NL," "\
                    "       ,SD.CODACT PLANTA",NL," "\
                    "       ,SE.TYPSUP",NL," "\
                    "       ,CASE WHEN RB.VALRUB IS NULL THEN AC.VALRUB  ELSE RB.VALRUB END DEPOSITO",NL," "\
                    "       ,'' LOTE",NL," "\
                    "       ,CASE WHEN SE.TYPSUP = 1 THEN COALESCE(IM2.EDIIMO,'LIV')  ELSE COALESCE( IM.EDIIMO,'LIV') END COD_SIT_CLI",NL," "\
                    "       ,SUM( CASE SD.INDMAS WHEN '3' THEN D.UVCLIV else SD.UVCLIV END) AS QTD",NL," "\
                    "       ,CASE WHEN SE.TYPSUP = 1 THEN CASE",NL," "\
                    "             WHEN IM2.EDIIMO IS NULL THEN 'NM'  ELSE PL.MOTIMM END  ELSE CASE",NL," "\
                    "             WHEN IM.EDIIMO IS NULL THEN 'NM'  ELSE SD.MOTIMM END END MOTIMM",NL," "\
                    "       ,EA.EDIPRO EAN_PRINCIPAL",NL," "\
                    "FROM FGE50FM",tToInfologPrefixFilename,".GESUPE SE",NL," "\
                    "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GESUPD SD",NL," "\
                    "ON SE.NUMSUP = SD.NUMSUP AND SE.SNUSUP = SD.SNUSUP AND SE.NUMLIV = SD.NUMLIV",NL," "\
                    "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GESUPD D",NL," "\
                    "ON D.CPTMAS = SD.CPTMAS AND D.INDMAS = '1' AND D.CPTMAS > 0",NL," "\
                    "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPAL PL",NL," "\
                    "ON SD.NUMPAL = PL.NUMPAL",NL," "\
                    "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
                    "ON IM.MOTIMM = SD.MOTIMM",NL," "\
                    "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM2",NL," "\
                    "ON IM2.MOTIMM = PL.MOTIMM",NL," "\
                    "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU RB",NL," "\
                    "ON IM.MOTIMM = RB.VALCLE AND RB.VALCLE = SD.MOTIMM AND RB.CODRUB = SD.CODACT AND RB.CODRUB = SE.CODACT",NL," "\
                    "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AC",NL," "\
                    "ON AC.CODACT = SE.CODACT",NL," "\
                    "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA",NL," "\
                    "ON SD.CODPRO = EA.CODPRO AND EA.EANDS1 = '12NC'",NL," "\
                    "WHERE SD.CODACT = '",tCODACTLido,"'",NL," "\
                    "AND SE.ETASUP < 30",NL," "\
                    "AND SD.UVCLIV > 0",NL," "\
                    "AND SD.NUMLIV <> 0",NL," "\
                    "AND SE.TYPSUP IN (1, 2)",NL," "\
                    "AND SD.INDMAS <> '1'",NL," "\
                    "AND SD.ZONSTS <> 'Z'",NL," "\
                    "GROUP BY  COALESCE(D.REFLIV,SD.REFLIV)",NL," "\
                    "         ,SD.CODPRO",NL," "\
                    "         ,SD.CODACT",NL," "\
                    "         ,RB.VALRUB",NL," "\
                    "         ,AC.VALRUB",NL," "\
                    "         ,IM.EDIIMO",NL," "\
                    "         ,SD.MOTIMM",NL," "\
                    "         ,IM2.EDIIMO",NL," "\
                    "         ,PL.MOTIMM",NL," "\
                    "         ,SE.TYPSUP",NL," "\
                    "         ,EA.EDIPRO",NL," "\
                    "ORDER BY 1",NL," "\
                    "         ,2",NL," "\
                    "         ,3",NL," "\
                    "         ,4")

            if bFazBatimento = TRUE then

                log("------------------------------------------------------------", NL)
                log(tQuery,NL)
                log("------------------------------------------------------------", NL)

                if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                bQueryTemResul := FALSE
                while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
                    if bQueryTemResul = FALSE then
                        bQueryTemResul := TRUE
                        print("DATADIA;" \
                                "PO_NO;" \
                                "PRODUTO;" \
                                "PLANTA;" \
                                "TYPSUP;" \
                                "DEPOSITO;" \
                                "LOTE;" \
                                "COD_SIT_CLI;" \
                                "QTD;" \
                                "MOTIMM;" \
                                "EAN_PRINCIPAL;" \
                                "",NL) >> TRACE.ONDA_SOLTA_CONFIRMADOS_SEM_SEP_SUBTRAI
                    endif
                    print(peel(taDb2Array["DATADIA"]," "),";", \
                            peel(taDb2Array["PO_NO"]," "),";", \
                            peel(taDb2Array["PRODUTO"]," "),";", \
                            peel(taDb2Array["PLANTA"]," "),";", \
                            peel(taDb2Array["TYPSUP"]," "),";", \
                            peel(taDb2Array["DEPOSITO"]," "),";", \
                            peel(taDb2Array["LOTE"]," "),";", \
                            peel(taDb2Array["COD_SIT_CLI"]," "),";", \
                            peel(taDb2Array["QTD"]," "),";", \
                            peel(taDb2Array["MOTIMM"]," "),";", \
                            peel(taDb2Array["EAN_PRINCIPAL"]," "),";", NL) >> TRACE.ONDA_SOLTA_CONFIRMADOS_SEM_SEP_SUBTRAI

                    remove(taDb2Array)
                endwhile

                if bQueryTemResul = FALSE then
                    print("Consulta não retornou resultados",NL) >> TRACE.ONDA_SOLTA_CONFIRMADOS_SEM_SEP_SUBTRAI
                endif

                close(TRACE.ONDA_SOLTA_CONFIRMADOS_SEM_SEP_SUBTRAI)

                if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
                    bfSqlErro()
                    exit(1)
                endif
            endif

        !==============================================================================			

		!==============================================================================
		!PEDIDOS_SEM_ONDA_SOLTA
						
            tQuery := build("SELECT  LE.REFLIV",NL," "\
                    "       ,LD.CODPRO PRODUTO",NL," "\
                    "       ,LE.CODACT PLANTA",NL," "\
                    "       ,0 DEPOSITO",NL," "\
                    "       ,'0' LOTE",NL," "\
                    "       ,SUM(LD.UVCCDE) QTD_SEM_ONDA",NL," "\
                    "       ,'NM' STATUS",NL," "\
                    "       ,'LIV' SITUACAO",NL," "\
                    "       ,EA.EDIPRO EAN_PRINCIPAL",NL," "\
                    "FROM FGE50FM",tToInfologPrefixFilename,".GELIVE LE",NL," "\
                    "INNER JOIN FGE50FM",tToInfologPrefixFilename,".GELIVD LD",NL," "\
                    "ON LE.NUMLIV = LD.NUMLIV AND LE.SNULIV = LD.SNULIV",NL," "\
                    "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEACRUB AC",NL," "\
                    "ON AC.CODACT = LE.CODACT",NL," "\
                    "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEEAN EA",NL," "\
                    "ON LD.CODPRO = EA.CODPRO AND LD.CODACT = EA.CODACT AND EA.EANDS1 = '12NC'",NL," "\
                    "WHERE LE.ETALIV < 30",NL," "\
                    "AND LE.CODACT = '",tCODACTLido,"'",NL," "\
                    "GROUP BY  LE.REFLIV",NL," "\
                    "         ,LD.CODPRO",NL," "\
                    "         ,LE.CODACT",NL," "\
                    "         ,EA.EDIPRO")

            if bFazBatimento = TRUE then
                log("------------------------------------------------------------", NL)
                log(tQuery,NL)
                log("------------------------------------------------------------", NL)

                if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                bQueryTemResul := FALSE
                while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
                    if bQueryTemResul = FALSE then
                        bQueryTemResul := TRUE
                        print("REFLIV;" \
                                "PRODUTO;" \
                                "PLANTA;" \
                                "DEPOSITO;" \
                                "LOTE;" \
                                "QTD_SEM_ONDA;" \
                                "STATUS;" \
                                "SITUACAO;" \
                                "EAN_PRINCIPAL",NL) >> TRACE.PEDIDOS_SEM_ONDA_SOLTA_SUBTRAI
                    endif
                    print(peel(taDb2Array["REFLIV"]," "),";", \
                            peel(taDb2Array["PRODUTO"]," "),";", \
                            peel(taDb2Array["PLANTA"]," "),";", \
                            peel(taDb2Array["DEPOSITO"]," "),";0;",peel(taDb2Array["QTD_SEM_ONDA"]," "),";", \
                            peel(taDb2Array["STATUS"]," "),";", \
                            peel(taDb2Array["SITUACAO"]," "),";", \
                            peel(taDb2Array["EAN_PRINCIPAL"]," "),";", NL) >> TRACE.PEDIDOS_SEM_ONDA_SOLTA_SUBTRAI

                    remove(taDb2Array)
                endwhile

                if bQueryTemResul = FALSE then
                    print("Consulta não retornou resultados",NL) >> TRACE.PEDIDOS_SEM_ONDA_SOLTA_SUBTRAI
                endif

                close(TRACE.PEDIDOS_SEM_ONDA_SOLTA_SUBTRAI)

                if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
                    bfSqlErro()
                    exit(1)
                endif
            endif

        !==============================================================================		

		!==============================================================================
		!P5_EST_OFICIAL_WMS

            tQuery := build("SELECT  GL.CODPRO SKU",NL," "\
                            "       ,GL.DS1PRO SKU_DESC1_35",NL," "\
                            "       ,GL.CODPAL LP",NL," "\
                            "       ,CASE WHEN GL.MOTIMM = '' THEN RBAC.ST  ELSE IM.STOSAP1 END                                                                     AS STATUS_SAP",NL," "\
                            "       ,CASE WHEN GL.MOTIMM = '' THEN 'NM'  ELSE GL.MOTIMM END                                                                         AS SP",NL," "\
                            "       ,REPLACE(CAST(GL.UVCSTO/GL.PCBPRO AS NUMERIC(15,2)),'.',',')                                                                    AS QTDE_CDA",NL," "\
                            "       ,CASE WHEN GL.CODLOT = '' THEN 'NOLOT'  ELSE GL.CODLOT END                                                                      AS LOT",NL," "\
                            "       ,LT.STATUS                                                                                                                      AS STATUS_LOTE",NL," "\
                            "       ,CASE WHEN GL.DATFVI = 0 THEN ''  ELSE VARCHAR_FORMAT( to_date(GL.DATFVI ||'000000','YYYY-MM-DD hh24:mi:ss') ,'DD/MM/YYYY') END AS EXPR_DATE",NL," "\
                            "       ,GL.UVCSTO QTY",NL," "\
                            "       ,GL.UNIPRO UOM_ABREV",NL," "\
                            "       ,GL.ZONSTS ||'-'|| RIGHT('000' || GL.ALLSTS,3) ||'-'|| RIGHT('0000' || GL.DPLSTS,4) ||'-'|| RIGHT('00' || GL.NIVSTS,2) LOCACAO",NL," "\
                            "       ,CASE WHEN GL.ETAPAL = '50' THEN 'PUT'  ELSE 'LOC' END                                                                          AS TIPO",NL," "\
                            "       ,GL.REFREC BL",NL," "\
                            "       ,GL.VALPRO                                                                                                                      AS PKG_NO",NL," "\
                            "       ,GL.FAMPRO FAMI",NL," "\
                            "       ,VARCHAR_FORMAT( to_date(GL.DATREC ||'000000','YYYY-MM-DD hh24:mi:ss') ,'DD/MM/YYYY')                                           AS DREC",NL," "\
                            "       ,'' PERC_VIDA_PROD",NL," "\
                            "       ,GP.ANAPRO DIVISAO",NL," "\
                            "       ,GP.CODTMD COD_ONU",NL," "\
                            "       ,GP.CODSEC CLASSE_RISCO",NL," "\
                            "       ,GL.REFREC NF",NL," "\
                            "       ,GL.DS2PRO                                                                                                                      AS DESCRICAO",NL," "\
                            "FROM FGE50FM",tToInfologPrefixFilename,".GEPAL GL",NL," "\
                            "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO GP",NL," "\
                            "ON GP.CODPRO = GL.CODPRO",NL," "\
                            "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO IM",NL," "\
                            "ON GL.MOTIMM = IM.MOTIMM",NL," "\
                            "LEFT JOIN",NL," "\
                            "(",NL," "\
                            "	SELECT  CODACT",NL," "\
                            "	       ,CODRUB",NL," "\
                            "	       ,VALRUB ST",NL," "\
                            "	FROM FGE50FM",tToInfologPrefixFilename,".GEACRUB",NL," "\
                            "	WHERE CODRUB = '",tCODACTLido,"'",NL," "\
                            ") RBAC",NL," "\
                            "ON GL.CODACT = RBAC.CODACT",NL," "\
                            "LEFT JOIN",NL," "\
                            "(",NL," "\
                            "	SELECT  A.CODLOT",NL," "\
                            "	       ,A.CODPRO",NL," "\
                            "	       ,A.MOTIMM STATUS",NL," "\
                            "	       ,B.STOSAP1",NL," "\
                            "	FROM FGE50FM",tToInfologPrefixFilename,".GELOT A",NL," "\
                            "	JOIN FGE50FM",tToInfologPrefixFilename,".GEZIMO B",NL," "\
                            "	ON A.MOTIMM = B.MOTIMM AND CODACT = '",tCODACTLido,"'",NL," "\
                            ") LT",NL," "\
                            "ON GL.CODLOT = LT.CODLOT AND GL.CODPRO = LT.CODPRO",NL," "\
                            "WHERE GL.CODACT = '",tCODACTLido,"'",NL," "\
                            "AND GL.ETAPAL <> '60'",NL," "\
                            "GROUP BY  GL.CODPRO",NL," "\
                            "         ,GL.DS1PRO",NL," "\
                            "         ,GL.CODPAL",NL," "\
                            "         ,GL.MOTIMM",NL," "\
                            "         ,GL.PCBPRO",NL," "\
                            "         ,RBAC.ST",NL," "\
                            "         ,IM.STOSAP1",NL," "\
                            "         ,GL.CODLOT",NL," "\
                            "         ,LT.STATUS",NL," "\
                            "         ,GL.DATFVI",NL," "\
                            "         ,GL.UVCSTO",NL," "\
                            "         ,GL.UNIPRO",NL," "\
                            "         ,GL.ZONSTS",NL," "\
                            "         ,GL.ALLSTS",NL," "\
                            "         ,GL.DPLSTS",NL," "\
                            "         ,GL.NIVSTS",NL," "\
                            "         ,GL.ETAPAL",NL," "\
                            "         ,GL.REFREC",NL," "\
                            "         ,GL.VALPRO",NL," "\
                            "         ,GL.FAMPRO",NL," "\
                            "         ,GL.DATREC",NL," "\
                            "         ,GP.ANAPRO",NL," "\
                            "         ,GP.CODTMD",NL," "\
                            "         ,GP.CODSEC",NL," "\
                            "         ,GL.REFREC",NL," "\
                            "         ,GL.DS2PRO",NL," "\
                            "ORDER BY 1")

            if bFazP5 = TRUE then
                log("------------------------------------------------------------", NL)
                log(tQuery,NL)
                log("------------------------------------------------------------", NL)

                if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                bQueryTemResul := FALSE
                while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
                    if tCODACTLido = "MAC" then
                        if bQueryTemResul = FALSE then
                            bQueryTemResul := TRUE
                            print("SKU;" \
                                    "SKU_DESC1_35;" \
                                    "LP;" \
                                    "STATUS_SAP;" \
                                    "SP;" \
                                    "QTDE_CDA;" \
                                    "LOT;" \
                                    "STATUS_LOTE;" \
                                    "EXPR_DATE;" \
                                    "QTY;" \
                                    "UOM_ABREV;" \
                                    "LOCACAO;" \
                                    "TIPO;" \
                                    "BL;" \
                                    "PKG_NO;" \
                                    "FAMI;" \
                                    "DREC;" \
                                    "PERC_VIDA_PROD;" \
                                    "DIVISAO/CATEGORIA;" \
                                    "COD_ONU;" \
                                    "CLASSE_RISCO;" \
                                    "NF;" \
                                    "DESCRICAO/REFERENCIA",NL) >> TRACE2.P5_EST_OFICIAL_WMS
                        endif
                    endif

                    print(peel(taDb2Array["SKU"]," "),";", \
                            peel(taDb2Array["SKU_DESC1_35"]," "),";", \
                            build("'", peel(taDb2Array["LP"]," ")),";", \
                            peel(taDb2Array["STATUS_SAP"]," "),";", \
                            peel(taDb2Array["SP"]," "),";", \
                            peel(taDb2Array["QTDE_CDA"]," "),";", \
                            peel(taDb2Array["LOT"]," "),";", \
                            peel(taDb2Array["STATUS_LOTE"]," "),";", \
                            peel(taDb2Array["EXPR_DATE"]," "),";", \
                            peel(taDb2Array["QTY"]," "),";", \
                            peel(taDb2Array["UOM_ABREV"]," "),";", \
                            peel(taDb2Array["LOCACAO"]," "),";", \
                            peel(taDb2Array["TIPO"]," "),";", \
                            peel(taDb2Array["BL"]," "),";", \
                            peel(taDb2Array["PKG_NO"]," "),";", \
                            peel(taDb2Array["FAMI"]," "),";", \
                            peel(taDb2Array["DREC"]," "),";", \
                            peel(taDb2Array["PERC_VIDA_PROD"]," "),";", \
                            peel(taDb2Array["DIVISAO"]," "),";", \
                            peel(taDb2Array["COD_ONU"]," "),";", \
                            peel(taDb2Array["CLASSE_RISCO"]," "),";", \
                            peel(taDb2Array["NF"]," "),";", \
                            peel(taDb2Array["DESCRICAO"]," "),";", NL) >> TRACE2.P5_EST_OFICIAL_WMS

                    remove(taDb2Array)
                endwhile

                if bQueryTemResul = FALSE then
                    print("Consulta não retornou resultados",NL) >> TRACE2.P5_EST_OFICIAL_WMS
                endif

                close(TRACE2.P5_EST_OFICIAL_WMS)

                if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                tPrefixoSubjectEmail := tBEGINSUBJp5

                if bQueryTemResul = TRUE then
                    remove(tArquivoEmailErro)
                    tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/P5_EST_OFICIAL_WMS_",time("now","%Y%m%d%H%M%S"),".csv")
                    copy(TRACE2.P5_EST_OFICIAL_WMS,tArquivoEmailErro)
                    close(TRACE2.P5_EST_OFICIAL_WMS)
                    close(tArquivoEmailErro)
                    tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_P5_EST_OFICIAL_WMS")
                    tNameEMAIL := build("P5_EST_OFICIAL_WMS_",time("now","%Y%m%d%H%M%S"),".csv")
                    tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL,"  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
                    log("executing command ",tCmdEmailErro,NL)
                    nRet := system(tCmdEmailErro)
                    close(tArquivoEmailErro)				
                    remove(tArquivoEmailErro)
                else
                    remove(tArquivoEmailErro)
                    tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/P5_EST_OFICIAL_WMS_",time("now","%Y%m%d%H%M%S"),".txt")

                    print("***Informações de P5 EST OFICIAL WMS no Dia***",NL,NL,"***Não há dados para emissão do arquivo***",NL,NL,"Processo gerado automaticamente, não utilize a opção responder a este remetente.",NL,NL) >> tArquivoEmailErro
                    close(tArquivoEmailErro)

                    tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_P5_EST_OFICIAL_WMS")
                    tNameEMAIL := build("P5_EST_OFICIAL_WMS_",time("now","%Y%m%d%H%M%S"),".txt")
                    tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL," EMAIL.CONTENTID=text/plain EMAIL.DISPOSITION=inline  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
                    log("executing command ",tCmdEmailErro,NL)
                    nRet := system(tCmdEmailErro)
                    close(tArquivoEmailErro)				
                    remove(tArquivoEmailErro)
                endif
            endif

		!==============================================================================

		!==============================================================================
		!P5_INF_SEP_EXP_DIA
				
            tQuery := build("SELECT   SD.CODACT COMP_CODE ",NL," "\
                            ",SD.CODPRO SKU ",NL," "\
                            ",SD.NUMSUP UMA ",NL," "\
                            ",SD.UVCLIV QTD ",NL," "\
                            ",'EA' UNID ",NL," "\
                            ",LEFT (ROUND (SUM((SD.PDBCOL/SD.PCBPRO)*SD.UVCLIV),3),7) PESO ",NL," "\
                            ",LEFT ((ROUND (SUM((SD.VOLCOL/SD.PCBPRO)*SD.UVCLIV),3)/1000),7) CUBAGEM ",NL," "\
                            ",GP.CODTMD COD_ONU ",NL," "\
                            ",GP.CODSEC CLASSE_RISCO ",NL," "\
                            "FROM FGE50FM",tToInfologPrefixFilename,".GESUPD SD INNER JOIN FGE50FM",tToInfologPrefixFilename,".GEHSUP HS ",NL," "\
                            "ON   SD.NUMSUP=HS.NUMSUP ",NL," "\
                            "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO GP ",NL," "\
                            "ON GP.CODPRO = SD.CODPRO ",NL," "\
                            "WHERE INDEXP=1 ",NL," "\
                            "AND    HS.ETASUP=50 ",NL," "\
                            "AND    HS.DATHIS=VARCHAR_FORMAT((CURRENT DATE - 1 DAYS), 'YYYYMMDD') ",NL," "\
                            "AND SD.CODACT='",tCODACTLido,"' ",NL," "\
                            "GROUP BY  SD.CODACT ",NL," "\
                            ",SD.CODPRO ",NL," "\
                            ",SD.NUMSUP ",NL," "\
                            ",SD.UVCLIV ",NL," "\
                            ",GP.CODTMD ",NL," "\
                            ",GP.CODSEC ",NL," "\
                            "ORDER BY 1,3,2")

            if bFazP5 = TRUE then

                log("------------------------------------------------------------", NL)
                log(tQuery,NL)
                log("------------------------------------------------------------", NL)

                if bfSqlSet( tDbBase ,"SELECTdb2"  , tQuery) = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                if bfSqlOpen( tDbBase , "SELECTdb2" ) = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                bQueryTemResul := FALSE
                while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
                    if bQueryTemResul = FALSE then
                        bQueryTemResul := TRUE
                        print("COMP_CODE;SKU;UMA;QTD;UNID;PESO;CUBAGEM;COD_ONU;CLASSE_RISCO;",NL) >>  TRACE2.P5_INF_SEP_EXP_DIA
                    endif
                    print(peel(taDb2Array["COMP_CODE"]," "),";",peel(taDb2Array["SKU"]," "),";",peel(taDb2Array["UMA"]," "),";",peel(taDb2Array["QTD"]," "),";",peel(taDb2Array["UNID"]," "),";",peel(taDb2Array["PESO"]," "),";",\
                    peel(taDb2Array["CUBAGEM"]," "),";",peel(taDb2Array["COD_ONU"]," "),";",peel(taDb2Array["CLASSE_RISCO"]," "),";",NL) >>  TRACE2.P5_INF_SEP_EXP_DIA

                    remove(taDb2Array)
                endwhile

                if bQueryTemResul = FALSE then
                    print("Consulta não retornou resultados",NL) >> TRACE2.P5_INF_SEP_EXP_DIA
                endif

                close(TRACE2.P5_INF_SEP_EXP_DIA)

                if bfSqlFree( tDbBase , "SELECTdb2"  ) = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                if bQueryTemResul = TRUE then
                    remove(tArquivoEmailErro)
                    tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/P5_INF_SEP_EXP_DIA_",time("now","%Y%m%d%H%M%S"),".csv")
                    copy(TRACE2.P5_INF_SEP_EXP_DIA,tArquivoEmailErro)
                    close(TRACE2.P5_INF_SEP_EXP_DIA)
                    close(tArquivoEmailErro)
                    tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_P5_INF_SEP_EXP_DIA")
                    tNameEMAIL := build("P5_INF_SEP_EXP_DIA_",time("now","%Y%m%d%H%M%S"),".csv")
                    tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL,"  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
                    log("executing command ",tCmdEmailErro,NL)
                    nRet := system(tCmdEmailErro)
                    close(tArquivoEmailErro)				
                    remove(tArquivoEmailErro)
                else
                    remove(tArquivoEmailErro)
                    tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/P5_INF_SEP_EXP_DIA_",time("now","%Y%m%d%H%M%S"),".txt")

                    print("***Informações de P5 INF SEP EXP no Dia***",NL,NL,"***Não há dados para emissão do arquivo***",NL,NL,"Processo gerado automaticamente, não utilize a opção responder a este remetente.",NL,NL) >> tArquivoEmailErro
                    close(tArquivoEmailErro)

                    tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_P5_INF_SEP_EXP_DIA")
                    tNameEMAIL := build("P5_INF_SEP_EXP_DIA_",time("now","%Y%m%d%H%M%S"),".txt")
                    tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL," EMAIL.CONTENTID=text/plain EMAIL.DISPOSITION=inline  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
                    log("executing command ",tCmdEmailErro,NL)
                    nRet := system(tCmdEmailErro)
                    close(tArquivoEmailErro)				
                    remove(tArquivoEmailErro)
                endif
            endif

        !==============================================================================	

		!==============================================================================
		!P5_INF_SEP_NAO_EXP
				
            tQuery := build("SELECT SD.CODACT COMP_CODE ",NL," "\
                            ",SD.CODPRO SKU ",NL," "\
                            ",SD.NUMSUP UMA ",NL," "\
                            ",SD.UVCLIV QTD ",NL," "\
                            ",'EA' UNID ",NL," "\
                            ",LEFT (ROUND (SUM((SD.PDBCOL/SD.PCBPRO)*SD.UVCLIV),3),7) PESO ",NL," "\
                            ",LEFT ((ROUND (SUM((SD.VOLCOL/SD.PCBPRO)*SD.UVCLIV),3)/1000),7) CUBAGEM ",NL," "\
                            ",GP.CODTMD COD_ONU ",NL," "\
                            ",GP.CODSEC CLASSE_RISCO ",NL," "\
                            "FROM FGE50FM",tToInfologPrefixFilename,".GESUPD SD INNER JOIN FGE50FM",tToInfologPrefixFilename,".GEHSUP HS ",NL," "\
                            "ON   SD.NUMSUP=HS.NUMSUP ",NL," "\
                            "LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO GP ",NL," "\
                            "ON GP.CODPRO = SD.CODPRO ",NL," "\
                            "WHERE INDEXP=0 ",NL," "\
                            "AND    HS.ETASUP=30 ",NL," "\
                            "AND    HS.DATHIS=VARCHAR_FORMAT((CURRENT DATE - 1 DAYS), 'YYYYMMDD') ",NL," "\
                            "AND SD.CODACT='",tCODACTLido,"' ",NL," "\
                            "GROUP BY  SD.CODACT ",NL," "\
                            ",SD.CODPRO ",NL," "\
                            ",SD.NUMSUP ",NL," "\
                            ",SD.UVCLIV ",NL," "\
                            ",GP.CODTMD ",NL," "\
                            ",GP.CODSEC ",NL," "\
                            "ORDER BY 1,3,2")

            if bFazP5 = TRUE then

                log("------------------------------------------------------------", NL)
                log(tQuery,NL)
                log("------------------------------------------------------------", NL)

                if bfSqlSet( tDbBase ,"SELECTdb2"  , tQuery) = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                if bfSqlOpen( tDbBase , "SELECTdb2" ) = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                bQueryTemResul := FALSE
                while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
                    if bQueryTemResul = FALSE then
                        bQueryTemResul := TRUE
                        print("COMP_CODE;SKU;UMA;QTD;UNID;PESO;CUBAGEM;COD_ONU;CLASSE_RISCO;",NL) >>  TRACE2.P5_INF_SEP_NAO_EXP
                    endif
                    print(peel(taDb2Array["COMP_CODE"]," "),";",peel(taDb2Array["SKU"]," "),";",peel(taDb2Array["UMA"]," "),";",peel(taDb2Array["QTD"]," "),";",peel(taDb2Array["UNID"]," "),";",peel(taDb2Array["PESO"]," "),";",\
                    peel(taDb2Array["CUBAGEM"]," "),";",peel(taDb2Array["COD_ONU"]," "),";",peel(taDb2Array["CLASSE_RISCO"]," "),";",NL) >>  TRACE2.P5_INF_SEP_NAO_EXP

                    remove(taDb2Array)
                endwhile

                if bQueryTemResul = FALSE then
                    print("Consulta não retornou resultados",NL) >> TRACE2.P5_INF_SEP_NAO_EXP
                endif

                close(TRACE2.P5_INF_SEP_NAO_EXP)

                if bfSqlFree( tDbBase , "SELECTdb2"  ) = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                if bQueryTemResul = TRUE then
                    remove(tArquivoEmailErro)
                    tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/P5_INF_SEP_NAO_EXP_",time("now","%Y%m%d%H%M%S"),".csv")
                    copy(TRACE2.P5_INF_SEP_NAO_EXP,tArquivoEmailErro)
                    close(TRACE2.P5_INF_SEP_NAO_EXP)
                    close(tArquivoEmailErro)
                    tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_P5_INF_SEP_NAO_EXP")
                    tNameEMAIL := build("P5_INF_SEP_NAO_EXP_",time("now","%Y%m%d%H%M%S"),".csv")
                    tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL,"  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
                    log("executing command ",tCmdEmailErro,NL)
                    nRet := system(tCmdEmailErro)
                    close(tArquivoEmailErro)				
                    remove(tArquivoEmailErro)
                else
                    remove(tArquivoEmailErro)
                    tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/P5_INF_SEP_NAO_EXP_",time("now","%Y%m%d%H%M%S"),".txt")

                    print("***Informações de P5 INF SEP NAO EXP no Dia***",NL,NL,"***Não há dados para emissão do arquivo***",NL,NL,"Processo gerado automaticamente, não utilize a opção responder a este remetente.",NL,NL) >> tArquivoEmailErro
                    close(tArquivoEmailErro)

                    tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_P5_INF_SEP_NAO_EXP")
                    tNameEMAIL := build("P5_INF_SEP_NAO_EXP_",time("now","%Y%m%d%H%M%S"),".txt")
                    tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL," EMAIL.CONTENTID=text/plain EMAIL.DISPOSITION=inline  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
                    log("executing command ",tCmdEmailErro,NL)
                    nRet := system(tCmdEmailErro)
                    close(tArquivoEmailErro)				
                    remove(tArquivoEmailErro)
                endif
            endif

        !==============================================================================		

		!==============================================================================
		!SALDO_ESTQ_RESUMIDO
				
            tQuery := build("SELECT  GL.CODPRO CODIGO",NL," "\
                            "       ,CASE WHEN GL.CODLOT = '' THEN 'NOLOT'  ELSE GL.CODLOT END         AS LOTE",NL," "\
                            "       ,GP.DS1PRO DESCRICAO",NL," "\
                            "       ,REPLACE(CAST(SUM (GL.UVCSTO/GL.PCBPRO) AS NUMERIC(15,2)),'.',',') AS SALDO",NL," "\
                            "FROM FGE50FM",tToInfologPrefixFilename,".GEPAL GL",NL," "\
                            "JOIN FGE50FM",tToInfologPrefixFilename,".GEPRO GP",NL," "\
                            "ON GL.CODPRO = GP.CODPRO",NL," "\
                            "WHERE GL.CODACT = '",tCODACTLido,"'",NL," "\
                            "AND GL.ETAPAL <> '60'",NL," "\
                            "GROUP BY  GL.CODPRO",NL," "\
                            "         ,GL.CODLOT",NL," "\
                            "         ,GP.DS1PRO",NL," "\
                            "ORDER BY 1, 2 ")

            if bFazP5 = TRUE then

                log("------------------------------------------------------------", NL)
                log(tQuery,NL)
                log("------------------------------------------------------------", NL)

                if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                bQueryTemResul := FALSE
                while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
                    if bQueryTemResul = FALSE then
                        bQueryTemResul := TRUE
                        print("CODIGO;LOTE;DESCRICAO;SALDO;",NL) >> TRACE2.SALDO_ESTQ_RESUMIDO
                    endif
                    print(peel(taDb2Array["CODIGO"]," "),";", \
                        peel(taDb2Array["LOTE"]," "),";", \
                        peel(taDb2Array["DESCRICAO"]," "),";", \
                        peel(taDb2Array["SALDO"]," "),";",NL) >> TRACE2.SALDO_ESTQ_RESUMIDO

                    remove(taDb2Array)
                endwhile

                if bQueryTemResul = FALSE then
                    print("Consulta não retornou resultados",NL) >> TRACE2.SALDO_ESTQ_RESUMIDO
                endif

                close(TRACE2.SALDO_ESTQ_RESUMIDO)

                if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
                    bfSqlErro()
                    exit(1)
                endif

                if bQueryTemResul = TRUE then
                    remove(tArquivoEmailErro)
                    tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/SALDO_ESTQ_RESUMIDO_",time("now","%Y%m%d%H%M%S"),".csv")
                    copy(TRACE2.SALDO_ESTQ_RESUMIDO,tArquivoEmailErro)
                    close(TRACE2.SALDO_ESTQ_RESUMIDO)
                    close(tArquivoEmailErro)
                    tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_SALDO_ESTQ_RESUMIDO")
                    tNameEMAIL := build("SALDO_ESTQ_RESUMIDO_",time("now","%Y%m%d%H%M%S"),".csv")
                    tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL,"  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
                    log("executing command ",tCmdEmailErro,NL)
                    nRet := system(tCmdEmailErro)
                    close(tArquivoEmailErro)				
                    remove(tArquivoEmailErro)
                else
                    remove(tArquivoEmailErro)
                    tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/SALDO_ESTQ_RESUMIDO_",time("now","%Y%m%d%H%M%S"),".txt")

                    print("***Informações de P5 INF SEP NAO EXP no Dia***",NL,NL,"***Não há dados para emissão do arquivo***",NL,NL,"Processo gerado automaticamente, não utilize a opção responder a este remetente.",NL,NL) >> tArquivoEmailErro
                    close(tArquivoEmailErro)

                    tSubjectEmail := build("[",tPrefixoSubjectEmail,"]_SALDO_ESTQ_RESUMIDO")
                    tNameEMAIL := build("SALDO_ESTQ_RESUMIDO_",time("now","%Y%m%d%H%M%S"),".txt")
                    tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameEMAIL," EMAIL.CONTENTID=text/plain EMAIL.DISPOSITION=inline  EMAIL.RCPT=",replace(replace(tTOEMAILp5," ",""),";",",")," EMAIL.CC=",replace(replace(tCCEMAILp5," ",""),";",",")," EmailP5 ",tArquivoEmailErro)
                    log("executing command ",tCmdEmailErro,NL)
                    nRet := system(tCmdEmailErro)
                    close(tArquivoEmailErro)				
                    remove(tArquivoEmailErro)
                endif
            endif

		!==============================================================================

		if bFazBatimento = TRUE then
			bfMajtrace("Recebida","0",build(tPlacaVeiculo,"-",tRomaneio),tDataDocumento,tFileInput,tFileOut,"Produtos","")
		endif

		if bFazP5 = TRUE then
			bfMajtrace2("Recebida","0",build(tPlacaVeiculo,"-",tRomaneio),tDataDocumento,tFileInput,tFileOut,"Produtos","")
		endif
	endif
endline

!==============================================================================

! Default statements section
default

enddefault

!==============================================================================

! End statements section

end
	if tCODACTLido = "MAC" and bTem9070 then
		!BYPASS INICIO
			tQuery := build("SELECT  '90'                                                  AS CODEXC",NL," "\
							"        ,'.'                                                  AS SEPEXC",NL," "\
							"        ,'70'                                                 AS SCOEXC",NL," "\
							"        ,''                                                   AS TRTEXC",NL," "\
							"        ,E.CODPAL",NL," "\
							"        ,E.CODACT",NL," "\
							"        ,''                                                   AS CODCLI",NL," "\
							"        ,D.CODPRO",NL," "\
							"        ,DIGITS(D.VALPRO)                                     AS VALPRO",NL," "\
							"        ,'0'                                                  AS NATPRO",NL," "\
							"        ,CASE COALESCE(B.MOTIMM,'') ",NL," "\
							"        	WHEN '' THEN D.MOTIMM ELSE B.MOTIMM END 		   AS MOTIMM",NL," "\
							"        ,'99999999'                                           AS DATIMM1",NL," "\
							"        ,'99999999'                                           AS DATIMM2",NL," "\
							"        ,'1'                                                  AS TOPEDI",NL," "\
							"        ,MIN(D.DATFVI)										   AS DATFVI",NL," "\
							"        ,D.CODLOT",NL," "\
							"        ,'000000000'                                          AS UVCSTO",NL," "\
							"        ,'000000000'                                          AS UVCDES",NL," "\
							"        ,'0'                                                  AS INDENC",NL," "\
							"        ,'0'                                                  AS STOKAI",NL," "\
							"        ,'1'                                                  AS TOPREC",NL," "\
							"        ,'000'                                                AS SITPAL",NL," "\
							"        ,DIGITS(D.PCBPRO)                                     AS PCBPRO",NL," "\
							"        ,DIGITS(D.SPCPRO)                                     AS SPCPRO",NL," "\
							"        ,E.MAJDAT                                             AS DATMVT",NL," "\
							"        ,E.MAJHMS                                             AS HEUMVT",NL," "\
							"        ,'+'                                                  AS SENMVT",NL," "\
							"        ,'00000000'                                           AS DATLIB",NL," "\
							"        ,'10'                                                 AS ETAPAL",NL," "\
							"        ,'000'                                                AS ALLSTS",NL," "\
							"        ,'0'                                                  AS ZONSTS",NL," "\
							"        ,'0000'                                               AS DPLSTS",NL," "\
							"        ,'00'                                                 AS NIVSTS",NL," "\
							"        ,''                                                   AS INDPRO",NL," "\
							"        ,'1'                                                  AS IMOCOM",NL," "\
							"        ,''                                                   AS MOTIMM2",NL," "\
							"        ,DIGITS(SUM(CAST((D.PDBCOL/D.PCBPRO)*D.UVCLIV AS INTEGER))) AS PDBPAL",NL," "\
							"        ,'000000000'                                          AS UVCKAI",NL," "\
							"        ,''                                                   AS CODRGT",NL," "\
							"        ,( SELECT  DATHIS",NL," "\
							"			 FROM FGE50FM",tToInfologPrefixFilename,".GEHSUP AS H",NL," "\
							"			 WHERE H.NUMSUP = E.NUMSUP",NL," "\
							"			 AND ETASUP = 30 FETCH FIRST ROW ONLY)	           AS DTRREC",NL," "\
							" 		,D.MESPRO ",NL," "\
							" 		,'' AS DISEXC ",NL," "\
							" 		,( SELECT  LPAD(HEUHIS,6,'0')",NL," "\
							"			 FROM FGE50FM",tToInfologPrefixFilename,".GEHSUP AS H",NL," "\
							"			 WHERE H.NUMSUP = E.NUMSUP",NL," "\
							"			 AND ETASUP = 30 FETCH FIRST ROW ONLY)             AS HERREC ",NL," "\
							" 		,TRIM(RUB.LIBVAL)                                      AS LIBIMO",NL," "\
							" 		,D.DS1PRO",NL," "\
							" 		,D.DS2PRO",NL," "\
							" 		,SUM(D.UVCLIV)                                         AS UVCSUP",NL," "\
							"FROM FGE50FM",tToInfologPrefixFilename,".GESUPE AS E",NL," "\
							"JOIN FGE50FM",tToInfologPrefixFilename,".GESUPD AS D",NL," "\
							"ON D.NUMSUP = E.NUMSUP AND E.CODACT = '",tCODACTLido,"' ",NL," "\
							"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEBKLD AS B ",NL," "\
							"ON E.CODPAL = B.CODPAL",NL," "\
							"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRU AS IMO ",NL," "\
							"ON IMO.CODRUB = 'STAG' AND IMO.VALCLE = CASE ",NL," "\
							"	 				CASE COALESCE(B.MOTIMM,'') ",NL," "\
							"	 					WHEN '' THEN D.MOTIMM ELSE B.MOTIMM END",NL," "\
							"	 				WHEN ''	THEN 'AVL'",NL," "\
							"	 				ELSE ",NL," "\
							"	 				CASE COALESCE(B.MOTIMM,'') ",NL," "\
							"	 					WHEN '' THEN D.MOTIMM ELSE B.MOTIMM END ",NL," "\
							"	 			END",NL," "\
							"LEFT JOIN FGE50FM",tToInfologPrefixFilename,".GEZZRI AS RUB ",NL," "\
							" ON IMO.VALRUB = RUB.VALRUB",NL," "\
							"WHERE E.TYPSUP = '1' AND E.ETASUP IN ('30', '40') AND D.UVCLIV > 0",NL," "\
							"GROUP BY  E.CODPAL",NL," "\
							"          ,E.CODACT",NL," "\
							"          ,D.CODPRO",NL," "\
							"          ,D.VALPRO",NL," "\
							"          ,CASE COALESCE(B.MOTIMM,'') ",NL," "\
							"				WHEN '' THEN D.MOTIMM ELSE B.MOTIMM END",NL," "\
							"          ,D.CODLOT",NL," "\
							"          ,D.PCBPRO",NL," "\
							"          ,D.SPCPRO",NL," "\
							"          ,E.MAJDAT",NL," "\
							"          ,E.MAJHMS",NL," "\
							"          ,( SELECT  DATHIS",NL," "\
							"			 FROM FGE50FM",tToInfologPrefixFilename,".GEHSUP AS H",NL," "\
							"			 WHERE H.NUMSUP = E.NUMSUP",NL," "\
							"			 AND ETASUP = 30 FETCH FIRST ROW ONLY)",NL," "\
							"		  ,D.MESPRO",NL," "\
							"		  ,( SELECT  LPAD(HEUHIS,6,'0')",NL," "\
							"			 FROM FGE50FM",tToInfologPrefixFilename,".GEHSUP AS H",NL," "\
							"			 WHERE H.NUMSUP = E.NUMSUP",NL," "\
							"			 AND ETASUP = 30 FETCH FIRST ROW ONLY)",NL," "\
							"		  ,TRIM(RUB.LIBVAL)",NL," "\
							"		  ,D.DS1PRO",NL," "\
							"		  ,D.DS2PRO ORDER BY 5")
			
			log("------------------------------------------------------------", NL)
			log(tQuery,NL)
			log("------------------------------------------------------------", NL)

			if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
				bfSqlErro()
				exit(1)
			endif

			if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
				bfSqlErro()
				exit(1)
			endif

			nQueryResult_BP := 0
			while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
				nQueryResult_BP++
				taCODEXC_BP[nQueryResult_BP] := peel(taDb2Array["CODEXC"]," ")
				taSEPEXC_BP[nQueryResult_BP] := peel(taDb2Array["SEPEXC"]," ")
				taSCOEXC_BP[nQueryResult_BP] := peel(taDb2Array["SCOEXC"]," ")
				taTRTEXC_BP[nQueryResult_BP] := peel(taDb2Array["TRTEXC"]," ")
				taCODPAL_BP[nQueryResult_BP] := peel(taDb2Array["CODPAL"]," ")
				taCODACT_BP[nQueryResult_BP] := peel(taDb2Array["CODACT"]," ")
				taCODCLI_BP[nQueryResult_BP] := peel(taDb2Array["CODCLI"]," ")
				taCODPRO_BP[nQueryResult_BP] := peel(taDb2Array["CODPRO"]," ")
				taVALPRO_BP[nQueryResult_BP] := peel(taDb2Array["VALPRO"]," ")
				taNATPRO_BP[nQueryResult_BP] := peel(taDb2Array["NATPRO"]," ")
				taMOTIMM_BP[nQueryResult_BP] := peel(taDb2Array["MOTIMM"]," ")
				taDATIMM1_BP[nQueryResult_BP] := peel(taDb2Array["DATIMM1"]," ")
				taDATIMM2_BP[nQueryResult_BP] := peel(taDb2Array["DATIMM2"]," ")
				taTOPEDI_BP[nQueryResult_BP] := peel(taDb2Array["TOPEDI"]," ")
				taDATFVI_BP[nQueryResult_BP] := peel(taDb2Array["DATFVI"]," ")
				taCODLOT_BP[nQueryResult_BP] := peel(taDb2Array["CODLOT"]," ")
				taUVCSTO_BP[nQueryResult_BP] := peel(taDb2Array["UVCSTO"]," ")
				taUVCDES_BP[nQueryResult_BP] := peel(taDb2Array["UVCDES"]," ")
				taINDENC_BP[nQueryResult_BP] := peel(taDb2Array["INDENC"]," ")
				taSTOKAI_BP[nQueryResult_BP] := peel(taDb2Array["STOKAI"]," ")
				taTOPREC_BP[nQueryResult_BP] := peel(taDb2Array["TOPREC"]," ")
				taSITPAL_BP[nQueryResult_BP] := peel(taDb2Array["SITPAL"]," ")
				taPCBPRO_BP[nQueryResult_BP] := peel(taDb2Array["PCBPRO"]," ")
				taSPCPRO_BP[nQueryResult_BP] := peel(taDb2Array["SPCPRO"]," ")
				taSENMVT_BP[nQueryResult_BP] := peel(taDb2Array["SENMVT"]," ")
				taDATLIB_BP[nQueryResult_BP] := peel(taDb2Array["DATLIB"]," ")
				taETAPAL_BP[nQueryResult_BP] := peel(taDb2Array["ETAPAL"]," ")
				taALLSTS_BP[nQueryResult_BP] := peel(taDb2Array["ALLSTS"]," ")
				taZONSTS_BP[nQueryResult_BP] := peel(taDb2Array["ZONSTS"]," ")
				taDPLSTS_BP[nQueryResult_BP] := peel(taDb2Array["DPLSTS"]," ")
				taNIVSTS_BP[nQueryResult_BP] := peel(taDb2Array["NIVSTS"]," ")
				taINDPRO_BP[nQueryResult_BP] := peel(taDb2Array["INDPRO"]," ")
				taIMOCOM_BP[nQueryResult_BP] := peel(taDb2Array["IMOCOM"]," ")
				taMOTIMM2_BP[nQueryResult_BP] := peel(taDb2Array["MOTIMM2"]," ")
				taPDBPAL_BP[nQueryResult_BP] := peel(taDb2Array["PDBPAL"]," ")
				taUVCKAI_BP[nQueryResult_BP] := peel(taDb2Array["UVCKAI"]," ")
				taCODRGT_BP[nQueryResult_BP] := peel(taDb2Array["CODRGT"]," ")
				taDTRREC_BP[nQueryResult_BP] := peel(taDb2Array["DTRREC"]," ")
				taMESPRO_BP[nQueryResult_BP] := peel(taDb2Array["MESPRO"]," ")
				taDISEXC_BP[nQueryResult_BP] := peel(taDb2Array["DISEXC"]," ")
				taDATMVT_BP[nQueryResult_BP] := peel(taDb2Array["DATMVT"]," ")
				taHEUMVT_BP[nQueryResult_BP] := peel(taDb2Array["HEUMVT"]," ")
				taHERREC_BP[nQueryResult_BP] := peel(taDb2Array["HERREC"]," ")
				taDS1PRO_BP[nQueryResult_BP] := peel(taDb2Array["DS1PRO"]," ")
				taDS2PRO_BP[nQueryResult_BP] := peel(taDb2Array["DS2PRO"]," ")
				taDS3PRO_BP[nQueryResult_BP] := peel(taDb2Array["DS3PRO"]," ")
				taUVCSUP_BP[nQueryResult_BP] := peel(taDb2Array["UVCSUP"]," ")
				remove(taDb2Array)
			endwhile

			if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
				bfSqlErro()
				exit(1)
			endif

			nCountWhile_BP := 0
			while nCountWhile_BP < nQueryResult_BP then
				nCountWhile_BP++
				R_GEEX9070_BP_CODEXC(taCODEXC_BP[nCountWhile_BP])
				R_GEEX9070_BP_SEPEXC(taSEPEXC_BP[nCountWhile_BP])
				R_GEEX9070_BP_SCOEXC(taSCOEXC_BP[nCountWhile_BP])
				R_GEEX9070_BP_TRTEXC(taTRTEXC_BP[nCountWhile_BP])
				R_GEEX9070_BP_CODPAL(taCODPAL_BP[nCountWhile_BP])
				R_GEEX9070_BP_CODACT(taCODACT_BP[nCountWhile_BP])
				R_GEEX9070_BP_CODCLI(taCODCLI_BP[nCountWhile_BP])
				R_GEEX9070_BP_CODPRO(taCODPRO_BP[nCountWhile_BP])
				R_GEEX9070_BP_VALPRO(taVALPRO_BP[nCountWhile_BP])
				R_GEEX9070_BP_NATPRO(taNATPRO_BP[nCountWhile_BP])
				if length(taMOTIMM_BP[nCountWhile_BP]) = 0 then
					R_GEEX9070_BP_MOTIMM("REA")
					R_GEEX9070_BP_LIBIMO("Released")
				else
					R_GEEX9070_BP_MOTIMM(taMOTIMM_BP[nCountWhile_BP])
					R_GEEX9070_BP_LIBIMO(taLIBIMO_BP[peel(taMOTIMM_BP[nCountWhile_BP]," ")])
				endif
				R_GEEX9070_BP_DATIMM1(taDATIMM1_BP[nCountWhile_BP])
				R_GEEX9070_BP_DATIMM2(taDATIMM2_BP[nCountWhile_BP])
				R_GEEX9070_BP_TOPEDI(taTOPEDI_BP[nCountWhile_BP])
				R_GEEX9070_BP_DATFVI(taDATFVI_BP[nCountWhile_BP])
				R_GEEX9070_BP_CODLOT(taCODLOT_BP[nCountWhile_BP])
				R_GEEX9070_BP_UVCSTO(taUVCSTO_BP[nCountWhile_BP])
				R_GEEX9070_BP_UVCDES(taUVCDES_BP[nCountWhile_BP])
				R_GEEX9070_BP_INDENC(taINDENC_BP[nCountWhile_BP])
				R_GEEX9070_BP_STOKAI(taSTOKAI_BP[nCountWhile_BP])
				R_GEEX9070_BP_TOPREC(taTOPREC_BP[nCountWhile_BP])
				R_GEEX9070_BP_SITPAL(taSITPAL_BP[nCountWhile_BP])
				R_GEEX9070_BP_PCBPRO(taPCBPRO_BP[nCountWhile_BP])
				R_GEEX9070_BP_SPCPRO(taSPCPRO_BP[nCountWhile_BP])
				R_GEEX9070_BP_SENMVT(taSENMVT_BP[nCountWhile_BP])
				R_GEEX9070_BP_DATLIB(taDATLIB_BP[nCountWhile_BP])
				R_GEEX9070_BP_ETAPAL(taETAPAL_BP[nCountWhile_BP])
				R_GEEX9070_BP_ALLSTS(taALLSTS_BP[nCountWhile_BP])
				R_GEEX9070_BP_ZONSTS(taZONSTS_BP[nCountWhile_BP])
				R_GEEX9070_BP_DPLSTS(taDPLSTS_BP[nCountWhile_BP])
				R_GEEX9070_BP_NIVSTS(taNIVSTS_BP[nCountWhile_BP])
				R_GEEX9070_BP_INDPRO(taINDPRO_BP[nCountWhile_BP])
				R_GEEX9070_BP_IMOCOM(taIMOCOM_BP[nCountWhile_BP])
				R_GEEX9070_BP_MOTIMM2(taMOTIMM2_BP[nCountWhile_BP])
				R_GEEX9070_BP_PDBPAL(taPDBPAL_BP[nCountWhile_BP])
				R_GEEX9070_BP_UVCKAI(taUVCKAI_BP[nCountWhile_BP])
				R_GEEX9070_BP_CODRGT(taCODRGT_BP[nCountWhile_BP])
				R_GEEX9070_BP_DATREC(taDTRREC_BP[nCountWhile_BP])
				R_GEEX9070_BP_MESPRO(taMESPRO_BP[nCountWhile_BP])
				R_GEEX9070_BP_DISEXC(taDISEXC_BP[nCountWhile_BP])
				R_GEEX9070_BP_DATMVT(taDATMVT_BP[nCountWhile_BP])
				R_GEEX9070_BP_HEUMVT(taHEUMVT_BP[nCountWhile_BP])
				R_GEEX9070_BP_HEUREC(taHERREC_BP[nCountWhile_BP])
				R_GEEX9070_BP_DS1PRO(taDS1PRO_BP[nCountWhile_BP])
				R_GEEX9070_BP_DS2PRO(taDS2PRO_BP[nCountWhile_BP])
				R_GEEX9070_BP_DS3PRO(taDS3PRO_BP[nCountWhile_BP])
				R_GEEX9070_BP_UVCSUP(taUVCSUP_BP[nCountWhile_BP])

				flush(0,0,NL) >> tFileOutTempBP
			endwhile

			R_GEEX9900_CODEXC(tCODEXC_9900)
			R_GEEX9900_SEPEXC(tSEPEXC_9900)
			R_GEEX9900_SCOEXC(tSCOEXC_9900)
			R_GEEX9900_TRTEXC(tTRTEXC_9900)
			R_GEEX9900_EMTEXC(tEMTEXC_9900)
			R_GEEX9900_RCTEXC(tRCTEXC_9900)
			R_GEEX9900_DATEXC(tDATEXC_9900)
			R_GEEX9900_HEUEXC(tHEUEXC_9900)
			R_GEEX9900_NUMEXC(tNUMEXC_9900)
			R_GEEX9900_CPTEXC(tCPTEXC_9900)
			R_GEEX9900_NOMSYS(tNOMSYS_9900)
			R_GEEX9900_NOMDTQ(tNOMDTQ_9900)
			R_GEEX9900_BIBDTQ(tBIBDTQ_9900)
			R_GEEX9900_IDEMSG(tIDEMSG_9900)
			R_GEEX9900_DISEXC(tDISEXC_9900)

			flush(0,0,NL) >> tFileOutTempBP

			! Tratamento final dos arquivos
				close(tFileOutTempBP)
				copy(tFileOutTempBP,tFileOutBP)
				close(tFileOutTempBP)
				remove(tFileOutTemp)
				close(tFileOutBP)

			! Finalizando com TRACE	
				bfMajtraceBP("Recebida", \
								"0", \
								tNumeroDocumento, \
								tDataDocumento, \
								tFileInput, \
								tFileOutBP, \
								"Produtos", \
								"")

			! Enviar interface para o cliente
				bfToInfolog()

		!BYPASS FIM
	endif

	bfSqlClose(tDbBase)

	log("------------------------------------------------------------", NL)
	log("Fim...: ", time("now","%Y-%m-%d %H:%M:%S"), NL)
	log("------------------------------------------------------------", NL)

	exit(0)
endend

!==============================================================================

function bfMajtrace(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
	TRACE.ESTADO := tStatus
	TRACE.ERRO := tError
	TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
	TRACE.MENSAGEM := tTipoDocumento
	TRACE.PERFIL := tBEGINSUBJbat
	TRACE.SENTIDO := tSentido
	TRACE.MENSAGEM := build("BATIMENTO - ",tCODACTLido)
	TRACE.NUMDOC := build("BATIMENTO - ",tCODACTLido)
	TRACE.DATDOC := time("now","%Y-%m-%d")
	TRACE.MESSAGEID := build(nMessageID)
	if pEDISEND.ORIGINAL.NAME <> build(SYSLOG.INDEX) then
		TRACE.REDE := pEDISEND.ORIGINAL.NAME
	else
		TRACE.REDE := "REPROCESSADO"
	endif
	TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
	TRACE.FICHEIROSAIDA := tNameOut

	SYSLOG.REFERENCE := build(nMessageID)

	close(TRACE.Detail)
	close(SYSLOG.a)

	flush(TRACE)

endfunction

!==============================================================================

function bfMajtraceBP(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
    TRACE:=new(build(sHOME,"/trace"))
    TRACE.ESTADO := tStatus
    TRACE.ERRO := tError
    TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
    TRACE.PERFIL := tPerfil
    TRACE.SENTIDO := tSentido
    TRACE.MENSAGEM := tMensagem
    TRACE.NUMDOC := tMensagem
    TRACE.DATDOC := tfConvertDate(build(tData), "YYYYMMDD" , "YYYY-MM-DD") 
    TRACE.MESSAGEID := build(nMessageID:R010)
	if pEDISEND.ORIGINAL.NAME <> build(SYSLOG.INDEX) then
		TRACE.REDE := pEDISEND.ORIGINAL.NAME
	else
		TRACE.REDE := "REPROCESSADO"
	endif
    TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
    TRACE.FICHEIROSAIDA := tNameOutBP

	SYSLOG.REFERENCE := build(nMessageID)

	if tError = "0" then
		print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
		print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
		print("Traduzida com Sucesso",NL) >> TRACE.Detail
	else
		if tError = "1" then
			print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
			print("Erro de Traducao",NL) >> TRACE.Detail
			print(tMensagemErro,NL) >> TRACE.Detail
		endif
	endif

    close(TRACE.Detail)
    close(SYSLOG.a)

    if nMainIndex = 0 then
        copy(SYSLOG.a,TRACE.In)
        close(SYSLOG.a)
        close(TRACE.In)
        nMainIndex := TRACE.INDEX
    else
        tCmd := build("ln -s ", sHOME, "/trace/files/In/", nMainIndex, " ", TRACE.In)
        system(tCmd)
    endif

		close(tFileOutTempBP)
		copy(tFileOutTempBP,TRACE.Out)
		close(tFileOutTempBP)
		close(TRACE.Out)
		remove(tFileOutTempBP)

    flush(TRACE)
endfunction

!==============================================================================

function bfMajtrace2(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
	TRACE2.ESTADO := tStatus
	TRACE2.ERRO := tError
	TRACE2.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
	TRACE2.MENSAGEM := tTipoDocumento
	TRACE2.PERFIL := tBEGINSUBJp5
	TRACE2.SENTIDO := tSentido
	TRACE2.MENSAGEM := build("P5 – ESTOQUE OFICIAL WMS - ",tCODACTLido)
	TRACE2.NUMDOC := build("P5 – ESTOQUE OFICIAL WMS - ",tCODACTLido)
	TRACE2.DATDOC := time("now","%Y-%m-%d")
	TRACE2.MESSAGEID := build(nMessageID)
	if pEDISEND.ORIGINAL.NAME <> build(SYSLOG.INDEX) then
		TRACE2.REDE := pEDISEND.ORIGINAL.NAME
	else
		TRACE2.REDE := "REPROCESSADO"
	endif
	TRACE2.SYSLOG_INDEX := build(SYSLOG.INDEX)
	TRACE2.FICHEIROSAIDA := tArquivoEmailSentinel

	SYSLOG.REFERENCE := build(nMessageID)

	close(TRACE2.Detail)
	close(SYSLOG.a)

	flush(TRACE2)

endfunction

!==============================================================================

function bfMajtraceM06(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
	TRACE:=new(build(sHOME,"/trace"))
	TRACE.ESTADO := tStatus
	TRACE.ERRO := tError
	TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
	TRACE.PERFIL := "MARS CAJAMAR"
	TRACE.SENTIDO := "I"
	TRACE.MENSAGEM := "SHELF LIFE"
	TRACE.NUMDOC := "MARS CAJAMAR"
	TRACE.DATDOC := tDataDoc
	TRACE.MESSAGEID := build(nMessageID)
	if pEDISEND.ORIGINAL.NAME <> build(SYSLOG.INDEX) then
		TRACE.REDE := pEDISEND.ORIGINAL.NAME
	else
		TRACE.REDE := "REPROCESSADO"
	endif
	TRACE.FICHEIROSAIDA := tNameOutM06
	TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)

	SYSLOG.REFERENCE := build(nMessageID)

	if tStatus = "Recebida" then
		print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
		print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
		print("Traduzida com Sucesso",NL) >> TRACE.Detail
	else
		if tStatus = "Erro de Traducao" then
			print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
			print("Erro de Traducao",NL) >> TRACE.Detail
			print(tMensagemErrro,NL) >> TRACE.Detail
		endif
	endif
	close(TRACE.Detail)
	close(SYSLOG.a)

	if nMainIndex = 0 then
		copy(SYSLOG.a,TRACE.In)
		close(SYSLOG.a)
		close(TRACE.In)

		nMainIndex := TRACE.INDEX
	else
		tCmd := build("ln -s ", sHOME, "/trace/files/In/", nMainIndex, " ", TRACE.In)
		system(tCmd)
	endif

	copy(tFileOutM06,TRACE.Out)
	close(tFileOutM06)
	close(TRACE.Out)
	flush(TRACE)
endfunction

!==============================================================================

function bfSqlErro()
    print("FATAL: ",tfSqlErrorStr())
    bfMajtrace(	"Erro de Traducao" \
                ,"1" \
                ,tNumeroDocumento \
                ,tDataDocumento \
                ,tFileInput \
                ,tFileOut \
                ,tMensagem \
                ,build("Erro no banco de dados: ",tfSqlErrorStr()))     
endfunction

!==============================================================================

function bfToInfolog()

	tCmd := build("edisend ToInfolog ", tFileOut)
	log("executando o comando - ", tCmd, NL)
	system(tCmd)

endfunction

!==============================================================================
