%@(#) $Id:  M41_HASBRO_OUT.rte,v 1.2 2020/04/23 17:02:20 gmt Exp $
!===========================================================================================================
% File         : $RCSfile: M41_HASBRO_OUT.rte $   $Revision: 1.2 $
!-----------------------------------------------------------------------------------------------------------
% Description   : M41_HASBRO_OUT
!-----------------------------------------------------------------------------------------------------------
% Author        : GMT - GENERIX BR
!===========================================================================================================
! 2020/04/23 GMT 1.2 Creation
!===========================================================================================================
!
! M41_HASBRO_OUT
!
!===========================================================================================================

!base "syslog.cfg" SYSLOG
base "../trace/trace.cfg" TRACE,autoflush off
base "../fmbrasil_clientespedloreal/fmbrasil_clientespedloreal.cfg" fmbrasil_clientespedloreal
base "../fmbrasil_consolidacao_m40hasbro/fmbrasil_consolidacao_m40hasbro.cfg" fmbrasil_consolidacao_m40hasbro,autoflush off
base "../fmbrasil_consolidacao_m40hasbro/fmbrasil_consolidacao_m40hasbro.cfg" fmbrasil_consolidacao_m40hasbrolinhas,autoflush off
base "../fmbrasil_confrec_email_hasbro/fmbrasil_confrec_email_hasbro.cfg" fmbrasil_confrec_email_hasbro
!===========================================================

! Input/output macros file
#define PROG_NAME "$RCSfile: $"
#define PROG_VER  "$Revision: $"
#define PROG_DATE "$Date: $"
#define PROG_INFO build(PROG_NAME,PROG_VER,PROG_DATE)
#define TX_PROG_INFO build(PROG_NAME,PROG_VER,PROG_DATE)


#include "include/generix_func.inc"
#include "include/M41.inc"
#include "include/M41_CSV_PALETE.inc"
#include "include/ERPFMviaCSV.inc"
#include "include/HASBROCRINV.inc"
#include "include/M41_CSV_HASBRO.inc"

!===========================================================

! Initialization section

begin

   nPos := 1
    nRec := 1
    SYSLOG := find(sSYSLOG,INDEX=number(pINDEX))
    nMessageID := cMessageID
    

 load (0, build(sHOME,"/config/FM_wms_configuration.properties"), taPARAM)

        tToInfologPrefixFilename := taPARAM["ToInfologPrefixFilenameHASBRO"]
 
    
    tCODACTConst := "001"
    nContadorLinhasEscritas  := 0
    
nMainIndex := 0




		
    	tDbBase			:= "FMWMS"
	tDbUsername		:= taPARAM["WMSDBUSER"]
	tDbPassword		:= taPARAM["WMSDBPASS"]
	tDbUrl			:= taPARAM["WMSDBURL"]
	
	

   
   	
    	tDbBase			:= "FMWMS"
	tDbUsername		:= taPARAM["WMSDBUSER"]
	tDbPassword		:= taPARAM["WMSDBPASS"]
	tDbUrl			:= taPARAM["WMSDBURL"]
	
	
	
bfSqlInit()
   if not bfSqlJdbc(tDbBase , tDbUsername,tDbPassword,tDbUrl) then
      print("FATAL ",tfSqlErrorStr())
      bfSqlClose(tDbBase)
	  bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na abertura do banco de dados: ",tfSqlErrorStr()))
		
      exit(1)
   endif
endbegin

!===========================================================




line(1:"00.00")
 !  tCentroCusto := S_00HEADER_EDISIT
nContadorHEADERCPK := 0
endline

line(1:"41.00")
tDIPREC := ""
nResultadosQueryPEDIND := 0
nContadorRegisto := 0
tKAIREC := S_4100HEADER_KAIREC
tCODTRA := S_4100HEADER_CODTRA

tNumeroLoja := "00092"
       
tCODACTLido := S_4100HEADER_CODACT   
	tCODFOU  := S_4100HEADER_CODFOU 


	tPlacaVeiculo := substr(S_4100HEADER_REFREC,1,7)
	tRomaneio := peel(substr(S_4100HEADER_REFREC,8,18)," ")
	tNumeroDocumento := S_4100HEADER_REFREC
	
	tData := S_4100HEADER_DTRREC
	tHora := S_4100HEADER_HERREC

	nLinha := 0
	nConta4120 := 0
	nConta4130 := 0
	nConta4180 := 0
   

   
   tCODTRE := S_4100HEADER_CODTRE
   tNUMREC :=  S_4100HEADER_NUMREC
   
endline

line(1:"41.01")
	tDIPREC := S_4101TRANSACTION_DIPREC
endline

line(1:"41.02")
	tMsgrec4102 := build(S_GEEX4102_MSGREC)
endline

line(1:"41.20")
 

	nConta4120++ 
	taNUMOPE[nConta4120] := S_4120ORDERLINE_NUMOPE
	
	taNLIREC4120[nConta4120] := S_4120ORDERLINE_NLIREC
	taCODPRO4120[nConta4120] := S_4120ORDERLINE_CODPRO
	taUNICDE4120[nConta4120] := S_4120ORDERLINE_UNICDE
	taUVCREA4120[nConta4120] := S_4120ORDERLINE_UVCREA
	taUVCREC4120[nConta4120] := S_4120ORDERLINE_UVCREC
	taUVCMVT4120[nConta4120] := "0"
	taUVCMVT4120Bloqueada[nConta4120] := "0"
	
	taRECSOL4120[nConta4120] := S_4120ORDERLINE_RECSOL
	taCODACR4120[nConta4120] := S_4120ORDERLINE_CODACR



endline


line(1:"41.21")
	taDIPREC4121[nConta4120] := S_4121ORDERLINE_COMPLEMENT_DIPREC
endline


line(1:"41.30")
	
	
	if S_4130ORDERLINE_DETAIL_MOTIMM = "AF" or  S_4130ORDERLINE_DETAIL_MOTIMM = "AT" then
		taUVCMVT4120[nConta4120] := build(number(taUVCMVT4120[nConta4120])+number(S_4130ORDERLINE_DETAIL_UVCMVT))
	endif
	
	if S_4130ORDERLINE_DETAIL_MOTIMM = "GB" or  S_4130ORDERLINE_DETAIL_MOTIMM = "NB" or  S_4130ORDERLINE_DETAIL_MOTIMM = "RW" or  S_4130ORDERLINE_DETAIL_MOTIMM = "NI" or  S_4130ORDERLINE_DETAIL_MOTIMM = "TB" then
		taUVCMVT4120Bloqueada[nConta4120] := build(number(taUVCMVT4120Bloqueada[nConta4120])+number(S_4130ORDERLINE_DETAIL_UVCMVT))
	endif
	
	
	nConta4130++ 
	/*
	CODPAL
CODPRO
UVCMVT
CODLOT

	
	*/
	taNLIREC4130[nConta4130] := S_4130ORDERLINE_DETAIL_NLIREC
	taCODLOT4130[nConta4130] := S_4130ORDERLINE_DETAIL_CODLOT
	taCODPAL4130[nConta4130] := S_4130ORDERLINE_DETAIL_CODPAL
	taCODPRO4130[nConta4130] := S_4130ORDERLINE_DETAIL_CODPRO
	taUVCMVT4130[nConta4130] := S_4130ORDERLINE_DETAIL_UVCMVT
	
	
	taNUMOPE4130_do_4120[nConta4130] := taNUMOPE[nConta4120]
	taZONSTS4130[nConta4130] := S_4130ORDERLINE_DETAIL_ZONSTS
	taALLSTS4130[nConta4130] := S_4130ORDERLINE_DETAIL_ALLSTS
	taDPLSTS4130[nConta4130] := S_4130ORDERLINE_DETAIL_DPLSTS
	taNIVSTST4130[nConta4130] := S_4130ORDERLINE_DETAIL_NIVSTS
	taDATFVI4130[nConta4130] := S_4130ORDERLINE_DETAIL_DATFVI
 taUNICDE4130_do_4120[nConta4130] := taUNICDE4120[nConta4120]
	taUVCREA4130_do_4120[nConta4130] := taUVCREA4120[nConta4120]
			taUVCREC4130_do_4120[nConta4130] := taUVCREC4120[nConta4120]
	taMOTIMM4130[nConta4130] := S_4130ORDERLINE_DETAIL_MOTIMM
	

endline




line(1:"41.80")
	 

	tCodigoEmb := S_4180_PROEMB
	

endline




line(1:"41.99")
bFezHeader := FALSE
remove(taNumSerie)
split(tNumeroDocumento,taNumSerie,".")

tFileOutCSVDIVERS := build(sHOME,"/EmailsAEnviar/M41_CSV/Recebimento_",tNumeroDocumento,".csv")
			tFileOutTempCSVDIVERS := build(sHOME,"/EmailsAEnviar/M41_CSV/Temp/Recebimento_",tNumeroDocumento,".csv")
			tNameOutCSVDIVERS := build("Recebimento_",tNumeroDocumento,".csv")

			bEscreveuCSVDIVERS := FALSE
		
		
		nTotalProdutos := 0
		
	if tCODTRE = "RT" then	
	
	
		! inicio
		! percorrer todos os m41.20 e ver todos os produtos
		
		
		nTempConta4120 := 1
		   while nTempConta4120 <= nConta4120 do
		   
				   

				   naQtdProdutoNaNF4120[taCODPRO4120[nTempConta4120]] := number(taUVCREA4120[nTempConta4120])
				   naQtdEfetiva_Recebida4120[taCODPRO4120[nTempConta4120]] := number(taUVCREC4120[nTempConta4120])
				   naQuantidadeAvariada4120[taCODPRO4120[nTempConta4120]] := number(taUVCMVT4120[nTempConta4120])
				   naQuantidadeBloqueada4120[taCODPRO4120[nTempConta4120]] := number(taUVCMVT4120Bloqueada[nTempConta4120])
				   
				   naTOTALQtdProdutoNaNF4120[taCODPRO4120[nTempConta4120]] := number(taUVCREA4120[nTempConta4120])
				   naTOTALQtdEfetiva_Recebida4120[taCODPRO4120[nTempConta4120]] := number(taUVCREC4120[nTempConta4120])
				   naTOTALQuantidadeAvariada4120[taCODPRO4120[nTempConta4120]] := number(taUVCMVT4120[nTempConta4120])
				   naTOTALQuantidadeBloqueada4120[taCODPRO4120[nTempConta4120]] := number(taUVCMVT4120Bloqueada[nTempConta4120])
				   
				   
				   naContadorNumeroVezesRepeteTab[taCODPRO4120[nTempConta4120]] := 0
				   
				   !percorrer todos os produtos da tabela e contar o numero de vezes que cada codpro se repete
		
					fmbrasil_consolidacao_m40hasbro := find(build(sHOME,"/fmbrasil_consolidacao_m40hasbro"),REFRECDepoisConsolidacao=tNumeroDocumento,CODACT=tCODACTLido,CODPRO=taCODPRO4120[nTempConta4120],CODTRE="RT")aREFRECDepoisConsolidacao
					while valid(fmbrasil_consolidacao_m40hasbro) then
						naContadorNumeroVezesRepeteTab[taCODPRO4120[nTempConta4120]]++
						tUmaQualquerSNF := fmbrasil_consolidacao_m40hasbrolinhas.SNF
						tUmaQualquerNF := fmbrasil_consolidacao_m40hasbrolinhas.NF
				
						fmbrasil_consolidacao_m40hasbro := find()
					endwhile
				   
				  nTempConta4120++
				   
		   endwhile
		
		
		
		
		!quando escrever o arquivo percorrer novamente todos os m41.20 e ver todos os produtos e repartir a quantidade por cada codpro diferente (ver index etc etc)
		
		
		
		
		! fim
	
		
		!faz arquivo a partir da tabela TX com M40 consolidados
			!le para todos os refec com numero de consolidade
				!faz segundo ciclo para linha
				
				
				nNumeroRegTabelaEncontrado := 0
				bFezRegistoZERO := FALSE
				nContadorRegisto := 0
				
				fmbrasil_consolidacao_m40hasbro := find(build(sHOME,"/fmbrasil_consolidacao_m40hasbro"),REFRECDepoisConsolidacao=tNumeroDocumento,CODACT=tCODACTLido,CODTRE="RT")aREFRECDepoisConsolidacao
				while valid(fmbrasil_consolidacao_m40hasbro) then
					nNumeroRegTabelaEncontrado++
					taREFRECOriginal[nNumeroRegTabelaEncontrado] := build(fmbrasil_consolidacao_m40hasbro.NF,".",fmbrasil_consolidacao_m40hasbro.SNF)
					if nNumeroRegTabelaEncontrado=1 or taREFRECOriginal[nNumeroRegTabelaEncontrado] <> taREFRECOriginal[nNumeroRegTabelaEncontrado-1] then
						!faz um M41
						
								
								

						
						if bFezRegistoZERO = FALSE then
							bFezRegistoZERO := TRUE
							bPrimeiroRegistoLinhas := TRUE
							
							nContadorHASBROCRINV := cContadorHASBROCRINV
								nMessageID := cMessageID
								tFileOut := build(sHOME,"/FMBR_AS2/FM",tToInfologPrefixFilename,"HAScrinv1425_",time("now" ,"%Y%m%d"),"_",time("now" ,"%H%M%S"),nContadorHASBROCRINV:R04,".dat")
								tFileOutTemp := build(sHOME,"/FMBR_AS2/Temp/FM",tToInfologPrefixFilename,"HAScrinv1425_",time("now" ,"%Y%m%d"),"_",time("now" ,"%H%M%S"),nContadorHASBROCRINV:R04,".dat")
								tNameOut := build("FM",tToInfologPrefixFilename,"HAScrinv1425_",time("now" ,"%Y%m%d"),"_",time("now" ,"%H%M%S"),nContadorHASBROCRINV:R04,".dat")
							
							 R_CR_recordtype("CR")
							R_CR_filetype("INV")
							R_CR_plant("1425")
							
							
							R_CR_filesequence(build(nContadorHASBROCRINV:R06)) 
							R_CR_filecreatedate(time("now","%y%m%d"))

							R_CR_endoflinemarker("/")
							flush(0,0,NL) >> tFileOutTemp
							
							
							
							
							
							
							!fazer items SURPRESA!!!!!!!!!!!!!
							
							
							nTempConta4120 := 1
							   while nTempConta4120 <= nConta4120 do
									if  naContadorNumeroVezesRepeteTab[taCODPRO4120[nTempConta4120]] = 0 then
										if taRECSOL4120[nTempConta4120] = "1" or	taCODACR4120[nTempConta4120] <> "" then
											!nao escreve a linha
										else
									      R_DETAIL_plant("1425")
											   
											   if tCODTRE = "RT" then
												   R_DETAIL_movementtype("987")
											   endif
											   if tCODTRE = "TR" then
												   R_DETAIL_movementtype("101")
											   endif
											   
											   
											   R_DETAIL_postingdate(tfConvertDate(tData, "YYYYMMDD" , "YYMMDD"))
											   R_DETAIL_materialnumber(taCODPRO4120[nTempConta4120])
												
												R_DETAIL_storagelocation("0001") 
												
												
												R_DETAIL_PORAnumber(taDIPREC4121[nTempConta4120])
												R_DETAIL_PORAlinenumber(build(number(taNLIREC4120[nTempConta4120]):R05))
												R_DETAIL_container(tDIPREC)
												
												R_DETAIL_NFnumber(tUmaQualquerNF)
												R_DETAIL_NotaFiscalNumberSeries(tUmaQualquerSNF)
											   



										   
										   if number(taUVCREA4120[nTempConta4120]) > 0 then
										   R_DETAIL_quantity(build(number(taUVCREA4120[nTempConta4120]):R09))
											nTotalProdutos := nTotalProdutos + number(taUVCREA4120[nTempConta4120])
										   else
											R_DETAIL_quantity(build(0:R09))
										   endif
										   
										   R_DETAIL_endoflinemarker("/")
										   

										   flush(0,0,NL) >> tFileOutTemp
										  
										endif





										!csv ITEMS SURPRESA
										

								
											
									
										 nTempConta4130 := 1
										 while nTempConta4130 <= nConta4130 do
												if taCODPRO4130[nTempConta4130] = taCODPRO4120[nTempConta4120] then
												
												
												
												
												
													
													R_M41CsvDiversReg_NF(tNumeroDocumento)
													R_M41CsvDiversReg_Doca(tKAIREC)
													R_M41CsvDiversReg_Transportadora(tCODTRA)
													R_M41CsvDiversReg_Placa(tMsgrec4102)
													R_M41CsvDiversReg_Motorista("")
													R_M41CsvDiversReg_BL(tNumeroDocumento)
													R_M41CsvDiversReg_Carga("")
													R_M41CsvDiversReg_Operacao(tCODTRE)
													R_M41CsvDiversReg_Data(tfConvertDate(build(tData,tHora,"00"),"YYYYMMDDHHMMSS","DD/MM/AAAA - HH:MM:SS")) !converter para "DD/MM/AAAA - HH:MM:SS"
													R_M41CsvDiversReg_Cliente(tCODACTLido)
												
												
													
												
												
												
												
												R_M41CsvDiversReg_Sequencia(taNLIREC4130[nTempConta4130])
												R_M41CsvDiversReg_SKU(taCODPRO4130[nTempConta4130])
												
												
													tQuery := 	build("SELECT DS1PRO FROM FGE50FM",tToInfologPrefixFilename,".GEPRO WHERE CODPRO='",taCODPRO4130[nTempConta4130],"' AND CODACT='",tCODACTLido,"'")


												

													
													if bfSqlSet( tDbBase ,"SELECTdb2"  , tQuery) = FALSE then
																 print("FATAL ", tfSqlErrorStr())
																 bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
																exit(1)
														
													endif

													if bfSqlOpen( tDbBase , "SELECTdb2" ) = FALSE then
														 print("FATAL ", tfSqlErrorStr())
														  bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
																exit(1)

													endif
													while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
								
														
														tDS1PROQueryCSVPalete := peel(taDb2Array["DS1PRO"]," ")
													
														remove(taDb2Array)

													endwhile
													
													

													if bfSqlFree( tDbBase , "SELECTdb2"  ) = FALSE then
														print("FATAL", tfSqlErrorStr())
														 bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
																exit(1)
													endif
												
												
												R_M41CsvDiversReg_Descricao(tDS1PROQueryCSVPalete) 
												!R_M41CsvDiversReg_Lote(taCODLOT4130[nTempConta4130])
												
												!R_M41CsvDiversReg_Palete(taCODPAL4130[nTempConta4130])
												!R_M41CsvDiversReg_STATUSIMO(taMOTIMM4130[nTempConta4130])
												
												!R_M41CsvDiversReg_Unidade(taUNICDE4130_do_4120[nTempConta4130])
												
												
												
												

												
												tQuery := 	build("SELECT  NLIREC, CODPRO FROM FGE50FM",tToInfologPrefixFilename,".GERECD WHERE NUMREC='",tNUMREC,"' AND NLIREC='",taNLIREC4130[nTempConta4130],"' AND CODPRO='",taCODPRO4130[nTempConta4130],"' AND CODACT='",tCODACTLido,"'")

												log(tQuery,NL)

													
													if bfSqlSet( tDbBase ,"SELECTdb2"  , tQuery) = FALSE then
																 print("FATAL ", tfSqlErrorStr())
																 bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
																exit(1)
														
													endif

													if bfSqlOpen( tDbBase , "SELECTdb2" ) = FALSE then
														 print("FATAL ", tfSqlErrorStr())
														  bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
																exit(1)

													endif
													
													tNLIRECDeterm := ""
													while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
								
														
														tNLIRECDeterm := peel(taDb2Array["NLIREC"]," ")
													
														remove(taDb2Array)

													endwhile
													
													

													if bfSqlFree( tDbBase , "SELECTdb2"  ) = FALSE then
														print("FATAL", tfSqlErrorStr())
														 bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
																exit(1)
													endif
												
												
												if number(tNLIRECDeterm) = 0 then
													R_M41CsvDiversReg_QtdFiscal("0")
												else
													R_M41CsvDiversReg_QtdFiscal(taUVCREA4130_do_4120[nTempConta4130])
												endif
												!R_M41CsvDiversReg_QtdRecebida(taUVCREC4130_do_4120[nTempConta4130])
												R_M41CsvDiversReg_QtdRecebida(taUVCMVT4130[nTempConta4130])
												
												
												
												
												!Quando MOTIMM=AB, AC, AF, AT e AP  - Tipo: AVARIA  
												if taMOTIMM4130[nTempConta4130] = "AC" or taMOTIMM4130[nTempConta4130] = "AM" or taMOTIMM4130[nTempConta4130] = "AT" or taMOTIMM4130[nTempConta4130] = "EA" then
													R_M41CsvDiversReg_Quantidade_IMO_Avaria(taUVCMVT4130[nTempConta4130])
												endif
												
												
												!Quando MOTIMM= GB, NB, RW, NI e TB - Tipo: QUALIDADE
												if taMOTIMM4130[nTempConta4130] = "CQ" then
													R_M41CsvDiversReg_Qtd_IMO_Qualidade(taUVCMVT4130[nTempConta4130])
												endif
												
												
												
												if bPrimeiroRegistoLinhas = TRUE then
														bPrimeiroRegistoLinhas := FALSE
														print("NF;Doca;Transportadora;Placa;Motorista;BL;Carga;Operacao;Data;Cliente;Sequencia;SKU;Descricao;Lote;Palete;\"Status (IMO)\";Unidade;\"Quantidade Fiscal\";\"Quantidade Recebida\";\"Quantidade IMO Avaria\";\"Quantidade IMO Qualidade\"", NL) >> tFileOutTempCSVDIVERS
															 
												endif
												
												print(taM41CsvDiversReg[1],";",taM41CsvDiversReg[2],";",taM41CsvDiversReg[3] \
														,";",taM41CsvDiversReg[4],";",taM41CsvDiversReg[5],";",taM41CsvDiversReg[ \
														6],";",taM41CsvDiversReg[7],";",taM41CsvDiversReg[8],";", \
														taM41CsvDiversReg[9],";",taM41CsvDiversReg[10],";",taM41CsvDiversReg[11],";", \
														taM41CsvDiversReg[12],";",taM41CsvDiversReg[13],";",taM41CsvDiversReg[ \
														14],";",taM41CsvDiversReg[15],";",taM41CsvDiversReg[16],";", \
														taM41CsvDiversReg[17],";",taM41CsvDiversReg[18],";",taM41CsvDiversReg[19],";", \
														taM41CsvDiversReg[20],";",taM41CsvDiversReg[21],";", NL) >> tFileOutTempCSVDIVERS
												 remove(taM41CsvDiversReg)
											
											
												endif
													
												nTempConta4130++
											endwhile











									endif  
									nTempConta4120++
									   
							   endwhile
							
						 endif
						 
						  
						  
						  remove(taNumSerieTabTx)
							split(fmbrasil_consolidacao_m40hasbro.CODFOU,taNumSerieTabTx,".")
						  
						  
						
						
						
						
						
						
						
						
						
						
								
						!colocar as linhas com novo while na tabela		
								
								
						fmbrasil_consolidacao_m40hasbrolinhas := find(build(sHOME,"/fmbrasil_consolidacao_m40hasbro"),NF=fmbrasil_consolidacao_m40hasbro.NF,SNF=fmbrasil_consolidacao_m40hasbro.SNF,CODACT=tCODACTLido,CODTRE="RT")aNLIREC	
										while valid(fmbrasil_consolidacao_m40hasbrolinhas) do
										
												nContadorRegisto++
											   R_DETAIL_plant("1425")
											   
											   if tCODTRE = "RT" then
												   R_DETAIL_movementtype("987")
											   endif
											   if tCODTRE = "TR" then
												   R_DETAIL_movementtype("101")
											   endif
											   
											   
											   R_DETAIL_postingdate(tfConvertDate(tData, "YYYYMMDD" , "YYMMDD"))
											   R_DETAIL_materialnumber(fmbrasil_consolidacao_m40hasbrolinhas.CODPRO)
												
												R_DETAIL_storagelocation("0001") 
												
												log("pesquisei na fmbrasil_consolidacao_m40hasbrolinhas",NL)
												log("fmbrasil_consolidacao_m40hasbrolinhas.CODPRO ",fmbrasil_consolidacao_m40hasbrolinhas.CODPRO,NL)
												log("fmbrasil_consolidacao_m40hasbrolinhas.DIPREC4021 ",fmbrasil_consolidacao_m40hasbrolinhas.DIPREC4021,NL)
												R_DETAIL_PORAnumber(fmbrasil_consolidacao_m40hasbrolinhas.DIPREC4021)
												R_DETAIL_PORAlinenumber(build(number(fmbrasil_consolidacao_m40hasbrolinhas.NLIREC):R05))
												R_DETAIL_container(fmbrasil_consolidacao_m40hasbrolinhas.DIPREC)
												
												R_DETAIL_NFnumber(fmbrasil_consolidacao_m40hasbrolinhas.NF)
												R_DETAIL_NotaFiscalNumberSeries(fmbrasil_consolidacao_m40hasbrolinhas.SNF)
											   

										/*
										naContadorNumeroVezesRepTabAnt[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] := naContadorNumeroVezesRepeteTab[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO]
										
											if  naContadorNumeroVezesRepeteTab[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] = 1 then
											naQtdEfetiva_Recebida4120_AUX[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] := naQtdEfetiva_Recebida4120[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO]
											!naContadorNumeroVezesRepeteTab[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] := naContadorNumeroVezesRepeteTab[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO]
										   endif
										  
										   
										   
										   if  naContadorNumeroVezesRepeteTab[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] > 1 and naQtdEfetiva_Recebida4120[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] > number(fmbrasil_consolidacao_m40hasbrolinhas.UVCREA) then
												naQtdEfetiva_Recebida4120_AUX[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] := number(fmbrasil_consolidacao_m40hasbrolinhas.UVCREA)
												naQtdEfetiva_Recebida4120[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] := naQtdEfetiva_Recebida4120[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] - number(fmbrasil_consolidacao_m40hasbrolinhas.UVCREA)
												naContadorNumeroVezesRepeteTab[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] := naContadorNumeroVezesRepeteTab[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO]-1
										   else
												if naContadorNumeroVezesRepeteTab[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] > 1 then
													naQtdEfetiva_Recebida4120_AUX[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] := naQtdEfetiva_Recebida4120[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO]
													naQtdEfetiva_Recebida4120[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] := naQtdEfetiva_Recebida4120[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] - number(fmbrasil_consolidacao_m40hasbrolinhas.UVCREA)
													naContadorNumeroVezesRepeteTab[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] := naContadorNumeroVezesRepeteTab[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO]-1
												endif
										   endif


										   
										   if naQtdEfetiva_Recebida4120_AUX[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] > 0 then
										   R_DETAIL_quantity(build(naQtdEfetiva_Recebida4120_AUX[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO]:R09))
										   nTotalProdutos := nTotalProdutos + naQtdEfetiva_Recebida4120_AUX[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO]
										   else
											R_DETAIL_quantity(build(0:R09))
										   endif
										   
										   */
										   
										   
										   if number(fmbrasil_consolidacao_m40hasbrolinhas.UVCREA) > 0 then
										   R_DETAIL_quantity(build(number(fmbrasil_consolidacao_m40hasbrolinhas.UVCREA):R09))
											nTotalProdutos := nTotalProdutos + number(fmbrasil_consolidacao_m40hasbrolinhas.UVCREA)
										   else
											R_DETAIL_quantity(build(0:R09))
										   endif
										   
										   R_DETAIL_endoflinemarker("/")
										   

										   flush(0,0,NL) >> tFileOutTemp
										   nTempConta4120++
										   
										   
										   
										   
										   
										   
										   
										   
										   
										   
										   !maillllll
										   
																			   
																			   
																			   
													
													!CSV alterado o registo 2 para qtd e produtos consolidade
											

													 
													 
														bEscreveuCSVDIVERS := TRUE
															 
															
															
																
																R_M41CsvDiversReg_NF(fmbrasil_consolidacao_m40hasbrolinhas.NF)
																R_M41CsvDiversReg_Doca(tKAIREC)
																R_M41CsvDiversReg_Transportadora(tCODTRA)
																R_M41CsvDiversReg_Placa(tMsgrec4102)
																R_M41CsvDiversReg_Motorista("")
																R_M41CsvDiversReg_BL(tNumeroDocumento)
																R_M41CsvDiversReg_Carga("")
																R_M41CsvDiversReg_Operacao(tCODTRE)
																R_M41CsvDiversReg_Data(tfConvertDate(build(tData,tHora,"00"),"YYYYMMDDHHMMSS","DD/MM/AAAA - HH:MM:SS")) !converter para "DD/MM/AAAA - HH:MM:SS"
																R_M41CsvDiversReg_Cliente(tCODACTLido)
															
															
																
															 
															 
															
															
															
															R_M41CsvDiversReg_Sequencia(build(number(fmbrasil_consolidacao_m40hasbrolinhas.NLIREC):R05))
															R_M41CsvDiversReg_SKU(fmbrasil_consolidacao_m40hasbrolinhas.CODPRO)
															
															
																tQuery := 	build("SELECT DS1PRO FROM FGE50FM",tToInfologPrefixFilename,".GEPRO WHERE CODPRO='",taCODPRO4130[nTempConta4130],"' AND CODACT='",tCODACTLido,"'")


															

																
																if bfSqlSet( tDbBase ,"SELECTdb2"  , tQuery) = FALSE then
																			 print("FATAL ", tfSqlErrorStr())
																			 bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
																			exit(1)
																	
																endif

																if bfSqlOpen( tDbBase , "SELECTdb2" ) = FALSE then
																	 print("FATAL ", tfSqlErrorStr())
																	  bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
																			exit(1)

																endif
																while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
											
																	
																	tDS1PROQueryCSVPalete := peel(taDb2Array["DS1PRO"]," ")
																
																	remove(taDb2Array)

																endwhile
																
																

																if bfSqlFree( tDbBase , "SELECTdb2"  ) = FALSE then
																	print("FATAL", tfSqlErrorStr())
																	 bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
																			exit(1)
																endif
															
															
															
															
															
															
															
															
															
															
															
															
															
															
															
															
															
															
															
															
															
															R_M41CsvDiversReg_Descricao(tDS1PROQueryCSVPalete) 
															R_M41CsvDiversReg_Lote("")
															
															
															R_M41CsvDiversReg_Palete("")
															R_M41CsvDiversReg_STATUSIMO("")
															R_M41CsvDiversReg_Unidade(fmbrasil_consolidacao_m40hasbrolinhas.UNICDE)
															
															
															
															
															
															
															
												!tQuery := 	build("SELECT SEQREC, NLIREC, CODPRO FROM FGE50FM",tToInfologPrefixFilename,".GERECD WHERE NUMREC='",tNUMREC,"' AND SEQREC='",taNLIREC4130[nTempConta4130],"' AND CODACT='",tCODACTLido,"'")
												!tQuery := 	build("SELECT SEQREC, NLIREC, CODPRO FROM FGE50FM",tToInfologPrefixFilename,".GERECD WHERE NUMREC='",tNUMREC,"' AND SEQREC='",fmbrasil_consolidacao_m40hasbrolinhas.NLIREC,"' AND CODACT='",tCODACTLido,"'")
												tQuery := 	build("SELECT  NLIREC, CODPRO FROM FGE50FM",tToInfologPrefixFilename,".GERECD WHERE NUMREC='",tNUMREC,"' AND NLIREC='",fmbrasil_consolidacao_m40hasbrolinhas.NLIREC,"' AND CODPRO='",taCODPRO4130[nTempConta4130],"' AND CODACT='",tCODACTLido,"'")


												log(tQuery,NL)

													
													if bfSqlSet( tDbBase ,"SELECTdb2"  , tQuery) = FALSE then
																 print("FATAL ", tfSqlErrorStr())
																 bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
																exit(1)
														
													endif

													if bfSqlOpen( tDbBase , "SELECTdb2" ) = FALSE then
														 print("FATAL ", tfSqlErrorStr())
														  bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
																exit(1)

													endif
													
													tNLIRECDeterm := ""
													while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
								
														
														tNLIRECDeterm := peel(taDb2Array["NLIREC"]," ")
													
														remove(taDb2Array)

													endwhile
													
													

													if bfSqlFree( tDbBase , "SELECTdb2"  ) = FALSE then
														print("FATAL", tfSqlErrorStr())
														 bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
																exit(1)
													endif
												
												
												
															
															
															
															
															
															
															!if number(fmbrasil_consolidacao_m40hasbrolinhas.NLIREC) = 0 then
															!if number(tNLIRECDeterm) = 0 then
															!	R_M41CsvDiversReg_QtdFiscal("0")
															!else
																R_M41CsvDiversReg_QtdFiscal(fmbrasil_consolidacao_m40hasbrolinhas.UVCREA)
															!endif
															
															!R_M41CsvDiversReg_QtdRecebida(fmbrasil_consolidacao_m40hasbrolinhas.UVCREA)
															
															
															
															
															
															
															log(" fmbrasil_consolidacao_m40hasbrolinhas.CODPRO ",fmbrasil_consolidacao_m40hasbrolinhas.CODPRO,NL)
															log("naQtdEfetiva_Recebida4120[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] ",naQtdEfetiva_Recebida4120[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO],NL)
															
															if  naContadorNumeroVezesRepeteTab[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] = 1 then
																naQtdEfetiva_Recebida4120_AUX[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] := naQtdEfetiva_Recebida4120[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO]
																
															   endif
															  
															   
															   
															   if  naContadorNumeroVezesRepeteTab[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] > 1 and naQtdEfetiva_Recebida4120[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] > number(fmbrasil_consolidacao_m40hasbrolinhas.UVCREA) then
																	naQtdEfetiva_Recebida4120_AUX[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] := number(fmbrasil_consolidacao_m40hasbrolinhas.UVCREA)
																	naQtdEfetiva_Recebida4120[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] := naQtdEfetiva_Recebida4120[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] - number(fmbrasil_consolidacao_m40hasbrolinhas.UVCREA)
																	naContadorNumeroVezesRepeteTab[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] := naContadorNumeroVezesRepeteTab[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO]-1
															   else
																	if naContadorNumeroVezesRepeteTab[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] > 1 then
																		naQtdEfetiva_Recebida4120_AUX[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] := naQtdEfetiva_Recebida4120[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO]
																		naQtdEfetiva_Recebida4120[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] := naQtdEfetiva_Recebida4120[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] - number(fmbrasil_consolidacao_m40hasbrolinhas.UVCREA)
																		naContadorNumeroVezesRepeteTab[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] := naContadorNumeroVezesRepeteTab[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO]-1
																	endif
															   endif


															   
															   if naQtdEfetiva_Recebida4120_AUX[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO] > 0 then
															   !R_DETAIL_quantity(build(naQtdEfetiva_Recebida4120_AUX[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO]:R09))
															   R_M41CsvDiversReg_QtdRecebida(build(naQtdEfetiva_Recebida4120_AUX[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO]:R09))
															   
															   else
																!R_DETAIL_quantity(build(0:R09))
																R_M41CsvDiversReg_QtdRecebida(build(0:R09))
															   endif
															   
															   
															
															
															
															
															
															!R_M41CsvDiversReg_QtdRecebida(build(naTOTALQtdEfetiva_Recebida4120[fmbrasil_consolidacao_m40hasbrolinhas.CODPRO]:R09))
															
														
															
															
															
															if bPrimeiroRegistoLinhas = TRUE then
																bPrimeiroRegistoLinhas := FALSE
																print("NF;Doca;Transportadora;Placa;Motorista;BL;Carga;Operacao;Data;Cliente;Sequencia;SKU;Descricao;Lote;Palete;\"Status (IMO)\";Unidade;\"Quantidade Fiscal\";\"Quantidade Recebida\";\"Quantidade IMO Avaria\";\"Quantidade IMO Qualidade\"", NL) >> tFileOutTempCSVDIVERS
															 
															endif
															
															print(taM41CsvDiversReg[1],";",taM41CsvDiversReg[2],";",taM41CsvDiversReg[3] \
																	,";",taM41CsvDiversReg[4],";",taM41CsvDiversReg[5],";",taM41CsvDiversReg[ \
																	6],";",taM41CsvDiversReg[7],";",taM41CsvDiversReg[8],";", \
																	taM41CsvDiversReg[9],";",taM41CsvDiversReg[10],";",taM41CsvDiversReg[11],";", \
																	taM41CsvDiversReg[12],";",taM41CsvDiversReg[13],";",taM41CsvDiversReg[ \
																	14],";",taM41CsvDiversReg[15],";",taM41CsvDiversReg[16],";", \
																	taM41CsvDiversReg[17],";",taM41CsvDiversReg[18],";",taM41CsvDiversReg[19],";", \
																	taM41CsvDiversReg[20],";",taM41CsvDiversReg[21],";",NL) >> tFileOutTempCSVDIVERS
															 remove(taM41CsvDiversReg)

														
														
														
																
														
												
												
												
												
														


										   
										   
										   
										   
										   
										   
										   
										   
										   
										   
										   
										   
										   
										   
										   
										   
										   
										   
										   
										   
										   
										   
										   
											fmbrasil_consolidacao_m40hasbrolinhas.TraceM41 := build(TRACE.INDEX)
											  
											fmbrasil_consolidacao_m40hasbrolinhas := find()
										endwhile		
								
								
								


								
					endif
					
					
					
					fmbrasil_consolidacao_m40hasbro := find()
				endwhile
				
				if bFezRegistoZERO = TRUE then
					 R_TR_recordTypeTR("TR")
					R_TR_PLANT("1425")
					R_TR_TOTALMATERIALCOUNT(build(nTotalProdutos:R07))
					R_TR_ENDOFLINEMARKER("/")
					    flush(0,0,NL) >> tFileOutTemp
						
						
						
						
						
						
						
						
						close(tFileOutTempCSVDIVERS)
						copy(tFileOutTempCSVDIVERS,tFileOutCSVDIVERS)
						close(tFileOutTempCSVDIVERS)
						remove(tFileOutTempCSVDIVERS)
						close(tFileOutCSVDIVERS)
														
														
														
						fmbrasil_confrec_email_hasbro := find(build(sHOME,"/fmbrasil_confrec_email_hasbro"),CODACT=tCODACTLido)
						if valid(fmbrasil_confrec_email_hasbro) then
						
						
							tSubjectEmail := build(replace(fmbrasil_confrec_email_hasbro.BEGINSUBJ," ",""),"_",tNameOutCSVDIVERS) 
							tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameOutCSVDIVERS," EMAIL.RCPT=",replace(replace(fmbrasil_confrec_email_hasbro.TOEMAIL," ",""),";",",")," MailM41DIVERS ",tFileOutCSVDIVERS)
							
							log("executing command ",tCmdEmailErro,NL)
							nRet := system(tCmdEmailErro)
						
						else
							bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("CODACT: ",tCODACTLido," nao existe na tabela fmbrasil_confrec_email_hasbro!"))
							exit(1)			
						
						endif
						
						
						
						
						
				endif
				

		
		

	
	
	
	
	
	
	
	
	
	
	
	
	
	
				

		
				
				
				
				
				
				
			bfMajtraceRT("Recebida","0",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos","")
			
			
			

			close(tFileOutTemp)
			copy(tFileOutTemp,tFileOut)
				close(tFileOutTemp)
				remove(tFileOutTemp)
					close(tFileOut)
				
				
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	endif
	
	
	
	
	
	
	
	
	
	

	
			
	if tCODTRE = "TR" then	
	
	
	
	
	
	
	
	
	
		nTempConta4120 := 1
		   while nTempConta4120 <= nConta4120 do
		   
				   

		
				   
				   
				   naContadorNumeroVezesRepeteTab[taCODPRO4120[nTempConta4120]] := 0
				   
				   !percorrer todos os produtos da tabela e contar o numero de vezes que cada codpro se repete
		
					fmbrasil_consolidacao_m40hasbro := find(build(sHOME,"/fmbrasil_consolidacao_m40hasbro"),REFRECDepoisConsolidacao=tNumeroDocumento,CODACT=tCODACTLido,CODPRO=taCODPRO4120[nTempConta4120],CODTRE="TR")aREFRECDepoisConsolidacao
					while valid(fmbrasil_consolidacao_m40hasbro) then
						naContadorNumeroVezesRepeteTab[taCODPRO4120[nTempConta4120]]++
						
				
						fmbrasil_consolidacao_m40hasbro := find()
					endwhile
				   
				  nTempConta4120++
				   
		   endwhile
	
	
	
	
	
		TRACE:=new(build(sHOME,"/trace"))
		flush(TRACE)
		nContadorHASBROCRINV := cContadorHASBROCRINV
		nMessageID := cMessageID
		tFileOut := build(sHOME,"/FMBR_AS2/FM",tToInfologPrefixFilename,"HAScrinv1425_",time("now" ,"%Y%m%d"),"_",time("now" ,"%H%M%S"),nContadorHASBROCRINV:R04,".dat")
		tFileOutTemp := build(sHOME,"/FMBR_AS2/Temp/FM",tToInfologPrefixFilename,"HAScrinv1425_",time("now" ,"%Y%m%d"),"_",time("now" ,"%H%M%S"),nContadorHASBROCRINV:R04,".dat")
		tNameOut := build("FM",tToInfologPrefixFilename,"HAScrinv1425_",time("now" ,"%Y%m%d"),"_",time("now" ,"%H%M%S"),nContadorHASBROCRINV:R04,".dat")





		R_CR_recordtype("CR")
		R_CR_filetype("INV")
		R_CR_plant("1425")
		
		
		R_CR_filesequence(build(nContadorHASBROCRINV:R06)) 
		R_CR_filecreatedate(time("now","%y%m%d"))

		R_CR_endoflinemarker("/")
		flush(0,0,NL) >> tFileOutTemp





		  
		  
		  tSerieDaNF := taNumSerie[2]
		 tNumeroDaNF :=  taNumSerie[1]
		
		 
		 
		   !items SURPRESA
		   
								nTempConta4120 := 1
							   while nTempConta4120 <= nConta4120 do
									if  naContadorNumeroVezesRepeteTab[taCODPRO4120[nTempConta4120]] = 0 then
										if taRECSOL4120[nTempConta4120] = "1" or	taCODACR4120[nTempConta4120] <> "" then
											!nao escreve a linha
										else
									      R_DETAIL_plant("1425")
											   
											   if tCODTRE = "RT" then
												   R_DETAIL_movementtype("987")
											   endif
											   if tCODTRE = "TR" then
												   R_DETAIL_movementtype("101")
											   endif
											   
											   
											   R_DETAIL_postingdate(tfConvertDate(tData, "YYYYMMDD" , "YYMMDD"))
											   R_DETAIL_materialnumber(taCODPRO4120[nTempConta4120])
												
												R_DETAIL_storagelocation("0001") 
												
												
												R_DETAIL_PORAnumber(taDIPREC4121[nTempConta4120])
												R_DETAIL_PORAlinenumber(build(number(taNLIREC4120[nTempConta4120]):R05))
												R_DETAIL_container(tDIPREC)
												
												R_DETAIL_NFnumber(tNumeroDaNF)
												R_DETAIL_NotaFiscalNumberSeries(tSerieDaNF)
											   



										   
										   if number(taUVCREA4120[nTempConta4120]) > 0 then
										   R_DETAIL_quantity(build(number(taUVCREA4120[nTempConta4120]):R09))
											nTotalProdutos := nTotalProdutos + number(taUVCREA4120[nTempConta4120])
										   else
											R_DETAIL_quantity(build(0:R09))
										   endif
										   
										   R_DETAIL_endoflinemarker("/")
										   

										   flush(0,0,NL) >> tFileOutTemp
										  
										endif

									endif  
									nTempConta4120++
									   
							   endwhile
		
		 
		   
		   
		
		   
		   
		   
		   
		   
		   
		   						fmbrasil_consolidacao_m40hasbrolinhas := find(build(sHOME,"/fmbrasil_consolidacao_m40hasbro"),REFRECDepoisConsolidacao=tNumeroDocumento,CODACT=tCODACTLido,CODTRE="TR")aNLIREC	
										while valid(fmbrasil_consolidacao_m40hasbrolinhas) do
										
												nContadorRegisto++
											   R_DETAIL_plant("1425")
											   
											   if tCODTRE = "RT" then
												   R_DETAIL_movementtype("987")
											   endif
											   if tCODTRE = "TR" then
												   R_DETAIL_movementtype("101")
											   endif
											   
											   
											   R_DETAIL_postingdate(tfConvertDate(tData, "YYYYMMDD" , "YYMMDD"))
											   R_DETAIL_materialnumber(fmbrasil_consolidacao_m40hasbrolinhas.CODPRO)
												
												R_DETAIL_storagelocation("0001") 
												
												
												R_DETAIL_PORAnumber(fmbrasil_consolidacao_m40hasbrolinhas.DIPREC4021)
												R_DETAIL_PORAlinenumber(build(number(fmbrasil_consolidacao_m40hasbrolinhas.NLIREC):R05))
												R_DETAIL_container(fmbrasil_consolidacao_m40hasbrolinhas.DIPREC)
												
												R_DETAIL_NFnumber(tNumeroDaNF)
												R_DETAIL_NotaFiscalNumberSeries(tSerieDaNF)
											   



										   
										   if number(fmbrasil_consolidacao_m40hasbrolinhas.UVCREA) > 0 then
										   R_DETAIL_quantity(build(number(fmbrasil_consolidacao_m40hasbrolinhas.UVCREA):R09))
											nTotalProdutos := nTotalProdutos + number(fmbrasil_consolidacao_m40hasbrolinhas.UVCREA)
										   else
											R_DETAIL_quantity(build(0:R09))
										   endif
										   
										   R_DETAIL_endoflinemarker("/")
										   

										   flush(0,0,NL) >> tFileOutTemp
										   
										   
											fmbrasil_consolidacao_m40hasbrolinhas.TraceM41 := build(TRACE.INDEX)
											  
											fmbrasil_consolidacao_m40hasbrolinhas := find()
										endwhile	
		   
		   
		   
		   
		   
		   
		   
		   
		   
		   
		   
		   
		   
		   
		   
		   
	   
	   
	    R_TR_recordTypeTR("TR")
		R_TR_PLANT("1425")
		R_TR_TOTALMATERIALCOUNT(build(nTotalProdutos:R07))
		R_TR_ENDOFLINEMARKER("/")

	   flush(0,0,NL) >> tFileOutTemp
	   
	   
	   
		
		

		
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				!CSV
		

			
				 nTempConta4130 := 1
				 while nTempConta4130 <= nConta4130 do
						
						
						
						
						
						
							
							R_M41CsvDiversReg_NF(tNumeroDocumento)
							R_M41CsvDiversReg_Doca(tKAIREC)
							R_M41CsvDiversReg_Transportadora(tCODTRA)
							R_M41CsvDiversReg_Placa(tMsgrec4102)
							R_M41CsvDiversReg_Motorista("")
							R_M41CsvDiversReg_BL(tNumeroDocumento)
							R_M41CsvDiversReg_Carga("")
							R_M41CsvDiversReg_Operacao(tCODTRE)
							R_M41CsvDiversReg_Data(tfConvertDate(build(tData,tHora,"00"),"YYYYMMDDHHMMSS","DD/MM/AAAA - HH:MM:SS")) !converter para "DD/MM/AAAA - HH:MM:SS"
							R_M41CsvDiversReg_Cliente(tCODACTLido)
						
						
							
						
						
						
						
						R_M41CsvDiversReg_Sequencia(taNLIREC4130[nTempConta4130])
						R_M41CsvDiversReg_SKU(taCODPRO4130[nTempConta4130])
						
						
							tQuery := 	build("SELECT DS1PRO FROM FGE50FM",tToInfologPrefixFilename,".GEPRO WHERE CODPRO='",taCODPRO4130[nTempConta4130],"' AND CODACT='",tCODACTLido,"'")


						

							
							if bfSqlSet( tDbBase ,"SELECTdb2"  , tQuery) = FALSE then
										 print("FATAL ", tfSqlErrorStr())
										 bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
										exit(1)
								
							endif

							if bfSqlOpen( tDbBase , "SELECTdb2" ) = FALSE then
								 print("FATAL ", tfSqlErrorStr())
								  bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
										exit(1)

							endif
							while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
		
								
								tDS1PROQueryCSVPalete := peel(taDb2Array["DS1PRO"]," ")
							
								remove(taDb2Array)

							endwhile
							
							

							if bfSqlFree( tDbBase , "SELECTdb2"  ) = FALSE then
								print("FATAL", tfSqlErrorStr())
								 bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
										exit(1)
							endif
						
						
						R_M41CsvDiversReg_Descricao(tDS1PROQueryCSVPalete) 
						R_M41CsvDiversReg_Lote(taCODLOT4130[nTempConta4130])
						!R_M41CsvDiversReg_LP(taCODPAL4130[nTempConta4130])
						!R_M41CsvDiversReg_Status_IMO(taMOTIMM4130[nTempConta4130])
						
						R_M41CsvDiversReg_Palete(taCODPAL4130[nTempConta4130])
						R_M41CsvDiversReg_STATUSIMO(taMOTIMM4130[nTempConta4130])
						
						R_M41CsvDiversReg_Unidade(taUNICDE4130_do_4120[nTempConta4130])
						
						
												

												
												!tQuery := 	build("SELECT SEQREC, NLIREC, CODPRO FROM FGE50FM",tToInfologPrefixFilename,".GERECD WHERE NUMREC='",tNUMREC,"' AND SEQREC='",taNLIREC4130[nTempConta4130],"' AND CODACT='",tCODACTLido,"'")
												tQuery := 	build("SELECT  NLIREC, CODPRO FROM FGE50FM",tToInfologPrefixFilename,".GERECD WHERE NUMREC='",tNUMREC,"' AND NLIREC='",taNLIREC4130[nTempConta4130],"' AND CODPRO='",taCODPRO4130[nTempConta4130],"' AND CODACT='",tCODACTLido,"'")


												log(tQuery,NL)

													
													if bfSqlSet( tDbBase ,"SELECTdb2"  , tQuery) = FALSE then
																 print("FATAL ", tfSqlErrorStr())
																 bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
																exit(1)
														
													endif

													if bfSqlOpen( tDbBase , "SELECTdb2" ) = FALSE then
														 print("FATAL ", tfSqlErrorStr())
														  bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
																exit(1)

													endif
													
													tNLIRECDeterm := ""
													while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
								
														
														tNLIRECDeterm := peel(taDb2Array["NLIREC"]," ")
													
														remove(taDb2Array)

													endwhile
													
													

													if bfSqlFree( tDbBase , "SELECTdb2"  ) = FALSE then
														print("FATAL", tfSqlErrorStr())
														 bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
																exit(1)
													endif
												
												
						if number(tNLIRECDeterm) = 0 then
							R_M41CsvDiversReg_QtdFiscal("0")
						else
							R_M41CsvDiversReg_QtdFiscal(taUVCREA4130_do_4120[nTempConta4130])
						endif
						!R_M41CsvDiversReg_QtdRecebida(taUVCREC4130_do_4120[nTempConta4130])
						R_M41CsvDiversReg_QtdRecebida(taUVCMVT4130[nTempConta4130])
						
						!Quando MOTIMM=AB, AC, AF, AT e AP  - Tipo: AVARIA  
						if taMOTIMM4130[nTempConta4130] = "AC" or taMOTIMM4130[nTempConta4130] = "AM" or taMOTIMM4130[nTempConta4130] = "AT" or taMOTIMM4130[nTempConta4130] = "EA" then
							R_M41CsvDiversReg_Quantidade_IMO_Avaria(taUVCMVT4130[nTempConta4130])
						endif
						
						
						!Quando MOTIMM= GB, NB, RW, NI e TB - Tipo: QUALIDADE
						if taMOTIMM4130[nTempConta4130] = "CQ" then
							R_M41CsvDiversReg_Qtd_IMO_Qualidade(taUVCMVT4130[nTempConta4130])
						endif
						
						
						if nTempConta4130 = 1 then
								print("NF;Doca;Transportadora;Placa;Motorista;BL;Carga;Operacao;Data;Cliente;Sequencia;SKU;Descricao;Lote;Palete;\"Status (IMO)\";Unidade;\"Quantidade Fiscal\";\"Quantidade Recebida\";\"Quantidade IMO Avaria\";\"Quantidade IMO Qualidade\"", NL) >> tFileOutTempCSVDIVERS
						 
						endif
						
						print(taM41CsvDiversReg[1],";",taM41CsvDiversReg[2],";",taM41CsvDiversReg[3] \
								,";",taM41CsvDiversReg[4],";",taM41CsvDiversReg[5],";",taM41CsvDiversReg[ \
								6],";",taM41CsvDiversReg[7],";",taM41CsvDiversReg[8],";", \
								taM41CsvDiversReg[9],";",taM41CsvDiversReg[10],";",taM41CsvDiversReg[11],";", \
								taM41CsvDiversReg[12],";",taM41CsvDiversReg[13],";",taM41CsvDiversReg[ \
								14],";",taM41CsvDiversReg[15],";",taM41CsvDiversReg[16],";", \
								taM41CsvDiversReg[17],";",taM41CsvDiversReg[18],";",taM41CsvDiversReg[19],";", \
								taM41CsvDiversReg[20],";",taM41CsvDiversReg[21],";", NL) >> tFileOutTempCSVDIVERS
						 remove(taM41CsvDiversReg)
					
					
					
							
						nTempConta4130++
					endwhile
			
			
			
			
					close(tFileOutTempCSVDIVERS)
					copy(tFileOutTempCSVDIVERS,tFileOutCSVDIVERS)
					close(tFileOutTempCSVDIVERS)
					remove(tFileOutTempCSVDIVERS)
					close(tFileOutCSVDIVERS)
					
					
					
					fmbrasil_confrec_email_hasbro := find(build(sHOME,"/fmbrasil_confrec_email_hasbro"),CODACT=tCODACTLido)
					if valid(fmbrasil_confrec_email_hasbro) then
					
					
						tSubjectEmail := build(replace(fmbrasil_confrec_email_hasbro.BEGINSUBJ," ",""),"_",tNameOutCSVDIVERS) 
						tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EMAIL.NAME=",tNameOutCSVDIVERS," EMAIL.RCPT=",replace(replace(fmbrasil_confrec_email_hasbro.TOEMAIL," ",""),";",",")," MailM41DIVERS ",tFileOutCSVDIVERS)
						
						log("executing command ",tCmdEmailErro,NL)
						nRet := system(tCmdEmailErro)
			
					else
						bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("CODACT: ",tCODACTLido," nao existe na tabela fmbrasil_confrec_email_hasbro!"))
						exit(1)			
					
					endif



		
				
				
				
				bfMajtrace("Recebida","0",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos","")
		
		
		

		close(tFileOutTemp)
		copy(tFileOutTemp,tFileOut)
			close(tFileOutTemp)
			remove(tFileOutTemp)
				close(tFileOut)
				
				
				
				
				
				
				
				
				
				
				
				
				
				
	 endif  
	   
	   
 
   
   
   
   
	

		

	
		
		
		



endline

!===========================================================

! Default statements section
default

enddefault

!===========================================================

! End statements section

end

		


bfSqlClose(tDbBase)

	exit(0)
endend

!===========================================================


!===========================================================



function bfMajtrace(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
   !TRACE:=new(build(sHOME,"/trace"))
   TRACE.ESTADO := tStatus
   TRACE.ERRO := tError
   TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
   TRACE.MENSAGEM := tTipoDocumento

   TRACE.PERFIL := "HASBRO"
   TRACE.SENTIDO := "O"
   TRACE.MENSAGEM := "CONFIRMACAO DE RECEBIMENTO"
   TRACE.NUMDOC := tNumeroDocumento
   TRACE.DATDOC := time("now","%Y-%m-%d")
   TRACE.MESSAGEID := build(nMessageID:R010)

    TRACE.REDE := substr(pEDISEND.ORIGINAL.NAME,1,20)
TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
 TRACE.FICHEIROSAIDA := tNameOut
   if tStatus = "Recebida" then
   print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail


  print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
  print("Traduzida com Sucesso",NL) >> TRACE.Detail

  else
          if tStatus = "Erro de Traducao" then

        print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
        print("Erro de Traducao",NL) >> TRACE.Detail
        print(tMensagemErrro,NL) >> TRACE.Detail
        endif
  endif
close(TRACE.Detail)
close(SYSLOG.a)


if nMainIndex = 0 then
copy(SYSLOG.a,TRACE.In)
close(SYSLOG.a)
close(TRACE.In)

 
	nMainIndex := TRACE.INDEX
else
	tCmd := build("ln -s ", sHOME, "/trace/files/In/", nMainIndex, " ", TRACE.In)
	system(tCmd)
endif

!if tCODACTLido = "581" then
!if tCODTRE = "NAC" then
!else
	close(tFileOutTemp)
	copy(tFileOutTemp,TRACE.Out)
	close(tFileOutTemp)
	close(TRACE.Out)

!endif
!endif



close(tFileOutCSVDIVERS)
copy(tFileOutCSVDIVERS,TRACE.CSV_Email)
close(tFileOutCSVDIVERS)
close(TRACE.CSV_Email)

!if tCODACTLido = "583" or tCODACTLido = "602" then !faz o CSV PALETE
if 1=1 then
					close(tFileOutTempCSVPALETE)
					copy(tFileOutTempCSVPALETE,tFileOutCSVPALETE)
					close(tFileOutTempCSVPALETE)
					remove(tFileOutTempCSVPALETE)
					close(tFileOutCSVPALETE)
					
					copy(tFileOutCSVPALETE,TRACE.OutCsvPalete)
					close(tFileOutCSVPALETE)
					remove(tFileOutCSVPALETE)
					close(TRACE.OutCsvPalete)
endif




flush(TRACE)

endfunction



!===========================================================
!===========================================================

!===========================================================


!===========================================================



function bfMajtracePEDIND(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
   TRACE:=new(build(sHOME,"/trace"))
   TRACE.ESTADO := tStatus
   TRACE.ERRO := tError
   TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
   TRACE.MENSAGEM := tTipoDocumento

   TRACE.PERFIL := "HASBRO"
   TRACE.SENTIDO := "O"
   TRACE.MENSAGEM := "RETORNO REAL RECEBIMENTO PED/IND"
   TRACE.NUMDOC := tNumeroDocumento
   TRACE.DATDOC := time("now","%Y-%m-%d")
   TRACE.MESSAGEID := build(nMessageID:R010)

    TRACE.REDE := substr(pEDISEND.ORIGINAL.NAME,1,20)
TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
 TRACE.FICHEIROSAIDA := tNameOutPEDIND
   if tStatus = "Recebida" then
   print(build("Ficheiro de Saida: "),tFileOutPEDIND,NL,NL) >> TRACE.Detail


  print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
  print("Traduzida com Sucesso",NL) >> TRACE.Detail

  else
          if tStatus = "Erro de Traducao" then

        print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
        print("Erro de Traducao",NL) >> TRACE.Detail
        print(tMensagemErrro,NL) >> TRACE.Detail
        endif
  endif
close(TRACE.Detail)
close(SYSLOG.a)


if nMainIndex = 0 then
copy(SYSLOG.a,TRACE.In)
close(SYSLOG.a)
close(TRACE.In)

  
	nMainIndex := TRACE.INDEX
else
	tCmd := build("ln -s ", sHOME, "/trace/files/In/", nMainIndex, " ", TRACE.In)
	system(tCmd)
endif





close(tFileOutCSVDIVERS)
copy(tFileOutCSVDIVERS,TRACE.CSV_Email)
close(tFileOutCSVDIVERS)
close(TRACE.CSV_Email)




	close(tFileOutTempPEDIND)
	copy(tFileOutTempPEDIND,TRACE.Out)
	close(tFileOutTempPEDIND)
	close(TRACE.Out)



flush(TRACE)

endfunction



!===========================================================
!===========================================================


!===========================================================


!===========================================================



function bfMajtraceRT(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
   TRACE:=new(build(sHOME,"/trace"))
   TRACE.ESTADO := tStatus
   TRACE.ERRO := tError
   TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
   TRACE.MENSAGEM := tTipoDocumento

   TRACE.PERFIL := "HASBRO"
   TRACE.SENTIDO := "O"
   TRACE.MENSAGEM := "CONFIRMACAO DE RECEBIMENTO - RT"
   TRACE.NUMDOC := tNumeroDocumento
   TRACE.DATDOC := time("now","%Y-%m-%d")
   TRACE.MESSAGEID := build(nMessageID:R010)

    TRACE.REDE := substr(pEDISEND.ORIGINAL.NAME,1,20)
TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
 TRACE.FICHEIROSAIDA := tNameOut
   if tStatus = "Recebida" then
   print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail


  print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
  print("Traduzida com Sucesso",NL) >> TRACE.Detail

  else
          if tStatus = "Erro de Traducao" then

        print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
        print("Erro de Traducao",NL) >> TRACE.Detail
        print(tMensagemErrro,NL) >> TRACE.Detail
        endif
  endif
close(TRACE.Detail)
close(SYSLOG.a)


if nMainIndex = 0 then
copy(SYSLOG.a,TRACE.In)
close(SYSLOG.a)
close(TRACE.In)

 
	nMainIndex := TRACE.INDEX
else
	tCmd := build("ln -s ", sHOME, "/trace/files/In/", nMainIndex, " ", TRACE.In)
	system(tCmd)
endif

!if tCODACTLido = "581" then
!if tCODTRE = "NAC" then
!else
	close(tFileOutTemp)
	copy(tFileOutTemp,TRACE.Out)
	close(tFileOutTemp)
	close(TRACE.Out)

!endif
!endif




close(tFileOutCSVDIVERS)
copy(tFileOutCSVDIVERS,TRACE.CSV_Email)
close(tFileOutCSVDIVERS)
close(TRACE.CSV_Email)




!if tCODACTLido = "583" or tCODACTLido = "602" then !faz o CSV PALETE
if 1=1 then
					close(tFileOutTempCSVPALETE)
					copy(tFileOutTempCSVPALETE,tFileOutCSVPALETE)
					close(tFileOutTempCSVPALETE)
					remove(tFileOutTempCSVPALETE)
					close(tFileOutCSVPALETE)
					
					copy(tFileOutCSVPALETE,TRACE.OutCsvPalete)
					close(tFileOutCSVPALETE)
					remove(tFileOutCSVPALETE)
					close(TRACE.OutCsvPalete)
endif












flush(TRACE)

endfunction



