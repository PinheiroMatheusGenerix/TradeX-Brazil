%@(#)  source_filename.rte     modif:01-12-2017
!==============================================================================
% File          : source_filename.rte   version 1.0
!------------------------------------------------------------------------------
% Description   : <short program description>
!------------------------------------------------------------------------------
% Author        : <developer name> - COMPANY
!==============================================================================
! 01-12-2017  XX  Creation
! 01-12-2017  XX  <comments>
!==============================================================================
!
! <detailed program description>
!
!==============================================================================
! input file     : <name or rule for naming input file>
! output file    : <name or rule for naming output file> 
! temporary file : <name or rule for naming temporary file> 
!==============================================================================

!base "syslog.cfg" SYSLOG
base "../trace/trace.cfg" TRACE,autoflush off


!===========================================================

! Input/output macros file
#define TX_PROG_INFO "M40_CANCELAMENTO_DEV_MAKRO_CSV_IN"
#include "include/generix_func.inc"
#include "include/RetordGalileu.inc"
#include "include/M40.inc"
#include "include/M62.inc"
!===========================================================

! Initialization section

begin
   !PROCESS_ERRONEOUS := TRUE
   nPos := 1
    nRec := 1
    SYSLOG := find(sSYSLOG,INDEX=number(pINDEX))
    nMessageID := cMessageID
    
    
    
 load (0, build(sHOME,"/config/FM_wms_configuration.properties"), taPARAM)

        tToInfologPrefixFilename := taPARAM["ToInfologPrefixFilenameMAKRO"]

 
    

	
	
	tDbBase			:= "FMWMS"
	tDbUsername		:= taPARAM["WMSDBUSER"]
	tDbPassword		:= taPARAM["WMSDBPASS"]
	tDbUrl			:= taPARAM["WMSDBURL"]
	
	
	
bfSqlInit()
   if not bfSqlJdbc(tDbBase , tDbUsername,tDbPassword,tDbUrl) then
      print("FATAL ",tfSqlErrorStr())
      bfSqlClose(tDbBase)
	  bfMajtraceCancelamento("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na abertura do banco de dados: ",tfSqlErrorStr()))
		
      exit(1)
   endif


	
	
	tFicheiroAVerificar := build(sHOME,"/FromMakro/Verifica",SYSLOG.INDEX,".txt")
	tFicheiroAVerificarV2 := build(sHOME,"/FromMakro/Verifica",SYSLOG.INDEX,".txt.v2")
	tFicheiroAVerificarHash := build(sHOME,"/FromMakro/Verifica",SYSLOG.INDEX,".txt.hash")
	close(SYSLOG.a)
	copy(SYSLOG.a,tFicheiroAVerificar)
	close(SYSLOG.a)
	
	/*
	
	close(tFicheiroAVerificar)
	close(tFicheiroAVerificarV2)
	nContadorWhile := 0
	bTerminaLerFicheiroHash := FALSE
	tLinhaLida := read(tFicheiroAVerificar)
    while tLinhaLida<>EOF do
		nContadorWhile++
		if bTerminaLerFicheiroHash = FALSE then
			if substr(tLinhaLida,1,1) = "*" and nContadorWhile > 1 then
				print(substr(tLinhaLida,1,10)) >> tFicheiroAVerificarV2
				tHashLida := substr(tLinhaLida,18,(length(tLinhaLida)-18))
				bTerminaLerFicheiroHash := TRUE
			else
				print(tLinhaLida,NL) >> tFicheiroAVerificarV2
			endif
		endif
		tLinhaLida := read(tFicheiroAVerificar)
	endwhile
	close(tFicheiroAVerificar)
	close(tFicheiroAVerificarV2)
	
	tCmdHASH := build("CRC32_v2 ",tFicheiroAVerificarV2," >> ",tFicheiroAVerificarHash) 
	close(tFicheiroAVerificarV2)
	log("executing command ",tCmdHASH,NL)
	nRet := system(tCmdHASH)

	log("nRet ", nRet,NL)
	close(tFicheiroAVerificarHash)
	close(tFicheiroAVerificarV2)
	

	tFileHash := tolower(read(tFicheiroAVerificarHash))	
	close(tFicheiroAVerificarHash)
	
	
	
	remove(tFicheiroAVerificarHash)
	remove(tFicheiroAVerificarV2)
	
	
	
	if tFileHash = tHashLida then
		log("chave verificada com sucesso ",NL)
		log("Hash Lida no arquivo ",tHashLida,NL)
		log("Hash calcula ",tFileHash,NL)
		
	else
		log("chave verificada com erro ",NL)
		log("Hash Lida no arquivo ",tHashLida,NL)
		log("Hash calculada ",tFileHash,NL)
		
		!tNomeArquivoDevolverFTPMakro := build(sHOME,"/ToAS2Proxy/FM",tToInfologPrefixFilename,"KOPA",pEDISEND.ORIGINAL.NAME)
		
		
		tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/Erro",nMessageID:R010,".txt")
		print("Erro ao ler o CRC32 do arquivo ",pEDISEND.ORIGINAL.NAME,"!",NL,NL,"Hash lida no arquivo ",tHashLida,NL,"Diferente da hash calculada ",tFileHash,NL,NL,NL,NL) >> tArquivoEmailErro
		close(tArquivoEmailErro)
			tSubjectEmail := build("[WMW]_Erro_de_CRC32_no_arquivo_",pEDISEND.ORIGINAL.NAME)
		tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EmailErroCRC32Ma ",tArquivoEmailErro)
			log("executing command ",tCmdEmailErro,NL)
			nRet := system(tCmdEmailErro)

				log("nRet ", nRet,NL)
				close(tArquivoEmailErro)
		remove(tArquivoEmailErro)
		
		
		 bfMajtraceCancelamento("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na verificacao da HASH. Hash lida: ",tHashLida," Hash calculada: ",tFileHash))
		 exit(1)
	endif
	
	
	
	
*/
	
	
	tNomeArquivoDevolverFTPMakro := build(sHOME,"/ToAS2Proxy/FM",tToInfologPrefixFilename,"OKPA",pEDISEND.ORIGINAL.NAME)
		copy(tFicheiroAVerificar,tNomeArquivoDevolverFTPMakro)
		close(tFicheiroAVerificar)
		close(tNomeArquivoDevolverFTPMakro)
		remove(tFicheiroAVerificar)
	
    tCODACTConst := "001"
    nContadorLinhasEscritas  := 0
	nContadorLinhasEscritasM62  := 0
	nContadorHeader := 0
	nContadorItems := 0
	nMainIndex := 0
	nNumeroLinha := 0
endbegin

!===========================================================



line(not "")

 S_HEADER
   
   
   
   
   

   nNumeroLinha++
   if nNumeroLinha = 1 or nNumeroLinha = 2 then
      !nao faz nada
   else

	  
   taHEADER_stPedidoWMW[nNumeroLinha]          := S_HEADER_stPedidoWMW
   taHEADER_numNF[nNumeroLinha]    := S_HEADER_numNF
   taHEADER_vlSerieNF[nNumeroLinha]    := S_HEADER_vlSerieNF
taHEADER_stAtualizacaoStatus[nNumeroLinha]    := S_HEADER_stAtualizacaoStatus
taHEADER_cdStatusPedido[nNumeroLinha]    := S_HEADER_cdStatusPedido
log("taHEADER_cdStatusPedido[nNumeroLinha] ",taHEADER_cdStatusPedido[nNumeroLinha],NL)

  taHEADER_PedidoRelacionado[nNumeroLinha]          := taHEADER_stPedidoWMW[nNumeroLinha]
	if taHEADER_cdStatusPedido[nNumeroLinha] = "80" then
		!faz processo normal
	else
		if length( taHEADER_cdStatusPedido[nNumeroLinha] ) > 0 then

			if taHEADER_cdStatusPedido[nNumeroLinha] = "90" then !envia a nota fiscal como rubrica
				!SELECT NUMLIV, SNULIV
				!FROM FGE50FM0AO.GELIVE
				!WHERE REFLIV='001513000000015'
				
									
							tQuery := build("SELECT NUMLIV, SNULIV FROM FGE50FM",tToInfologPrefixFilename,".GELIVE WHERE  REFLIV='",taHEADER_stPedidoWMW[nNumeroLinha],"'")



							log("tQuery ",tQuery,NL)

								if bfSqlSet( tDbBase ,"SELECTdb2"  , tQuery) = FALSE then
											 print("FATAL ", tfSqlErrorStr())
											 bfMajtraceCancelamento("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
											exit(1)
									
								endif

								if bfSqlOpen( tDbBase , "SELECTdb2" ) = FALSE then
									 print("FATAL ", tfSqlErrorStr())
									  bfMajtraceCancelamento("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
											exit(1)

								endif
								tNUMLIV := ""
								tSNULIV := ""
								bQueryTemResul := FALSE
								while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
									bQueryTemResul := TRUE	
									
									tNUMLIV := peel(taDb2Array["NUMLIV"]," ")
									tSNULIV := peel(taDb2Array["SNULIV"]," ")

									remove(taDb2Array)

								endwhile
								

								if bfSqlFree( tDbBase , "SELECTdb2"  ) = FALSE then
									print("FATAL", tfSqlErrorStr())
									 bfMajtraceCancelamento("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
											exit(1)
								endif

								if bQueryTemResul = TRUE then
									  tFileOut := build(sHOME,"/ToInfolog/I-FGE50FM",tToInfologPrefixFilename,"GELIRUB_",taHEADER_numNF[nNumeroLinha],".dat")
									tFileOutTemp := build(sHOME,"/ToInfolog/Temp/I-FGE50FM",tToInfologPrefixFilename,"GELIRUB_",taHEADER_numNF[nNumeroLinha],".dat")
										tNameOut := build("I-FGE50FM",tToInfologPrefixFilename,"GELIRUB_",taHEADER_numNF[nNumeroLinha],".dat")
										
										print("NUMLIV;SNULIV;TYPRUB;CODRUB;VALRUB;",NL) >> tFileOutTemp
										print(tNUMLIV,";",tSNULIV,";2;NFE;",taHEADER_numNF[nNumeroLinha],";",NL) >> tFileOutTemp
										close(tFileOutTemp)
										
										copy(tFileOutTemp,tFileOut)
									close(tFileOutTemp)
									remove(tFileOutTemp)
									close(tFileOut)
									bfMajtraceRUBRICA_NF("Recebida","0",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos","")
								endif
								
								nNumeroLinha--
								!desconsidera a linha
				endif			
			
		endif
		
	endif
	  
	  
	  
	  
    endif
   

endline


   
   


! Default statements section
default

enddefault

!===========================================================

! End statements section

end

 
 

 
 nTempNumeroLinha  := 3
while nTempNumeroLinha <= (nNumeroLinha-1) do

  tFileOut := build(sHOME,"/ToInfolog/",tToInfologPrefixFilename,"40",build(nMessageID:R015),".DAT")
  tFileOutTemp := build(sHOME,"/ToInfolog/Temp/",tToInfologPrefixFilename,"40",build(nMessageID:R015),".DAT")
 ! tFileOut := build(sHOME,"/rte/",tToInfologPrefixFilename,"40",build(nMessageID:R015),".DAT")
  tNameOut := build(tToInfologPrefixFilename,"40",build(nMessageID:R015),".DAT")

  
  
  tFileOutM62 := build(sHOME,"/ToInfolog/",tToInfologPrefixFilename,"62",build(nMessageID:R015),".DAT")
  tFileOutTempM62 := build(sHOME,"/ToInfolog/Temp/",tToInfologPrefixFilename,"62",build(nMessageID:R015),".DAT")
 ! tFileOut := build(sHOME,"/rte/",tToInfologPrefixFilename,"62",build(nMessageID:R015),".DAT")
  tNameOutM62 := build(tToInfologPrefixFilename,"62",build(nMessageID:R015),".DAT")


		tQuery := build("SELECT SUM (UVCLIV) AS UVCLIV FROM FGE50FM",tToInfologPrefixFilename,".GESUPD WHERE REFLIV='",taHEADER_stPedidoWMW[nTempNumeroLinha],"'")



log("tQuery ",tQuery,NL)

			if bfSqlSet( tDbBase ,"SELECTdb2"  , tQuery) = FALSE then
						 print("FATAL ", tfSqlErrorStr())
						 bfMajtraceCancelamento("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
						exit(1)
				
			endif

			if bfSqlOpen( tDbBase , "SELECTdb2" ) = FALSE then
				 print("FATAL ", tfSqlErrorStr())
				  bfMajtraceCancelamento("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
						exit(1)

			endif

		bQueryTemResul := FALSE
			while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
				bQueryTemResul := TRUE	
				
				tUVCLIV := peel(taDb2Array["UVCLIV"]," ")
				

				remove(taDb2Array)

			endwhile
			

			if bfSqlFree( tDbBase , "SELECTdb2"  ) = FALSE then
				print("FATAL", tfSqlErrorStr())
				 bfMajtraceCancelamento("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
						exit(1)
			endif


			
			
			
       if number(tUVCLIV) = 0 then
			bfMajtraceRUPTURA_TOTAL("Recebida","0",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos","")
      else
		!cria o M40
	  
				  
					tQuery := build("SELECT A.REFLIV, B.NUMLIV, B.SEQLIV AS NLIREC, B.CODPRO AS CODPRO, C.UNIPRO AS UNICDE, B.UVCCDE , B.UVCLIV AS UVCREA "\
"FROM FGE50FM",tToInfologPrefixFilename,".GELIVE A, FGE50FM",tToInfologPrefixFilename,".GESUPD B, FGE50FM",tToInfologPrefixFilename,".GEPRO C "\
"WHERE A.NUMLIV=B.NUMLIV AND B.CODPRO=C.CODPRO "\
"AND A.REFLIV='",taHEADER_stPedidoWMW[nTempNumeroLinha],"'")

/*
SELECT A.REFLIV, B.NUMLIV, B.SEQLIV AS NLIREC, B.CODPRO AS CODPRO, C.UNIPRO AS UNICDE, B.UVCCDE , B.UVCLIV AS UVCREA
FROM FGE50FM0AO.GELIVE A, FGE50FM0AO.GESUPD B, FGE50FM0AO.GEPRO C 
WHERE A.NUMLIV=B.NUMLIV AND B.CODPRO=C.CODPRO
AND A.REFLIV='nuPedidoRelacionado' 
*/

log("tQuery ",tQuery,NL)

						if bfSqlSet( tDbBase ,"SELECTdb2"  , tQuery) = FALSE then
									 print("FATAL ", tfSqlErrorStr())
									 bfMajtraceCancelamento("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
									exit(1)
							
						endif

						if bfSqlOpen( tDbBase , "SELECTdb2" ) = FALSE then
							 print("FATAL ", tfSqlErrorStr())
							  bfMajtraceCancelamento("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
									exit(1)

						endif
					nNumeroReslQuery := 0
					bQueryTemResul := FALSE
						while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
							bQueryTemResul := TRUE	
							nNumeroReslQuery++
							taREFLIV[nNumeroReslQuery] := peel(taDb2Array["REFLIV"]," ")
							taNUMLIV[nNumeroReslQuery] := peel(taDb2Array["NUMLIV"]," ")
							taNLIREC[nNumeroReslQuery] := peel(taDb2Array["NLIREC"]," ")
							taCODPRO[nNumeroReslQuery] := peel(taDb2Array["CODPRO"]," ")
							taUNICDE[nNumeroReslQuery] := peel(taDb2Array["UNICDE"]," ")
							taUVCREA[nNumeroReslQuery] := peel(taDb2Array["UVCREA"]," ")
							taUVCLIV[nNumeroReslQuery] := peel(taDb2Array["UVCLIV"]," ")

							remove(taDb2Array)

						endwhile
						
						

						if bfSqlFree( tDbBase , "SELECTdb2"  ) = FALSE then
							print("FATAL", tfSqlErrorStr())
							 bfMajtraceCancelamento("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
									exit(1)
						endif

	  
	  
					 if nContadorLinhasEscritas = 0 then

						!0AOwmw_route.str00010.20171026113027.txt
						!0AO2_pedido.20180110105849.txt
						if length(pEDISEND.ORIGINAL.NAME) >= 30 then
						  tLIBEXC := build(substr(pEDISEND.ORIGINAL.NAME,6,6),".",substr(pEDISEND.ORIGINAL.NAME,13,14))
						  else
							tLIBEXC := build(nMessageID:R010)
						  endif
							 R_00HEADER_CODEXC("00")
							 R_00HEADER_SEPEXC(".")
							 R_00HEADER_SCOEXC("00")
							 R_00HEADER_TRTEXC("")
							 R_00HEADER_EMTEXC("FM") 
							 R_00HEADER_RCTEXC("")
							 R_00HEADER_DATEXC(time("now" ,"%Y%m%d"))
							 R_00HEADER_HEUEXC(time("now" ,"%H%M%S"))
							 R_00HEADER_NUMEXC("0000000")
							 R_00HEADER_ACQEXC("0")
							 R_00HEADER_VEREXC("5.00") 
							 R_00HEADER_NOMSYS("")  
							 R_00HEADER_NOMDTQ("M40")
							 R_00HEADER_BIBDTQ("")
							 R_00HEADER_LIBEXC(tLIBEXC) !(build(nMessageID:R010))
							 R_00HEADER_BIBDST("")
							 R_00HEADER_PGMDST("")
							 R_00HEADER_PARDST("")
							 R_00HEADER_CODACT("")
							 R_00HEADER_IGLSIT("")
							 R_00HEADER_EDISIT(build(number(tCentro_De_Custo)))
							 R_00HEADER_IMAEXC("")  
							 R_00HEADER_DISEXC("")
							 
							 flush(0,0,NL) >> tFileOutTemp   !ESCRITA DO HEADER M00.00
							    nContadorLinhasEscritas++
							endif

							
							
							
							
							
							!fazer o M62
							
								tQuery := build("SELECT REFLIV, NUMLIV, NUMSUP,CLILIV FROM FGE50FM",tToInfologPrefixFilename,".GESUPE WHERE TYPSUP <> 3 AND "\
								"REFLIV ='",taHEADER_stPedidoWMW[nTempNumeroLinha],"' ORDER BY REFLIV, NUMSUP")


/*
SELECT REFLIV, NUMLIV, NUMSUP
FROM FGE50FM0AO.GESUPE
WHERE TYPSUP <> 3 
AND REFLIV ='001513000000036'
ORDER BY REFLIV, NUMSUP
*/

log("tQuery ",tQuery,NL)

						if bfSqlSet( tDbBase ,"SELECTdb2"  , tQuery) = FALSE then
									 print("FATAL ", tfSqlErrorStr())
									 bfMajtraceCancelamento("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
									exit(1)
							
						endif

						if bfSqlOpen( tDbBase , "SELECTdb2" ) = FALSE then
							 print("FATAL ", tfSqlErrorStr())
							  bfMajtraceCancelamento("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
									exit(1)

						endif
					nNumeroReslQueryM62 := 0
					bQueryTemResulM62 := FALSE
						while bfSqlFetchArray( tDbBase , "SELECTdb2" ,taDb2Array) = TRUE do
							bQueryTemResulM62 := TRUE	
							nNumeroReslQueryM62++
							taREFLIV_M62[nNumeroReslQueryM62] := peel(taDb2Array["REFLIV"]," ")
							taNUMLIV_M62[nNumeroReslQueryM62] := peel(taDb2Array["NUMLIV"]," ")
							taNUMSUP_M62[nNumeroReslQueryM62] := peel(taDb2Array["NUMSUP"]," ")
							taCLILIV_M62[nNumeroReslQueryM62] := peel(taDb2Array["CLILIV"]," ")

							
							
							
								if nNumeroReslQueryM62=1 then			
														

							
									 if nContadorLinhasEscritasM62 = 0 then

										!0AOwmw_route.str00010.20171026113027.txt
										!0AO2_pedido.20180110105849.txt
											 R_00HEADER_CODEXC("00")
											 R_00HEADER_SEPEXC(".")
											 R_00HEADER_SCOEXC("00")
											 R_00HEADER_TRTEXC("")
											 R_00HEADER_EMTEXC("FM") 
											 R_00HEADER_RCTEXC("")
											 R_00HEADER_DATEXC(time("now" ,"%Y%m%d"))
											 R_00HEADER_HEUEXC(time("now" ,"%H%M%S"))
											 R_00HEADER_NUMEXC("0000000")
											 R_00HEADER_ACQEXC("0")
											 R_00HEADER_VEREXC("5.00") 
											 R_00HEADER_NOMSYS("")  
											 R_00HEADER_NOMDTQ("M40")
											 R_00HEADER_BIBDTQ("")
											 R_00HEADER_LIBEXC(tLIBEXC) !(build(nMessageID:R010))
											 R_00HEADER_BIBDST("")
											 R_00HEADER_PGMDST("")
											 R_00HEADER_PARDST("")
											 R_00HEADER_CODACT("")
											 R_00HEADER_IGLSIT("")
											 R_00HEADER_EDISIT(build(number(tCentro_De_Custo)))
											 R_00HEADER_IMAEXC("")  
											 R_00HEADER_DISEXC("")
											 
											 flush(0,0,NL) >> tFileOutTempM62   !ESCRITA DO HEADER M00.00
												nContadorLinhasEscritasM62++
											endif



														
												R_M6200_CODEXC("62")
												R_M6200_SEPEXC(".")
												R_M6200_SCOEXC("00")
												R_M6200_TRTEXC("2")
												
												R_M6200_CODTRA("9999")
												R_M6200_REFMIT(build("CANCELADOS",substr(taHEADER_stAtualizacaoStatus[nTempNumeroLinha], 1 , 8)))
												R_M6200_TOULIV("9999")
												
									
												
												R_M6200_DATLIV(substr(taHEADER_stAtualizacaoStatus[nTempNumeroLinha], 1 , 8))
												
												
												
												

												R_M6200_KAILIV("999")
												!R_M6200_NUMLIV(taNUMLIV_M62[nNumeroReslQueryM62])
												!R_M6200_NUMSUP(taNUMSUP_M62[nNumeroReslQueryM62])
												
			
												R_M6200_DATCHT(substr(taHEADER_stAtualizacaoStatus[nTempNumeroLinha], 1 , 8))
												R_M6200_HEUCHT(substr(taHEADER_stAtualizacaoStatus[nTempNumeroLinha], 9 , 6))
												
												!R_M6200_CODCAM(A)
												
																	
												  nContadorLinhasEscritasM62++
												  flush(0,0,NL)  >> tFileOutTempM62
									endif	








				  if length(taNUMLIV_M62[nNumeroReslQueryM62]) > 0 then
				   R_M6220_CODEXC("62")
					R_M6220_SEPEXC(".")
					R_M6220_SCOEXC("20")
					R_M6220_TRTEXC("2")
					R_M6220_REFMIT(build("CANCELADOS",substr(taHEADER_stAtualizacaoStatus[nTempNumeroLinha], 1 , 8))) !tREFMIT)
					R_M6220_NUMLIV(taNUMLIV_M62[nNumeroReslQueryM62])
					R_M6220_CLILIV(taCLILIV_M62[nNumeroReslQueryM62])
					R_M6220_NUMSUP(taNUMSUP_M62[nNumeroReslQueryM62])
					R_M6220_KAILIV("999")
						nContadorLinhasEscritasM62++
				  flush(0,0,NL)  >> tFileOutTempM62
				endif
							

							remove(taDb2Array)

						endwhile
						
						

						if bfSqlFree( tDbBase , "SELECTdb2"  ) = FALSE then
							print("FATAL", tfSqlErrorStr())
							 bfMajtraceCancelamento("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
									exit(1)
						endif

	  
	  
		
	  
	  
	  
	  
	  
													
								tREFREC := build(taHEADER_stPedidoWMW[nTempNumeroLinha],"_CAN")
							   R_40HEADER_CODEXC("40")
							   R_40HEADER_SEPEXC(".")
							   R_40HEADER_SCOEXC("00")
							   
							   R_40HEADER_REFREC(tREFREC )
							   R_40HEADER_CODTRE("CAN") !para 80
							  ! R_40HEADER_CODLDR("CAN") !para 80
							   R_40HEADER_EDIFOU("47427653014507")
							   R_40HEADER_CODFOU("47427653014507")
							R_40HEADER_CODACT(tCODACTConst )
							R_40HEADER_DTIREC(substr(taHEADER_stAtualizacaoStatus[nTempNumeroLinha], 1 , 8)) 
							!R_40HEADER_HEIREC(substr(taHEADER_stAtualizacaoStatus[nTempNumeroLinha], 9 , 6))
							R_40HEADER_MSGREC(build(  taHEADER_numNF[nTempNumeroLinha] ,"/", taHEADER_vlSerieNF[nTempNumeroLinha] ))
								flush(0,0,NL) >> tFileOutTemp !ESCRITA DO HEADER M00.00
							nContadorLinhasEscritas++



								  nContadorLinhasEncomenda := 0
								  
								  /*
								  
								  taREFLIV[nNumeroReslQuery] := peel(taDb2Array["REFLIV"]," ")
							taNUMLIV[nNumeroReslQuery] := peel(taDb2Array["NUMLIV"]," ")
							taNLIREC[nNumeroReslQuery] := peel(taDb2Array["NLIREC"]," ")
							taCODPRO[nNumeroReslQuery] := peel(taDb2Array["CODPRO"]," ")
							taUNICDE[nNumeroReslQuery] := peel(taDb2Array["UNICDE"]," ")
							taUVCREA[nNumeroReslQuery] := peel(taDb2Array["UVCREA"]," ")
							taUVCLIV[nNumeroReslQuery] := peel(taDb2Array["UVCLIV"]," ")
								  
								  */

							nContadorTmpTOTAL := 1

							 while nContadorTmpTOTAL <= nNumeroReslQuery do  
								  ! fazer aqui um while e validar
							   R_40_20M40_CODEXC("40")
							   R_40_20M40_SEPEXC(".")
							   R_40_20M40_SCOEXC("20")
							   R_40_20M40_CODACT(tCODACTConst )

							   R_40_20M40_REFREC(tREFREC )
							   R_40_20M40_CODPRO(taCODPRO[nContadorTmpTOTAL ])
							   R_40_20M40_UVCREA(build(number(taUVCREA[nContadorTmpTOTAL ]):R09.0))
							  R_40_20M40_NLIREC(build(number(taNLIREC[nContadorTmpTOTAL ]):R05)) 
							  R_40_20M40_UNICDE(taUNICDE[nContadorTmpTOTAL] )
							!R_40_20M40_CODCLI("5457")   
				
							 flush(0,0,NL) >> tFileOutTemp !ESCRITA DO HEADER M00.00
							nContadorLinhasEscritas++
								nContadorTmpTOTAL++

							
							   
							   
							  
							   endwhile


								
								
								
								R_40_99TRAILLER_CODEXC("40")
							   R_40_99TRAILLER_SEPEXC(".")
							   R_40_99TRAILLER_SCOEXC("99")
							  ! R_40_99TRAILLER_CODACT("ELG")

							   R_40_99TRAILLER_REFREC(tREFREC )
							   R_40_99TRAILLER_CUMLIG(build(number(tCUMLIG) :R04.0)) !ver conversao e  por erro!!!!!
								flush(0,0,NL) >> tFileOutTemp !ESCRITA DO HEADER M00.00
							   nContadorLinhasEscritas++
							   
							   bfMajtraceCancelamento("Recebida","0",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos","")
								  
												
								  
		
	  endif
	  
 
	nTempNumeroLinha++

endwhile
if nContadorLinhasEscritas > 0 then
    R_TRAILLER_CODEXC("99")
    R_TRAILLER_SEPEXC(".")
    R_TRAILLER_SCOEXC("00")
    R_TRAILLER_TRTEXC("")
    R_TRAILLER_EMTEXC("FM")
    R_TRAILLER_RCTEXC("")
    R_TRAILLER_DATEXC(time("now" ,"%Y%m%d"))
    R_TRAILLER_HEUEXC(time("now" ,"H%M%S"))
    R_TRAILLER_NUMEXC("")
    tContadorLinhasEscritas := build(nContadorLinhasEscritas)
    !print(tContadorLinhasEscritas) > "c:/influe/tContadorLinhasEscritas.txt"
    R_TRAILLER_CPTEXC(build(number(tContadorLinhasEscritas):R08.0)) !VER NUMERO DE REGISTOS EXEPTO HEADER E TRAILLER
    !R_TRAILLER_NOMSYS("")
    !R_TRAILLER_NOMDTQ("")
    !R_TRAILLER_BIBDTQ("")
    !R_TRAILLER_IDEMSG("")
    !R_TRAILLER_DISEXC("")

    flush(0,0,NL)  >> tFileOutTemp
    close(tFileOutTemp)
	
	
	
	    R_TRAILLER_CODEXC("99")
    R_TRAILLER_SEPEXC(".")
    R_TRAILLER_SCOEXC("00")
    R_TRAILLER_TRTEXC("")
    R_TRAILLER_EMTEXC("FM")
    R_TRAILLER_RCTEXC("")
    R_TRAILLER_DATEXC(time("now" ,"%Y%m%d"))
    R_TRAILLER_HEUEXC(time("now" ,"H%M%S"))
    R_TRAILLER_NUMEXC("")
    tContadorLinhasEscritas := build(nContadorLinhasEscritas)
    !print(tContadorLinhasEscritas) > "c:/influe/tContadorLinhasEscritas.txt"
    R_TRAILLER_CPTEXC(build(number(tContadorLinhasEscritasM62):R08.0)) !VER NUMERO DE REGISTOS EXEPTO HEADER E TRAILLER
    !R_TRAILLER_NOMSYS("")
    !R_TRAILLER_NOMDTQ("")
    !R_TRAILLER_BIBDTQ("")
    !R_TRAILLER_IDEMSG("")
    !R_TRAILLER_DISEXC("")

    flush(0,0,NL)  >> tFileOutTempM62
    close(tFileOutTempM62)

	endif
	
	
copy(tFileOutTemp,tFileOut)
    close(tFileOutTemp)
	remove(tFileOutTemp)
	    close(tFileOut)


		copy(tFileOutTempM62,tFileOutM62)
    close(tFileOutTempM62)
	remove(tFileOutTempM62)
	    close(tFileOutM62)
		
		
bfSqlClose(tDbBase)

exit(0)

endend


function bfMajtraceRUBRICA_NF(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
   TRACE:=new(build(sHOME,"/trace"))
   TRACE.ESTADO := tStatus
   TRACE.ERRO := tError
   TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
   TRACE.MENSAGEM := tTipoDocumento

   TRACE.PERFIL := "MAKRO"
   TRACE.SENTIDO := "I"
   TRACE.MENSAGEM := "FATURAMENTO"
   TRACE.NUMDOC := taHEADER_PedidoRelacionado[nNumeroLinha] 
   TRACE.DATDOC := time("now" ,"%Y-%m-%d")
   TRACE.MESSAGEID := build(nMessageID:R010)   

    TRACE.REDE := pEDISEND.ORIGINAL.NAME

  TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
 TRACE.FICHEIROSAIDA := tNameOut
!TRACE.LIBEXC := tLIBEXC
   if tStatus = "Recebida" then
    print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
    print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
    print("Traduzida com Sucesso",NL) >> TRACE.Detail
  
  else
          if tStatus = "Erro de Traducao" then

        print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
        print("Erro de Traducao",NL) >> TRACE.Detail
        print(tMensagemErrro,NL) >> TRACE.Detail
        endif
  endif
close(TRACE.Detail)



if nMainIndex = 0 then
close(SYSLOG.a)
copy(SYSLOG.a,TRACE.In)
close(SYSLOG.a)
close(TRACE.In)

 
	nMainIndex := TRACE.INDEX
else
	tCmd := build("ln -s ", sHOME, "/trace/files/In/", nMainIndex, " ", TRACE.In)
	system(tCmd)
endif


if tError="0" then
close(tFileOut)
copy(tFileOut,TRACE.Out)
close(tFileOut)
close(TRACE.Out)

close(tFileOutM62)
copy(tFileOutM62,TRACE.OutM62)
close(tFileOutM62)
close(TRACE.OutM62)

endif

flush(TRACE)
endfunction


!===========================================================


!===========================================================

!===========================================================


!===========================================================



function bfMajtraceRUPTURA_TOTAL(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
   TRACE:=new(build(sHOME,"/trace"))
   TRACE.ESTADO := tStatus
   TRACE.ERRO := tError
   TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
   TRACE.MENSAGEM := tTipoDocumento

   TRACE.PERFIL := "MAKRO"
   TRACE.SENTIDO := "I"
   TRACE.MENSAGEM := "RUPTURA TOTAL"
   TRACE.NUMDOC := taHEADER_PedidoRelacionado[nTempNumeroLinha] 
   TRACE.DATDOC := time("now" ,"%Y-%m-%d")
   TRACE.MESSAGEID := build(nMessageID:R010)   

    TRACE.REDE := pEDISEND.ORIGINAL.NAME

  TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
 TRACE.FICHEIROSAIDA := tNameOut
TRACE.LIBEXC := tLIBEXC
   if tStatus = "Recebida" then
    print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
    print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
    print("Traduzida com Sucesso",NL) >> TRACE.Detail
  
  else
          if tStatus = "Erro de Traducao" then

        print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
        print("Erro de Traducao",NL) >> TRACE.Detail
        print(tMensagemErrro,NL) >> TRACE.Detail
        endif
  endif
close(TRACE.Detail)



if nMainIndex = 0 then
close(SYSLOG.a)
copy(SYSLOG.a,TRACE.In)
close(SYSLOG.a)
close(TRACE.In)

 
	nMainIndex := TRACE.INDEX
else
	tCmd := build("ln -s ", sHOME, "/trace/files/In/", nMainIndex, " ", TRACE.In)
	system(tCmd)
endif

/*
if tError="0" then
close(tFileOutTemp)
copy(tFileOutTemp,TRACE.Out)
close(tFileOutTemp)
close(TRACE.Out)
endif
*/

flush(TRACE)
endfunction


!===========================================================


!===========================================================



function bfMajtraceCancelamento(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
   TRACE:=new(build(sHOME,"/trace"))
   TRACE.ESTADO := tStatus
   TRACE.ERRO := tError
   TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
   TRACE.MENSAGEM := tTipoDocumento

   TRACE.PERFIL := "MAKRO"
   TRACE.SENTIDO := "I"
   TRACE.MENSAGEM := "CANCELAMENTO WMW"
   TRACE.NUMDOC := taHEADER_PedidoRelacionado[nTempNumeroLinha] 
   TRACE.DATDOC := time("now" ,"%Y-%m-%d")
   TRACE.MESSAGEID := build(nMessageID:R010)   

    TRACE.REDE := pEDISEND.ORIGINAL.NAME

  TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
 TRACE.FICHEIROSAIDA := tNameOut
TRACE.LIBEXC := tLIBEXC
   if tStatus = "Recebida" then
    print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
    print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
    print("Traduzida com Sucesso",NL) >> TRACE.Detail
  
  else
          if tStatus = "Erro de Traducao" then

        print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
        print("Erro de Traducao",NL) >> TRACE.Detail
        print(tMensagemErrro,NL) >> TRACE.Detail
        endif
  endif
close(TRACE.Detail)



if nMainIndex = 0 then
close(SYSLOG.a)
copy(SYSLOG.a,TRACE.In)
close(SYSLOG.a)
close(TRACE.In)

 
	nMainIndex := TRACE.INDEX
else
	tCmd := build("ln -s ", sHOME, "/trace/files/In/", nMainIndex, " ", TRACE.In)
	system(tCmd)
endif


if tError="0" then
close(tFileOutTemp)
copy(tFileOutTemp,TRACE.Out)
close(tFileOutTemp)
close(TRACE.Out)


close(tFileOutTempM62)
copy(tFileOutTempM62,TRACE.OutM62)
close(tFileOutTempM62)
close(TRACE.OutM62)
endif


flush(TRACE)
endfunction

