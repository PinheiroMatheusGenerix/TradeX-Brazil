%@(#)  source_filename.rte     modif:29-11-2017
!==============================================================================
% File          : source_filename.rte   version 1.0
!------------------------------------------------------------------------------
% Description   : <short program description>
!------------------------------------------------------------------------------
% Author        : <developer name> - COMPANY
!==============================================================================
! 29-11-2017  XX  Creation
! 29-11-2017  XX  <comments>
!==============================================================================
!
! <detailed program description>
!
!==============================================================================
! input file     : <name or rule for naming input file>
! output file    : <name or rule for naming output file> 
! temporary file : <name or rule for naming temporary file> 
!==============================================================================

base "syslog.cfg" SYSLOG
base "../trace/trace.cfg" TRACE,autoflush off

!===========================================================

! Input/output macros file
#include "include/CUBISCAN.inc"
#include "include/M30.inc"
 
!===========================================================

! Initialization section

begin
   !PROCESS_ERRONEOUS := TRUE
    nPos := 1
    nRec := 1
    SYSLOG := find(sSYSLOG,INDEX=number(pINDEX))
    nMessageID := cMessageID
    
    
    
	
    nNumeroLinha := 0
    tCODACTConst := "001"
    nContadorLinhasEscritas  := 0
endbegin

!===========================================================


line(not "")

   tREGISTO_Cliente := S_REGISTO_Cliente
   tREGISTO_sku := S_REGISTO_sku
   tREGISTO_EAN := S_REGISTO_EAN
   tREGISTO_Altura := S_REGISTO_Altura
   tREGISTO_Largura := S_REGISTO_Largura
   tREGISTO_Comprimento := S_REGISTO_Comprimento
   tREGISTO_PesoEmGr := S_REGISTO_PesoEmGr
   tREGISTO_UnidadeVenda := S_REGISTO_UnidadeVenda
   
   
   if tREGISTO_Cliente = "MAKRO" then
	 load (0, build(sHOME,"/config/FM_wms_configuration.properties"), taPARAM)

        tToInfologPrefixFilename := taPARAM["ToInfologPrefixFilenameMAKRO"]

		tFileOut := build(sHOME,"/ToInfolog/",tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
		tFileOutTemp := build(sHOME,"/ToInfolog/Temp/",tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
		! tFileOut := build(sHOME,"/rte/",tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
		tNameOut := build(tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
   else
		if tREGISTO_Cliente = "LOREAL" then
			load (0, build(sHOME,"/config/FM_wms_configuration.properties"), taPARAM)

			tToInfologPrefixFilename := taPARAM["ToInfologPrefixFilenameLOREAL"]

			tFileOut := build(sHOME,"/ToInfolog/",tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
			tFileOutTemp := build(sHOME,"/ToInfolog/Temp/",tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
			!tFileOut := build(sHOME,"/rte/",tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
			tNameOut := build(tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
		else
			bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Cliente ",tREGISTO_Cliente, " nao configurado!"))
			exit(1)
		endif
	endif
	

	
	
	
  if nContadorLinhasEscritas = 0 then
     R_00HEADER_CODEXC("00")
     R_00HEADER_SEPEXC(".")
     R_00HEADER_SCOEXC("00")
     R_00HEADER_TRTEXC("")
     R_00HEADER_EMTEXC("FM") 
     R_00HEADER_RCTEXC("")
     R_00HEADER_DATEXC(time("now" ,"%Y%m%d"))
     R_00HEADER_HEUEXC(time("now" ,"%H%M%S"))
     R_00HEADER_NUMEXC("0000000")
     R_00HEADER_ACQEXC("0")
     R_00HEADER_VEREXC("5.00") 
     R_00HEADER_NOMSYS("")  
     R_00HEADER_NOMDTQ("M30")
     R_00HEADER_BIBDTQ("")
     R_00HEADER_LIBEXC(build(nMessageID:R010))
     R_00HEADER_BIBDST("")
     R_00HEADER_PGMDST("")
     R_00HEADER_PARDST("")
     R_00HEADER_CODACT("")
     R_00HEADER_IGLSIT("")
     R_00HEADER_EDISIT(build(number(tCentro_De_Custo)))
     R_00HEADER_IMAEXC("")  
     R_00HEADER_DISEXC("")
     
     flush(0,0,NL) >> tFileOutTemp   !ESCRITA DO HEADER M00.00
     
   endif
 
 
   R_30PRODUCTINFORMATION_CODEXC("30")
   R_30PRODUCTINFORMATION_SEPEXC(".")
   R_30PRODUCTINFORMATION_SCOEXC("00")
   R_30PRODUCTINFORMATION_TRTEXC("2")
   R_30PRODUCTINFORMATION_CODACT(tCODACTConst )    !(eECODACT)
   R_30PRODUCTINFORMATION_CODPRO(tREGISTO_sku)  
   
	if tREGISTO_UnidadeVenda = "CAI" then
		   !tCont := build(number(taPDBCOL[nTempNumeroLinha]) *1000 )
		   tCont := tREGISTO_PesoEmGr
		   R_30PRODUCTINFORMATION_PDBCOL(build(number(tCont):R07)) 
		   
		   			  tCont1 := build(number(tREGISTO_Altura) / 100 )
					  
					   
					   nPosicaoPonto := 0
					   nPosicaoPonto := index(tCont1,".")
					   if (nPosicaoPonto) > 0 then
						  if number(substr(tCont1,(nPosicaoPonto+1),1)) >= 5 then
						  tCont1 := build(number(substr(tCont1,1,nPosicaoPonto-1))+1)
						  else
						  tCont1 := build(number(substr(tCont1,1,nPosicaoPonto-1)))
						  endif
					   endif
					  

	
				R_30PRODUCTINFORMATION_HAUCOL(build(number(tCont1 ):R03))
		   
	endif
	
	if tREGISTO_UnidadeVenda = "UNI" then
			tCont := tREGISTO_PesoEmGr
			R_30PRODUCTINFORMATION_PDBUVC(build(number(tCont):R07)) 
			R_30PRODUCTINFORMATION_PDNUVC(build(number(tCont):R07)) 
   endif
   
   
   nContadorLinhasEscritas++
   flush(0,0,NL) >> tFileOutTemp   !ESCRITA DO HEADER M00.00
 
 
 
 

	R_GEEX3002_CODEXC("30")
	R_GEEX3002_SEPEXC(".")
	R_GEEX3002_SCOEXC("02") 
	R_GEEX3002_TRTEXC("2")
	R_GEEX3002_CODACT(tCODACTConst )
	R_GEEX3002_CODPRO(tREGISTO_sku)
	
	
		   if tREGISTO_UnidadeVenda = "UNI" then
			  tCont1 := tREGISTO_Altura
			  tCont2 := tREGISTO_Comprimento
			  tCont3 := tREGISTO_Largura
				R_GEEX3002_HAUUVC2(build(number(tCont1 ):R05))
				R_GEEX3002_LNGUVC2(build(number(tCont2 ):R05))
				R_GEEX3002_LRGUVC2(build(number(tCont3 ):R05))

			endif
			
			
			
			if tREGISTO_UnidadeVenda = "CAI" then
			  tCont1 := tREGISTO_Altura
			  tCont2 := tREGISTO_Comprimento
			  tCont3 := tREGISTO_Largura
				R_GEEX3002_HAUCOL2(build(number(tCont1 ):R05))
				R_GEEX3002_LNGCOL2(build(number(tCont2 ):R05))
				R_GEEX3002_LRGCOL2(build(number(tCont3 ):R05))
				
				R_GEEX3002_HAUCOU2(build(number(tCont1 ):R05)) !acrescentamos em 17-02-2018
				
			endif
			
			
			if tREGISTO_UnidadeVenda = "BLI" then
			  tCont1 := tREGISTO_Altura
			  tCont2 := tREGISTO_Comprimento
			  tCont3 := tREGISTO_Largura
				R_GEEX3002_HAUSPC2(build(number(tCont1 ):R05))
				R_GEEX3002_LNGSPC2(build(number(tCont2 ):R05))
				R_GEEX3002_LRGSPC2(build(number(tCont3 ):R05))
				R_GEEX3002_PDBSPC(build(number(tREGISTO_PesoEmGr ):R07)) 
			endif

	   nContadorLinhasEscritas++
	   flush(0,0,NL) >> tFileOutTemp   !ESCRITA DO HEADER M00.00


	   
	   
	   
    if length(tREGISTO_EAN) > 0 then

      R_30EANINFORMATION_CODEXC("30")
      R_30EANINFORMATION_SEPEXC(".")
      R_30EANINFORMATION_SCOEXC("20")
      R_30EANINFORMATION_TRTEXC("2")
      R_30EANINFORMATION_CODACT(tCODACTConst ) 
      R_30EANINFORMATION_CODPRO(tREGISTO_sku)
      R_30EANINFORMATION_EDIPRO(tREGISTO_EAN)
      R_30EANINFORMATION_EDIPRN("0")
	  
	  if tREGISTO_UnidadeVenda = "UNI" then
		R_30EANINFORMATION_EDIQLF("0")
	  endif
	  if tREGISTO_UnidadeVenda = "CAI" then
		R_30EANINFORMATION_EDIQLF("3")
	  endif
	  if tREGISTO_UnidadeVenda = "BLI" then
		R_30EANINFORMATION_EDIQLF("2")
	  endif
      !R_30EANINFORMATION_DS1PRO(taDS1PRO[nTempNumeroLinha])

      nContadorLinhasEscritas++
      flush(0,0,NL) >> tFileOutTemp   !ESCRITA DO HEADER M00.00   
    endif
    
    

	
	

   
bfMajtrace("Recebida","0",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos","")
endline

! Default statements section
default

enddefault

!===========================================================

! End statements section

end


    R_99FILEFOOTER_CODEXC("99")
    R_99FILEFOOTER_SEPEXC(".")
    R_99FILEFOOTER_SCOEXC("00")
    R_99FILEFOOTER_TRTEXC("")
    R_99FILEFOOTER_EMTEXC("FM")
    R_99FILEFOOTER_RCTEXC("")
    R_99FILEFOOTER_DATEXC(time("now" ,"%Y%m%d"))
    R_99FILEFOOTER_HEUEXC(time("now" ,"H%M%S"))
    R_99FILEFOOTER_NUMEXC("")
    tContadorLinhasEscritas := build(nContadorLinhasEscritas)
    !print(tContadorLinhasEscritas) > "c:/influe/tContadorLinhasEscritas.txt"
    R_99FILEFOOTER_CPTEXC(build(number(tContadorLinhasEscritas):R08.0)) !VER NUMERO DE REGISTOS EXEPTO HEADER E TRAILLER
    !R_99FILEFOOTER_NOMSYS("")
    !R_99FILEFOOTER_NOMDTQ("")
    !R_99FILEFOOTER_BIBDTQ("")
    !R_99FILEFOOTER_IDEMSG("")
    !R_99FILEFOOTER_DISEXC("")

    flush(0,0,NL)  >> tFileOutTemp
    close(tFileOutTemp)

copy(tFileOutTemp,tFileOut)
    close(tFileOutTemp)
	remove(tFileOutTemp)
	    close(tFileOut)


exit(0)

endend


!===========================================================


!===========================================================



function bfMajtrace(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
   TRACE:=new(build(sHOME,"/trace"))
   TRACE.ESTADO := tStatus
   TRACE.ERRO := tError
   TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
   TRACE.MENSAGEM := tTipoDocumento

   TRACE.PERFIL := tREGISTO_Cliente !"MAKRO ou LOREAL"
   TRACE.SENTIDO := "I"
   TRACE.MENSAGEM := "PRODUTOS - CUBISCAN"
   TRACE.NUMDOC := tREGISTO_sku
   TRACE.DATDOC := time("now","%Y-%m-%d")
   TRACE.MESSAGEID := build(nMessageID:R010)   

    TRACE.REDE := substr(pEDISEND.ORIGINAL.NAME,1,20)

  TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
 TRACE.FICHEIROSAIDA := tNameOut

   if tStatus = "Recebida" then
    print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
    print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
    print("Traduzida com Sucesso",NL) >> TRACE.Detail
  
  else
          if tStatus = "Erro de Traducao" then

        print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
        print("Erro de Traducao",NL) >> TRACE.Detail
        print(tMensagemErrro,NL) >> TRACE.Detail
        endif
  endif
close(TRACE.Detail)
close(SYSLOG.a)
copy(SYSLOG.a,TRACE.In)
close(SYSLOG.a)
close(TRACE.In)





if tError="0" then
close(tFileOutTemp)
copy(tFileOutTemp,TRACE.Out)
close(tFileOutTemp)
close(TRACE.Out)
endif
flush(TRACE)
endfunction

