%@(#)  source_filename.rte     modif:29-11-2017
!==============================================================================
% File          : source_filename.rte   version 1.0
!------------------------------------------------------------------------------
% Description   : <short program description>
!------------------------------------------------------------------------------
% Author        : <developer name> - COMPANY
!==============================================================================
! 29-11-2017  XX  Creation
! 29-11-2017  XX  <comments>
!==============================================================================
!
! <detailed program description>
!
!==============================================================================
! input file     : <name or rule for naming input file>
! output file    : <name or rule for naming output file> 
! temporary file : <name or rule for naming temporary file> 
!==============================================================================

base "syslog.cfg" SYSLOG
base "../trace/trace.cfg" TRACE,autoflush off


!===========================================================

! Input/output macros file
#include "include/SUPCOM.inc"
#include "include/M10.inc"
!===========================================================

! Initialization section

begin
   !PROCESS_ERRONEOUS := TRUE
   nPos := 1
    nRec := 1
    SYSLOG := find(sSYSLOG,INDEX=number(pINDEX))
    nMessageID := cMessageID
    
    
    
 load (0, build(sHOME,"/config/FM_wms_configuration.properties"), taPARAM)

        tToInfologPrefixFilename := taPARAM["ToInfologPrefixFilenameMAKRO"]

  tFileOut := build(sHOME,"/ToInfolog/",tToInfologPrefixFilename,"10",build(nMessageID:R015),".DAT")
  tFileOutTemp := build(sHOME,"/ToInfolog/Temp/",tToInfologPrefixFilename,"10",build(nMessageID:R015),".DAT")
  !tFileOut := build(sHOME,"/rte/",tToInfologPrefixFilename,"10",build(nMessageID:R015),".DAT")
  tNameOut := build(tToInfologPrefixFilename,"10",build(nMessageID:R015),".DAT")
    

	
	
	
	tFicheiroAVerificar := build(sHOME,"/FromMakro/Verifica",SYSLOG.INDEX,".txt")
	tFicheiroAVerificarV2 := build(sHOME,"/FromMakro/Verifica",SYSLOG.INDEX,".txt.v2")
	tFicheiroAVerificarHash := build(sHOME,"/FromMakro/Verifica",SYSLOG.INDEX,".txt.hash")
	close(SYSLOG.a)
	copy(SYSLOG.a,tFicheiroAVerificar)
	close(SYSLOG.a)
	close(tFicheiroAVerificar)
	close(tFicheiroAVerificarV2)
	nContadorWhile := 0
	bTerminaLerFicheiroHash := FALSE
	tLinhaLida := read(tFicheiroAVerificar)
    while tLinhaLida<>EOF do
		nContadorWhile++
		if bTerminaLerFicheiroHash = FALSE then
			if substr(tLinhaLida,1,1) = "*" and nContadorWhile > 1 then
				print(substr(tLinhaLida,1,10)) >> tFicheiroAVerificarV2
				tHashLida := substr(tLinhaLida,18,(length(tLinhaLida)-18))
				bTerminaLerFicheiroHash := TRUE
			else
				print(tLinhaLida,NL) >> tFicheiroAVerificarV2
			endif
		endif
		tLinhaLida := read(tFicheiroAVerificar)
	endwhile
	close(tFicheiroAVerificar)
	close(tFicheiroAVerificarV2)
	
	tCmdHASH := build("CRC32_v2 ",tFicheiroAVerificarV2," >> ",tFicheiroAVerificarHash) 
	close(tFicheiroAVerificarV2)
	log("executing command ",tCmdHASH,NL)
	nRet := system(tCmdHASH)

	log("nRet ", nRet,NL)
	close(tFicheiroAVerificarHash)
	close(tFicheiroAVerificarV2)
	

	tFileHash := tolower(read(tFicheiroAVerificarHash))	
	close(tFicheiroAVerificarHash)
	
	
	
	remove(tFicheiroAVerificarHash)
	remove(tFicheiroAVerificarV2)
	
	if tFileHash = tHashLida then
		log("chave verificada com sucesso ",NL)
		log("Hash Lida no arquivo ",tHashLida,NL)
		log("Hash calcula ",tFileHash,NL)
		tNomeArquivoDevolverFTPMakro := build(sHOME,"/ToAS2Proxy/FM",tToInfologPrefixFilename,"OKMA",pEDISEND.ORIGINAL.NAME)
		copy(tFicheiroAVerificar,tNomeArquivoDevolverFTPMakro)
		close(tFicheiroAVerificar)
		close(tNomeArquivoDevolverFTPMakro)
		remove(tFicheiroAVerificar)
	else
		log("chave verificada com erro ",NL)
		log("Hash Lida no arquivo ",tHashLida,NL)
		log("Hash calculada ",tFileHash,NL)
		
		!tNomeArquivoDevolverFTPMakro := build(sHOME,"/ToAS2Proxy/FM",tToInfologPrefixFilename,"KOMA",pEDISEND.ORIGINAL.NAME)
		tNomeArquivoDevolverFTPMakro := build(sHOME,"/ToAS2Proxy/FM",tToInfologPrefixFilename,"OKMA",pEDISEND.ORIGINAL.NAME)
		copy(tFicheiroAVerificar,tNomeArquivoDevolverFTPMakro)
		close(tFicheiroAVerificar)
		close(tNomeArquivoDevolverFTPMakro)
		remove(tFicheiroAVerificar)
		
		
		
				tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/Erro",nMessageID:R010,".txt")
		print("Erro ao ler o CRC32 do arquivo ",pEDISEND.ORIGINAL.NAME,"!",NL,NL,"Hash lida no arquivo ",tHashLida,NL,"Diferente da hash calculada ",tFileHash,NL,NL,NL,NL) >> tArquivoEmailErro
		close(tArquivoEmailErro)
			tSubjectEmail := build("[MBS]_Erro_de_CRC32_no_arquivo_",pEDISEND.ORIGINAL.NAME)
		tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EmailErroCRC32Ma ",tArquivoEmailErro)
			log("executing command ",tCmdEmailErro,NL)
			nRet := system(tCmdEmailErro)

				log("nRet ", nRet,NL)
				close(tArquivoEmailErro)
		remove(tArquivoEmailErro)
		
		 bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na verificacao da HASH. Hash lida: ",tHashLida," Hash calculada: ",tFileHash))
		 exit(1)
	endif
	
	
    nNumeroLinha := 0
    tCODACTConst := "001"
    nContadorLinhasEscritas  := 0
endbegin

!===========================================================


line(not "")

   nNumeroLinha++
   if nNumeroLinha = 1 then
      !nao faz nada
   else
   
      taNOMFOU[nNumeroLinha] := S_SUPCOM_TB_NAME
      taTYPFOU[nNumeroLinha] := "1" !S_SUPCOM_TB_SUPPL_TYPE
      taLIBCPL[nNumeroLinha] := S_SUPCOM_TB_CAINSEST
      taCODFOU[nNumeroLinha] := substr(S_SUPCOM_TB_CACGC,2,length(S_SUPCOM_TB_CACGC)-1) 
      taRSPFOU[nNumeroLinha] := S_SUPCOM_TB_CONTACT_PERS
      taTELFOU[nNumeroLinha] := S_SUPCOM_TB_ANCTTTEL
      taAD1FOU[nNumeroLinha] := S_SUPCOM_TB_ADDRESS
      taCPIFOU[nNumeroLinha] := S_SUPCOM_TB_CNCEP
      taVILFOU[nNumeroLinha] := build(S_SUPCOM_TB_TOWN," - ", S_SUPCOM_TB_CAUFE )	
      taFAXFOU[nNumeroLinha] := S_SUPCOM_TB_ANFAX 	
      taEMLADR[nNumeroLinha] := S_SUPCOM_TB_CAEMAIL 	
   endif
   

endline
! Default statements section
default

enddefault

!===========================================================

! End statements section

end

  if nContadorLinhasEscritas = 0 then
if length(pEDISEND.ORIGINAL.NAME) >= 28 then
	tLIBEXC := build(substr(pEDISEND.ORIGINAL.NAME,7,6),".",substr(pEDISEND.ORIGINAL.NAME,23,5))
	else
	tLIBEXC := build(nMessageID:R010)
	endif
     R_00HEADER_CODEXC("00")
     R_00HEADER_SEPEXC(".")
     R_00HEADER_SCOEXC("00")
     R_00HEADER_TRTEXC("")
     R_00HEADER_EMTEXC("FM") 
     R_00HEADER_RCTEXC("")
     R_00HEADER_DATEXC(time("now" ,"%Y%m%d"))
     R_00HEADER_HEUEXC(time("now" ,"%H%M%S"))
     R_00HEADER_NUMEXC("0000000")
     R_00HEADER_ACQEXC("0")
     R_00HEADER_VEREXC("5.00") 
     R_00HEADER_NOMSYS("")  
     R_00HEADER_NOMDTQ("M10")
     R_00HEADER_BIBDTQ("")
     R_00HEADER_LIBEXC(tLIBEXC) !(build(nMessageID:R010))
     R_00HEADER_BIBDST("")
     R_00HEADER_PGMDST("")
     R_00HEADER_PARDST("")
     R_00HEADER_CODACT("")
     R_00HEADER_IGLSIT("")
     R_00HEADER_EDISIT(build(number(tCentro_De_Custo)))
     R_00HEADER_IMAEXC("")  
     R_00HEADER_DISEXC("")
     
     flush(0,0,NL) >> tFileOutTemp   !ESCRITA DO HEADER M00.00
     
   endif
 
 

 
 nTempNumeroLinha  := 2
while nTempNumeroLinha <= (nNumeroLinha-1) do
! if baRegistoAConsiderar[nTempNumeroLinha] = TRUE then




      R_10HEADER_CODEXC("10")
      R_10HEADER_SEPEXC(".")
      R_10HEADER_SCOEXC("00")
      R_10HEADER_TRTEXC("2")
      R_10HEADER_CODACT(tCODACTConst)
      R_10HEADER_CODFOU(taCODFOU[nTempNumeroLinha ]) !VER
      R_10HEADER_TYPFOU(taTYPFOU[nTempNumeroLinha ])
      R_10HEADER_NOMFOU(substr(taNOMFOU[nTempNumeroLinha ],1,30))
	  if length(taAD1FOU[nTempNumeroLinha ]) = 0 then
		R_10HEADER_AD1FOU(".")
	  else
		  R_10HEADER_AD1FOU(substr(taAD1FOU[nTempNumeroLinha ],1,30))
		  if length(taAD1FOU[nTempNumeroLinha ]) >= 31 then
			 R_10HEADER_AD2FOU(substr(taAD1FOU[nTempNumeroLinha ],31,5))
		  endif
	  endif
      if length(taCPIFOU[nTempNumeroLinha ]) > 0 then
         R_10HEADER_CPOFOU(build(number(substr(taCPIFOU[nTempNumeroLinha ],1,5)):R05.0))
      else
         R_10HEADER_CPOFOU("00000")
      endif
      if length(taVILFOU[nTempNumeroLinha ]) > 0 then
         R_10HEADER_VILFOU(taVILFOU[nTempNumeroLinha ])
      else
         R_10HEADER_VILFOU(".")
      endif
      R_10HEADER_PAYFOU("BRA")
      R_10HEADER_TELFOU(taTELFOU[nTempNumeroLinha ])
      R_10HEADER_FAXFOU(taFAXFOU[nTempNumeroLinha ])
      R_10HEADER_EDIFOU(taENTIDADE_ID[nTempNumeroLinha ])
      !R_10HEADER_EMLADR()
     ! R_10HEADER_LIBCPL(build("I.E.:",taLIBCPL[nTempNumeroLinha ]))
      !R_10HEADER_RSPFOU()
      /*
      if taENTIDADE_ID[nTempNumeroLinha ] = "1" then
         R_10HEADER_CODTRE("GSM")
      else
         R_10HEADER_CODTRE("STD")
      endif
      */
      !R_10HEADER_GSTAVI("0")
      R_10HEADER_GSTRCP("2")
      !R_10HEADER_TYPPRT("1")
      if length(taCPIFOU[nTempNumeroLinha ]) > 0 then
      R_10HEADER_CPIFOU(taCPIFOU[nTempNumeroLinha ])
      else
         R_10HEADER_CPIFOU(".")
      endif
      
      !R_10HEADER_EMBTIE("0")
      nContadorLinhasEscritas++
      flush(0,0,NL)  >> tFileOutTemp
       
      
 
       R_10_01_CODEXC("10")
      R_10_01_SEPEXC(".")
      R_10_01_SCOEXC("01")
      R_10_01_TRTEXC("2")
      R_10_01_CODACT(tCODACTConst)
      R_10_01_CODFOU(taCODFOU[nTempNumeroLinha ]) !VER
      R_10_01_RSPFOU(taRSPFOU[nTempNumeroLinha ])
      R_10_01_EMLADR(taEMLADR[nTempNumeroLinha ])
   
   nContadorLinhasEscritas++
   flush(0,0,NL) >> tFileOutTemp   !ESCRITA DO HEADER M00.00



      R_10_02_CODEXC("10")
      R_10_02_SEPEXC(".")
      R_10_02_SCOEXC("02")
      R_10_02_TRTEXC("2")
      R_10_02_CODACT(tCODACTConst)
      R_10_02_CODFOU(taCODFOU[nTempNumeroLinha ]) !VER
      R_10_02_LIBCPL(build("I.E.:",taLIBCPL[nTempNumeroLinha ]))
    
   
   nContadorLinhasEscritas++
   flush(0,0,NL) >> tFileOutTemp   !ESCRITA DO HEADER M00.00
	nTempNumeroLinha++

endwhile

    R_99FILEFOOTER_CODEXC("99")
    R_99FILEFOOTER_SEPEXC(".")
    R_99FILEFOOTER_SCOEXC("00")
    R_99FILEFOOTER_TRTEXC("")
    R_99FILEFOOTER_EMTEXC("FM")
    R_99FILEFOOTER_RCTEXC("")
    R_99FILEFOOTER_DATEXC(time("now" ,"%Y%m%d"))
    R_99FILEFOOTER_HEUEXC(time("now" ,"H%M%S"))
    R_99FILEFOOTER_NUMEXC("")
    tContadorLinhasEscritas := build(nContadorLinhasEscritas)
    !print(tContadorLinhasEscritas) > "c:/influe/tContadorLinhasEscritas.txt"
    R_99FILEFOOTER_CPTEXC(build(number(tContadorLinhasEscritas):R08.0)) !VER NUMERO DE REGISTOS EXEPTO HEADER E TRAILLER
    !R_99FILEFOOTER_NOMSYS("")
    !R_99FILEFOOTER_NOMDTQ("")
    !R_99FILEFOOTER_BIBDTQ("")
    !R_99FILEFOOTER_IDEMSG("")
    !R_99FILEFOOTER_DISEXC("")

    flush(0,0,NL)  >> tFileOutTemp
    close(tFileOutTemp)

copy(tFileOutTemp,tFileOut)
    close(tFileOutTemp)
	remove(tFileOutTemp)
	    close(tFileOut)

bfMajtrace("Recebida","0",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos","")


exit(0)

endend


!===========================================================


!===========================================================



function bfMajtrace(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
   TRACE:=new(build(sHOME,"/trace"))
   TRACE.ESTADO := tStatus
   TRACE.ERRO := tError
   TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
   TRACE.MENSAGEM := tTipoDocumento

   TRACE.PERFIL := "MAKRO"
   TRACE.SENTIDO := "I"
   TRACE.MENSAGEM := "FORNECEDORES"
   TRACE.NUMDOC := time("now","%Y-%m-%d")
   TRACE.DATDOC := time("now","%Y-%m-%d")
   TRACE.MESSAGEID := build(nMessageID:R010)   

    TRACE.REDE := pEDISEND.ORIGINAL.NAME

  TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
 TRACE.FICHEIROSAIDA := tNameOut
 TRACE.LIBEXC := tLIBEXC

   if tStatus = "Recebida" then
    print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
    print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
    print("Traduzida com Sucesso",NL) >> TRACE.Detail
  
  else
          if tStatus = "Erro de Traducao" then

        print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
        print("Erro de Traducao",NL) >> TRACE.Detail
        print(tMensagemErrro,NL) >> TRACE.Detail
        endif
  endif
close(TRACE.Detail)
close(SYSLOG.a)
copy(SYSLOG.a,TRACE.In)
close(SYSLOG.a)
close(TRACE.In)





if tError="0" then
copy(tFileOut,TRACE.Out)
close(tFileOut)
close(TRACE.Out)
endif
flush(TRACE)
endfunction


