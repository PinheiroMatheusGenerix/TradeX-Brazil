%@(#)  source_filename.rte     modif:29-11-2017
!==============================================================================
% File          : source_filename.rte   version 1.0
!------------------------------------------------------------------------------
% Description   : <short program description>
!------------------------------------------------------------------------------
% Author        : <developer name> - COMPANY
!==============================================================================
! 29-11-2017  XX  Creation
! 29-11-2017  XX  <comments>
!==============================================================================
!
! <detailed program description>
!
!==============================================================================
! input file     : <name or rule for naming input file>
! output file    : <name or rule for naming output file> 
! temporary file : <name or rule for naming temporary file> 
!==============================================================================

base "syslog.cfg" SYSLOG
base "../trace/trace.cfg" TRACE,autoflush off

!===========================================================

! Input/output macros file
#include "include/ARTCOM.inc"
#include "include/M30.inc"
 
!===========================================================

! Initialization section

begin
   !PROCESS_ERRONEOUS := TRUE
    nPos := 1
    nRec := 1
    SYSLOG := find(sSYSLOG,INDEX=number(pINDEX))
    nMessageID := cMessageID
    
    
    
 load (0, build(sHOME,"/config/FM_wms_configuration.properties"), taPARAM)

        tToInfologPrefixFilename := taPARAM["ToInfologPrefixFilenameMAKRO"]

  tFileOut := build(sHOME,"/ToInfolog/",tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
  tFileOutTemp := build(sHOME,"/ToInfolog/Temp/",tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
 ! tFileOut := build(sHOME,"/rte/",tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
  tNameOut := build(tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
    

	
	
	
	tFicheiroAVerificar := build(sHOME,"/FromMakro/Verifica",SYSLOG.INDEX,".txt")
	tFicheiroAVerificarV2 := build(sHOME,"/FromMakro/Verifica",SYSLOG.INDEX,".txt.v2")
	tFicheiroAVerificarHash := build(sHOME,"/FromMakro/Verifica",SYSLOG.INDEX,".txt.hash")
	close(SYSLOG.a)
	copy(SYSLOG.a,tFicheiroAVerificar)
	close(SYSLOG.a)
	close(tFicheiroAVerificar)
	close(tFicheiroAVerificarV2)
	nContadorWhile := 0
	bTerminaLerFicheiroHash := FALSE
	tLinhaLida := read(tFicheiroAVerificar)
    while tLinhaLida<>EOF do
		nContadorWhile++
		if bTerminaLerFicheiroHash = FALSE then
			if substr(tLinhaLida,1,1) = "*" and nContadorWhile > 1 then
				print(substr(tLinhaLida,1,10)) >> tFicheiroAVerificarV2
				tHashLida := substr(tLinhaLida,18,(length(tLinhaLida)-18))
				bTerminaLerFicheiroHash := TRUE
			else
				print(tLinhaLida,NL) >> tFicheiroAVerificarV2
			endif
		endif
		tLinhaLida := read(tFicheiroAVerificar)
	endwhile
	close(tFicheiroAVerificar)
	close(tFicheiroAVerificarV2)
	
	tCmdHASH := build("CRC32_v2 ",tFicheiroAVerificarV2," >> ",tFicheiroAVerificarHash) 
	close(tFicheiroAVerificarV2)
	log("executing command ",tCmdHASH,NL)
	nRet := system(tCmdHASH)

	log("nRet ", nRet,NL)
	close(tFicheiroAVerificarHash)
	close(tFicheiroAVerificarV2)
	

	tFileHash := tolower(read(tFicheiroAVerificarHash))	
	close(tFicheiroAVerificarHash)
	
	
	
	remove(tFicheiroAVerificarHash)
	remove(tFicheiroAVerificarV2)
	
	if tFileHash = tHashLida then
		log("chave verificada com sucesso ",NL)
		log("Hash Lida no arquivo ",tHashLida,NL)
		log("Hash calcula ",tFileHash,NL)
		tNomeArquivoDevolverFTPMakro := build(sHOME,"/ToAS2Proxy/FM",tToInfologPrefixFilename,"OKMA",pEDISEND.ORIGINAL.NAME)
		copy(tFicheiroAVerificar,tNomeArquivoDevolverFTPMakro)
		close(tFicheiroAVerificar)
		close(tNomeArquivoDevolverFTPMakro)
		remove(tFicheiroAVerificar)
	else
		log("chave verificada com erro ",NL)
		log("Hash Lida no arquivo ",tHashLida,NL)
		log("Hash calculada ",tFileHash,NL)
		
		!tNomeArquivoDevolverFTPMakro := build(sHOME,"/ToAS2Proxy/FM",tToInfologPrefixFilename,"KOMA",pEDISEND.ORIGINAL.NAME)
		tNomeArquivoDevolverFTPMakro := build(sHOME,"/ToAS2Proxy/FM",tToInfologPrefixFilename,"OKMA",pEDISEND.ORIGINAL.NAME)
		copy(tFicheiroAVerificar,tNomeArquivoDevolverFTPMakro)
		close(tFicheiroAVerificar)
		close(tNomeArquivoDevolverFTPMakro)
		remove(tFicheiroAVerificar)
		
		
		
				tArquivoEmailErro := build(sHOME,"/EmailsAEnviar/Erro",nMessageID:R010,".txt")
		print("Erro ao ler o CRC32 do arquivo ",pEDISEND.ORIGINAL.NAME,"!",NL,NL,"Hash lida no arquivo ",tHashLida,NL,"Diferente da hash calculada ",tFileHash,NL,NL,NL,NL) >> tArquivoEmailErro
		close(tArquivoEmailErro)
			tSubjectEmail := build("[MBS]_Erro_de_CRC32_no_arquivo_",pEDISEND.ORIGINAL.NAME)
		tCmdEmailErro := build("edisend EMAIL.SUBJECT=\"",tSubjectEmail,"\" EmailErroCRC32Ma ",tArquivoEmailErro)
			log("executing command ",tCmdEmailErro,NL)
			nRet := system(tCmdEmailErro)

				log("nRet ", nRet,NL)
				close(tArquivoEmailErro)
		remove(tArquivoEmailErro)
		
		
		 bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na verificacao da HASH. Hash lida: ",tHashLida," Hash calculada: ",tFileHash))
		 exit(1)
	endif
	
	
	
	
	
	
	
    nNumeroLinha := 0
    tCODACTConst := "001"
    nContadorLinhasEscritas  := 0
endbegin

!===========================================================


line(not "")

   nNumeroLinha++
   if nNumeroLinha = 1 then
      !nao faz nada
   else
   
      taCODPRO[nNumeroLinha] := S_ARTCOM_ART_NO
      taDS1PRO[nNumeroLinha] := S_ARTCOM_TB_DEART
      taFAMPRO[nNumeroLinha] := build(S_ARTCOM_TB_CNGRP, S_ARTCOM_TB_CNSUBGRP)
      taSPCPRO[nNumeroLinha] := S_ARTCOM_TB_QTUNIMAK
      taPCBPRO[nNumeroLinha] := S_ARTCOM_TB_QTUNIFOR 
      taMESPRO[nNumeroLinha] := S_ARTCOM_TB_CAPES 
      taFOUPRO[nNumeroLinha] := S_ARTCOM_SUPPL_NO
      taEDIPRO[nNumeroLinha] := S_ARTCOM_TB_DUN14
      taPDBCOL[nNumeroLinha] := S_ARTCOM_TB_LOG_GROSS_WEIGHT
      taLRGCOL[nNumeroLinha] := S_ARTCOM_TB_LOG_WIDTH_PER_BOX
      taLNGCOL[nNumeroLinha] := S_ARTCOM_TB_LOG_LENGHT_PER_BOX
      taHAUCOL[nNumeroLinha] := S_ARTCOM_TB_LOG_HEIGHT_PER_BOX
      taCOUPAL[nNumeroLinha] := S_ARTCOM_TB_LOG_LAYERS_PER_PALLET
      taCOLCOU[nNumeroLinha] := S_ARTCOM_TB_LOG_BOXES_PER_LAYER
      taNBJFVI[nNumeroLinha] := S_ARTCOM_TB_LOG_SHELF_LIFE
	  !taCODRUB[nNumeroLinha] := S_ARTCOM_TB_CATIPEMB
	   taUNIPRODS1PRO[nNumeroLinha] := S_ARTCOM_TB_CATIPEMB
	   if taUNIPRODS1PRO[nNumeroLinha] = "CX" then
			taUNIPRO[nNumeroLinha] := "CAX"
		else
			taUNIPRO[nNumeroLinha] := taUNIPRODS1PRO[nNumeroLinha]
	   endif
      taANAPRO[nNumeroLinha] := S_ARTCOM_TB_MBS_REG_NO
      taTEMPRE[nNumeroLinha] := S_ARTCOM_TB_LOG_TEMPERATURE
	  taTRTEXCAux[nNumeroLinha] := S_ARTCOM_TB_MBS_STATUS
	  
	  
	 
	  taCalculoTerco[nNumeroLinha] := build(number(S_ARTCOM_TB_LOG_SHELF_LIFE) / 3)
	  
	  					nPosicaoPonto := 0
					   nPosicaoPonto := index(taCalculoTerco[nNumeroLinha],".")
					   if (nPosicaoPonto) > 0 then
	
						  tCont1 := build(number(substr(taCalculoTerco[nNumeroLinha],1,nPosicaoPonto-1)))
						else
							tCont1 := taCalculoTerco[nNumeroLinha]
						  
					   endif
					   taCalculoTerco[nNumeroLinha] := tCont1
					   
		  taCalculoQuinto[nNumeroLinha] := build(number(S_ARTCOM_TB_LOG_SHELF_LIFE) / 5)
	  
	  					nPosicaoPonto := 0
					   nPosicaoPonto := index(taCalculoQuinto[nNumeroLinha],".")
					   if (nPosicaoPonto) > 0 then
	
						  tCont1 := build(number(substr(taCalculoQuinto[nNumeroLinha],1,nPosicaoPonto-1)))
						else
							tCont1 := taCalculoQuinto[nNumeroLinha]
						  
					   endif
					   taCalculoQuinto[nNumeroLinha] := tCont1
	  
	  !if taTRTEXCAux[nNumeroLinha] = "1" then
		taTRTEXC[nNumeroLinha] := "2"
	  !endif
	  !if taTRTEXCAux[nNumeroLinha] = "5" or taTRTEXCAux[nNumeroLinha] = "9" then
	!	taTRTEXC[nNumeroLinha] := "9"
	 ! endif
   endif
   

endline

! Default statements section
default

enddefault

!===========================================================

! End statements section

end

  if nContadorLinhasEscritas = 0 then
if length(pEDISEND.ORIGINAL.NAME) >= 28 then
	tLIBEXC := build(substr(pEDISEND.ORIGINAL.NAME,7,6),".",substr(pEDISEND.ORIGINAL.NAME,23,5))
	else
	tLIBEXC := build(nMessageID:R010)
	endif
     R_00HEADER_CODEXC("00")
     R_00HEADER_SEPEXC(".")
     R_00HEADER_SCOEXC("00")
     R_00HEADER_TRTEXC("")
     R_00HEADER_EMTEXC("FM") 
     R_00HEADER_RCTEXC("")
     R_00HEADER_DATEXC(time("now" ,"%Y%m%d"))
     R_00HEADER_HEUEXC(time("now" ,"%H%M%S"))
     R_00HEADER_NUMEXC("0000000")
     R_00HEADER_ACQEXC("0")
     R_00HEADER_VEREXC("5.00") 
     R_00HEADER_NOMSYS("")  
     R_00HEADER_NOMDTQ("M30")
     R_00HEADER_BIBDTQ("")
     R_00HEADER_LIBEXC(tLIBEXC) !(build(nMessageID:R010))
     R_00HEADER_BIBDST("")
     R_00HEADER_PGMDST("")
     R_00HEADER_PARDST("")
     R_00HEADER_CODACT("")
     R_00HEADER_IGLSIT("")
     R_00HEADER_EDISIT(build(number(tCentro_De_Custo)))
     R_00HEADER_IMAEXC("")  
     R_00HEADER_DISEXC("")
     
     flush(0,0,NL) >> tFileOutTemp   !ESCRITA DO HEADER M00.00
     
   endif
 
 
 print("nNumeroConsidera  ",nNumeroConsidera ,NL)
 
 nTempNumeroLinha  := 2
while nTempNumeroLinha <= (nNumeroLinha-1) do
! if baRegistoAConsiderar[nTempNumeroLinha] = TRUE then
   R_30PRODUCTINFORMATION_CODEXC("30")
   R_30PRODUCTINFORMATION_SEPEXC(".")
   R_30PRODUCTINFORMATION_SCOEXC("00")
   R_30PRODUCTINFORMATION_TRTEXC(taTRTEXC[nTempNumeroLinha]) !("2")
   R_30PRODUCTINFORMATION_CODACT(tCODACTConst )    !(eECODACT)
   R_30PRODUCTINFORMATION_CODPRO(taCODPRO[nTempNumeroLinha])  
   !R_30PRODUCTINFORMATION_VALPRO(eEVALPRO)
   !R_30PRODUCTINFORMATION_DS1PRO(substr(tDSPROAux,1,30))
   !R_30PRODUCTINFORMATION_DS2PRO(substr(tDSPROAux,1,30))
   R_30PRODUCTINFORMATION_FOUPRO(taFOUPRO[nTempNumeroLinha])
   !R_30PRODUCTINFORMATION_VAPPRO(eEVAPPRO) 
   R_30PRODUCTINFORMATION_FAMPRO(taFAMPRO[nTempNumeroLinha])
   R_30PRODUCTINFORMATION_ANAPRO(build("NCM:",taANAPRO[nTempNumeroLinha]))   ! M 
   !R_30PRODUCTINFORMATION_EDIPRO(tDUN_14)   ! M  
   !R_30PRODUCTINFORMATION_SPCPRO(build(number(taSPCPRO[nTempNumeroLinha]):R04))
   tCont := build(number(taPCBPRO[nTempNumeroLinha]) / number(taSPCPRO[nTempNumeroLinha]))
   
   R_30PRODUCTINFORMATION_PCBPRO(build(number(tCont):R05))   ! M  
   !R_30PRODUCTINFORMATION_UNIPRO(eEUNIPRO)   ! M  
   if taMESPRO[nTempNumeroLinha] = "0" then
	R_30PRODUCTINFORMATION_MESPRO("1")   ! M 
   endif
   if taMESPRO[nTempNumeroLinha] = "1" then
	R_30PRODUCTINFORMATION_MESPRO("2")   ! M 
   endif
!   R_30PRODUCTINFORMATION_PDBUVC("0001256")   ! M 
   !R_30PRODUCTINFORMATION_PDNUVC(eEPDNUVC)   ! M  
   R_30PRODUCTINFORMATION_DS1PRO(build(taUNIPRODS1PRO[nTempNumeroLinha]," ",taSPCPRO[nTempNumeroLinha]," ",taDS1PRO[nTempNumeroLinha]))
  ! R_30PRODUCTINFORMATION_FOUPRO(build(number(tFabricante)))! ver
   tConta := build(number(taNBJFVI[nTempNumeroLinha]) - number(taCalculoTerco[nTempNumeroLinha]))
   if number(tConta) >= 1000 then
	tConta := "999"
   endif
   R_30PRODUCTINFORMATION_NBJDLV(build(number(tConta):R03))
   
   !R_30PRODUCTINFORMATION_TOPPRN(tPLUV_PLU_do_Composto) !ver
   
  ! tCont := build(number(taPDBCOL[nTempNumeroLinha]) *1000 )!depois comentar 08-01-2018
   
  ! R_30PRODUCTINFORMATION_PDBCOL(build(number(tCont):R07)) !depois comentar 08-01-2018
      
    !  tCont1 := build(number(taHAUCOL[nTempNumeroLinha]) * 100) !depois comentar 08-01-2018
    !  tCont2 := build(number(taLNGCOL[nTempNumeroLinha]) * 100) !depois comentar 08-01-2018
    !  tCont3 := build(number(taLRGCOL[nTempNumeroLinha]) * 100) !depois comentar 08-01-2018
   
   !R_30PRODUCTINFORMATION_HAUCOL(build(number(tCont1 ):R03)) !depois comentar 08-01-2018
   !R_30PRODUCTINFORMATION_LNGCOL(build(number(tCont2 ):R03)) !depois comentar 08-01-2018
   !R_30PRODUCTINFORMATION_LRGCOL(build(number(tCont3 ):R03)) !depois comentar 08-01-2018
   print("taFinalMaterialDescriptionUN[nTempNumeroLinha] ",taFinalMaterialDescriptionUN[nTempNumeroLinha],NL)
   print("[nTempNumeroLinha] ",nTempNumeroLinha,NL)

   /*
   nContComprimento := number(taFinalComprimentoPAL[nTempNumeroLinha])/number(taFinalComprimentoCX[nTempNumeroLinha])
   nContAltura := number(taFinalAlturaPAL[nTempNumeroLinha])/number(taFinalAlturaCX[nTempNumeroLinha])
   nContLargura := number(taFinalLarguraPAL[nTempNumeroLinha])/number(taFinalLarguraCX[nTempNumeroLinha])
   
   nMenorValorDert := nfRetornaMenorValor(nContComprimento,nContAltura,nContLargura )
   tMenorValorDert := build(nMenorValorDert)
   tCont := build(substr(tMenorValorDert,1,index(tMenorValorDert,".")-1))
   */
   
   tCont := build(number(taCOLCOU[nTempNumeroLinha]))
   R_30PRODUCTINFORMATION_COLCOU(build(number(tCont):R04)) !ver
   R_30PRODUCTINFORMATION_COLCOU2(build(number(tCont ):R04)) !ver
   tCont := build(number(taCOUPAL[nTempNumeroLinha]))
	R_30PRODUCTINFORMATION_COUPAL(build(number(tCont ):R04)) !ver
 R_30PRODUCTINFORMATION_COUPAL2(build(number(tCont ):R04)) !ver
 
 R_30PRODUCTINFORMATION_UNIPRO(taUNIPRO[nTempNumeroLinha])
 if number(taNBJFVI[nTempNumeroLinha]) = 0 then
	R_30PRODUCTINFORMATION_CODMDR("SDL")
else
	R_30PRODUCTINFORMATION_CODMDR("STD")
endif	
	
   
   
   nContadorLinhasEscritas++
   flush(0,0,NL) >> tFileOutTemp   !ESCRITA DO HEADER M00.00




R_GEEX3002_CODEXC("30")
R_GEEX3002_SEPEXC(".")
R_GEEX3002_SCOEXC("02") 
R_GEEX3002_TRTEXC(taTRTEXC[nTempNumeroLinha]) !("2")
 R_GEEX3002_CODACT(tCODACTConst )
 R_GEEX3002_CODPRO(taCODPRO[nTempNumeroLinha])
 R_GEEX3002_TEMPRE(taTEMPRE[nTempNumeroLinha])
    tCont := build(number(taNBJFVI[nTempNumeroLinha]))
   R_GEEX3002_NBJFVI(build(number(tCont):R04) )
   !tConta := build(number(taNBJFVI[nTempNumeroLinha]) - number(taCalculoTerco[nTempNumeroLinha]))
   tConta := "0"
   if number(tConta) >= 1000 then
	tConta := "999"
   endif
R_GEEX3002_SECDLV(build(number(tConta):R03))

   nContadorLinhasEscritas++
   flush(0,0,NL) >> tFileOutTemp   !ESCRITA DO HEADER M00.00




    if length(taEDIPRO[nTempNumeroLinha]) > 0 then

      R_30EANINFORMATION_CODEXC("30")
      R_30EANINFORMATION_SEPEXC(".")
      R_30EANINFORMATION_SCOEXC("20")
      R_30EANINFORMATION_TRTEXC(taTRTEXC[nTempNumeroLinha]) !("2")
      R_30EANINFORMATION_CODACT(tCODACTConst ) 
      R_30EANINFORMATION_CODPRO(taCODPRO[nTempNumeroLinha])
      R_30EANINFORMATION_EDIPRO(taEDIPRO[nTempNumeroLinha])
      R_30EANINFORMATION_EDIPRN("0")
      R_30EANINFORMATION_EDIQLF("3")
      R_30EANINFORMATION_DS1PRO(build(taUNIPRODS1PRO[nTempNumeroLinha]," ",taSPCPRO[nTempNumeroLinha]," ",taDS1PRO[nTempNumeroLinha]))

      nContadorLinhasEscritas++
      flush(0,0,NL) >> tFileOutTemp   !ESCRITA DO HEADER M00.00   
    endif
    
    
	
	
	/*
	R_3050_CODEXC("30")
	R_3050_SEPEXC(".")
	R_3050_SCOEXC("50")
	R_3050_TRTEXC(taTRTEXC[nTempNumeroLinha]) !("2")
	R_3050_CODACT(tCODACTConst)
	R_3050_CODPRO(taCODPRO[nTempNumeroLinha])
	!R_3050_TYPRUB(A)
	R_3050_CODRUB(taCODRUB[nTempNumeroLinha])
	R_3050_VALRUB("PACOTE")
	
      nContadorLinhasEscritas++
      flush(0,0,NL) >> tFileOutTemp   !ESCRITA DO HEADER M00.00   
	
	*/
	
	
	
	
	
   nTempNumeroLinha++
endwhile

    R_99FILEFOOTER_CODEXC("99")
    R_99FILEFOOTER_SEPEXC(".")
    R_99FILEFOOTER_SCOEXC("00")
    R_99FILEFOOTER_TRTEXC("")
    R_99FILEFOOTER_EMTEXC("FM")
    R_99FILEFOOTER_RCTEXC("")
    R_99FILEFOOTER_DATEXC(time("now" ,"%Y%m%d"))
    R_99FILEFOOTER_HEUEXC(time("now" ,"H%M%S"))
    R_99FILEFOOTER_NUMEXC("")
    tContadorLinhasEscritas := build(nContadorLinhasEscritas)
    !print(tContadorLinhasEscritas) > "c:/influe/tContadorLinhasEscritas.txt"
    R_99FILEFOOTER_CPTEXC(build(number(tContadorLinhasEscritas):R08.0)) !VER NUMERO DE REGISTOS EXEPTO HEADER E TRAILLER
    !R_99FILEFOOTER_NOMSYS("")
    !R_99FILEFOOTER_NOMDTQ("")
    !R_99FILEFOOTER_BIBDTQ("")
    !R_99FILEFOOTER_IDEMSG("")
    !R_99FILEFOOTER_DISEXC("")

    flush(0,0,NL)  >> tFileOutTemp
    close(tFileOutTemp)

copy(tFileOutTemp,tFileOut)
    close(tFileOutTemp)
	remove(tFileOutTemp)
	    close(tFileOut)

bfMajtrace("Recebida","0",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos","")


exit(0)

endend


!===========================================================


!===========================================================



function bfMajtrace(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
   TRACE:=new(build(sHOME,"/trace"))
   TRACE.ESTADO := tStatus
   TRACE.ERRO := tError
   TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
   TRACE.MENSAGEM := tTipoDocumento

   TRACE.PERFIL := "MAKRO"
   TRACE.SENTIDO := "I"
   TRACE.MENSAGEM := "PRODUTOS"
   TRACE.NUMDOC := time("now","%Y-%m-%d")
   TRACE.DATDOC := time("now","%Y-%m-%d")
   TRACE.MESSAGEID := build(nMessageID:R010)   

    TRACE.REDE := pEDISEND.ORIGINAL.NAME

  TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
 TRACE.FICHEIROSAIDA := tNameOut
TRACE.LIBEXC := tLIBEXC
   if tStatus = "Recebida" then
    print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
    print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
    print("Traduzida com Sucesso",NL) >> TRACE.Detail
  
  else
          if tStatus = "Erro de Traducao" then

        print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
        print("Erro de Traducao",NL) >> TRACE.Detail
        print(tMensagemErrro,NL) >> TRACE.Detail
        endif
  endif
close(TRACE.Detail)
close(SYSLOG.a)
copy(SYSLOG.a,TRACE.In)
close(SYSLOG.a)
close(TRACE.In)





if tError="0" then
copy(tFileOut,TRACE.Out)
close(tFileOut)
close(TRACE.Out)
endif
flush(TRACE)
endfunction

