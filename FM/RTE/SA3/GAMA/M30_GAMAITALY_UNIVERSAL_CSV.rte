%@(#)  source_filename.rte     modif:23-11-2017
!==============================================================================
% File          : source_filename.rte   version 1.0
!------------------------------------------------------------------------------
% Description   : <short program description>
!------------------------------------------------------------------------------
% Author        : <developer name> - COMPANY
!==============================================================================
! 23-11-2017  XX  Creation
! 23-11-2017  XX  <comments>
!==============================================================================
!
! <detailed program description>
!
!==============================================================================
! input file     : <name or rule for naming input file>
! output file    : <name or rule for naming output file> 
! temporary file : <name or rule for naming temporary file> 
!==============================================================================

base "syslog.cfg" SYSLOG
base "../trace/trace.cfg" TRACE,autoflush off

!===========================================================

! Input/output macros file
#include "include/M30CSVUniversal.inc"
#include "include/M30.inc"
!===========================================================

! Initialization section

begin
   !PROCESS_ERRONEOUS := TRUE
      nPos := 1
    nRec := 1
   SYSLOG := find(sSYSLOG,INDEX=number(pINDEX))
    nMessageID := cMessageID
 



 load (0, build(sHOME,"/config/FM_wms_configuration.properties"), taPARAM)

        tToInfologPrefixFilename := taPARAM["ToInfologPrefixFilenameGAMAITALY"]

  tFileOut := build(sHOME,"/ToInfolog/",tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
  tFileOutTemp := build(sHOME,"/ToInfolog/Temp/",tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
  !tFileOut := build(sHOME,"/rte/",tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
  tNameOut := build(tToInfologPrefixFilename,"30",build(nMessageID:R015),".DAT")
    


 
    
  
    nNumeroLinha := 0
    tCODACTConst := "001"
    nContadorLinhasEscritas  := 0
endbegin

!===========================================================


line(not "")
 S_HEADER
 
 
if length(peel(S_HEADER_SKU_PRODUTO_CODPRO_," ")) > 0 and peel(S_HEADER_SKU_PRODUTO_CODPRO_," ") <> "CARACTERISTICAS SKU/PRODUTO (CODPRO)" and peel(S_HEADER_SKU_PRODUTO_CODPRO_," ") <> "SKU/PRODUTO (CODPRO)" and peel(S_HEADER_SKU_PRODUTO_CODPRO_," ") <> "SKU (CODPRO)"  then
nNumeroLinha++


   taCODACT[nNumeroLinha] := S_HEADER_CLIENTE_CODACT_
   taCODPRO[nNumeroLinha] := S_HEADER_SKU_PRODUTO_CODPRO_
   taDS1PRO[nNumeroLinha] := S_HEADER_DESCRICAO1_DS1PRO_
   taDS2PRO[nNumeroLinha] := S_HEADER_DESCRICAO2ABREV_DS2PRO_
   
   
   taUNIPRO[nNumeroLinha] := S_HEADER_UNIDADEMANEJO_UNIPRO_
   
   if taUNIPRO[nNumeroLinha] = "CX" then
		taUNIPRO[nNumeroLinha] := "CAX"
   endif
   taFAMPRO[nNumeroLinha] := S_HEADER_FAMILIA_FAMPRO_
   taABCSTS_ABCPRO[nNumeroLinha] := S_HEADER_CATEGORIA_CURVAABC_ABCPRO_ABCSTS_
   !S_HEADER_DIVISAO_TIPODEPRODUTO
   !S_HEADER_AREA_SECAOUFRIA
   taNBJDLV[nNumeroLinha] := S_HEADER_CONTRATOFORNECEDORESEMDIAS_NBJDLV_
   taSECDLV[nNumeroLinha] := S_HEADER_DIASDESEGURANCAPARAVENDA_SECDLV_
   taNBJFVI[nNumeroLinha] := S_HEADER_SHELFLIFEEMDIAS_NBJFVI_
   !S_HEADER_CONTROLEDEQUALIDADE_S_N_
   !S_HEADER_CONTROLALOTE_S_N_
   !S_HEADER_CONTROLASERIE_S_N_
   !S_HEADER_PRODUTOPERIGOSO__S_N_
   taCODTMD[nNumeroLinha] := S_HEADER_CODIGOPRODUTOPERIGOSO_CODTMD_
   !S_HEADER_DESCRICAOCODIGOPRODPERIGOSO
   !S_HEADER_CLASSEDERISCO_PRODPERIGOSO_
   !S_HEADER_CODIGOONU_PRODPERIGOSO_
   taANAPRO[nNumeroLinha] := S_HEADER_NCM 
   !S_HEADER_CEST
   !S_HEADER_QUANTIDADEDEUNIDADEMANEJO
   taLNGUVC2[nNumeroLinha] := S_HEADER_COMPRIMENTO_CM__LNGUVC2_
   taLRGUVC2[nNumeroLinha] := S_HEADER_LARGURA_CM__LRGUVC2_
   taHAUUVC2[nNumeroLinha] := S_HEADER_ALTURA_CM__HAUUVC2_
   taPDBUVC[nNumeroLinha] := S_HEADER_PESO_GRM__PDBUVC_
   !S_HEADER_VENDA_S_N_
   taEDIPRO[nNumeroLinha] := S_HEADER_EAN_EDIPRO_
   taEDIPRM[nNumeroLinha] := S_HEADER_EANPRINCIPAL__S_N__EDIPRM_
   !S_HEADER_QUANTIDADEDEUNIDADEMANEJO_NAOGERENCIADOPELOWMS
   !S_HEADER_COMPRIMENTO_CM__NAOGERENCIADOPELOWMS
   !S_HEADER_LARGURA_CM__NAOGERENCIADOPELOWMS
   !S_HEADER_ALTURA_CM__NAOGERENCIADOPELOWMS
   !S_HEADER_PESO_GRM__NAOGERENCIADOPELOWMS
   !S_HEADER_VENDA_S_N__NAOGERENCIADOPELOWMS
   !S_HEADER_EAN_NAOGERENCIADOPELOWMS
   taSPCPRO[nNumeroLinha] := S_HEADER_QUANTIDADEDEUNIDADEMANEJO__SPCPRO_
   taLNGSPC2[nNumeroLinha] := S_HEADER_COMPRIMENTO_CM___LNGSPC2_
   taLRGSPC2[nNumeroLinha] := S_HEADER_LARGURA_CM___LRGSPC2_
   taHAUSPC2[nNumeroLinha] := S_HEADER_ALTURA_CM___HAUSPC2_
   taPDBSPC[nNumeroLinha] := S_HEADER_PESO_GRM___PDBSPC_
   !S_HEADER_VENDA_S_N_2
   taEDIPRO2[nNumeroLinha] := S_HEADER_EAN__EDIPRO_
   taEDIPRM2[nNumeroLinha] := S_HEADER_EANPRINCIPAL__S_N__EDIPRM_2
   taPCBPRO[nNumeroLinha] := S_HEADER_QUANTIDADEDEUNIDADEMANEJO__PCBPRO_
   taLNGCOL2[nNumeroLinha] := S_HEADER_COMPRIMENTO_CM___LNGCOL2_
   taLRGCOL2[nNumeroLinha] := S_HEADER_LARGURA_CM___LRGCOL2_
   taHAUCOU_HAUCOL2[nNumeroLinha] := S_HEADER_ALTURA_CM___HAUCOL2_HAUCOU_
   taPDBCOL[nNumeroLinha] := S_HEADER_PESO_GRM___PDBCOL_
   !S_HEADER_VENDA_S_N_3
   taEDIPRO3[nNumeroLinha] := S_HEADER_DUN__EDIPRO_
   taEDIPRM3[nNumeroLinha] := S_HEADER_EANPRINCIPAL__S_N__EDIPRM_3
   !S_HEADER_QUANTIDADEDEUNIDADEMANEJO__CALCULADOPELOWMS_
   !S_HEADER_COMPRIMENTO_CM___CALCULADOPELOWMS_
   !S_HEADER_LARGURA_CM___CALCULADOPELOWMS_
   !S_HEADER_ALTURA_CM___CALCULADOPELOWMS_
   !S_HEADER_PESO_GRM___CALCULADOPELOWMS_
   taCOUPAL[nNumeroLinha] := S_HEADER_CAMADASPORPALLET__COUPAL_
   taCOLCOU[nNumeroLinha] := S_HEADER_CAIXASPORCAMADA__COLCOU_

   
   
   taCODMDR[nNumeroLinha] :=  S_HEADER_METODODERECEPCAO_CODMDR

	taCODMDS[nNumeroLinha] := S_HEADER_METODODEESTOCAGEM_CODMDS
	taZONPRF[nNumeroLinha] := S_HEADER_ZONAPREFERENCIALDEESTOCAGEM
	taALLPRF[nNumeroLinha] := S_HEADER_CORREDORPREFERENCIALDEESTOCAGEM
	taCODRDS[nNumeroLinha] := S_HEADER_RESTRICAODEESTOCAGEM
	taCODMDP[nNumeroLinha] := S_HEADER_METODODEPREPARACAO
	taCIRDET[nNumeroLinha] := S_HEADER_CIRCUITOSEMPICKING
	taCIRPAL[nNumeroLinha] := S_HEADER_CIRCUITOPALETECOMPLETO
	
   
   
   
   
   
   endif
endline

! Default statements section
default

enddefault

!===========================================================

! End statements section

end





 
  if nContadorLinhasEscritas = 0 then
     R_00HEADER_CODEXC("00")
     R_00HEADER_SEPEXC(".")
     R_00HEADER_SCOEXC("00")
     R_00HEADER_TRTEXC("")
     R_00HEADER_EMTEXC("FM") 
     R_00HEADER_RCTEXC("")
     R_00HEADER_DATEXC(time("now" ,"%Y%m%d"))
     R_00HEADER_HEUEXC(time("now" ,"%H%M%S"))
     R_00HEADER_NUMEXC("0000000")
     R_00HEADER_ACQEXC("0")
     R_00HEADER_VEREXC("5.00") 
     R_00HEADER_NOMSYS("")  
     R_00HEADER_NOMDTQ("M30")
     R_00HEADER_BIBDTQ("")
     R_00HEADER_LIBEXC(build(nMessageID:R010))
     R_00HEADER_BIBDST("")
     R_00HEADER_PGMDST("")
     R_00HEADER_PARDST("")
     R_00HEADER_CODACT("")
     R_00HEADER_IGLSIT("")
     R_00HEADER_EDISIT(build(number(tCentro_De_Custo)))
     R_00HEADER_IMAEXC("")  
     R_00HEADER_DISEXC("")
     
     flush(0,0,NL) >> tFileOutTemp   !ESCRITA DO HEADER M00.00
     
   endif
 
 
 
 nTempNumeroLinha  := 1
while nTempNumeroLinha <= nNumeroLinha do
! if baRegistoAConsiderar[nTempNumeroLinha] = TRUE then
   R_30PRODUCTINFORMATION_CODEXC("30")
   R_30PRODUCTINFORMATION_SEPEXC(".")
   R_30PRODUCTINFORMATION_SCOEXC("00")
   R_30PRODUCTINFORMATION_TRTEXC("2")
   R_30PRODUCTINFORMATION_CODACT(taCODACT[nTempNumeroLinha] )    !(eECODACT)
   R_30PRODUCTINFORMATION_CODPRO(taCODPRO[nTempNumeroLinha])  
   !R_30PRODUCTINFORMATION_FOUPRO("9999")
   R_30PRODUCTINFORMATION_FAMPRO(taFAMPRO[nTempNumeroLinha])
   R_30PRODUCTINFORMATION_ANAPRO(taANAPRO[nTempNumeroLinha])   ! M 

   R_30PRODUCTINFORMATION_SPCPRO(build(number(taSPCPRO[nTempNumeroLinha]):R04))
   R_30PRODUCTINFORMATION_PCBPRO(build(number(taPCBPRO[nTempNumeroLinha]):R05))   ! M  
   R_30PRODUCTINFORMATION_UNIPRO(taUNIPRO[nTempNumeroLinha])   ! M  

   R_30PRODUCTINFORMATION_DS1PRO(taDS1PRO[nTempNumeroLinha])
   R_30PRODUCTINFORMATION_DS2PRO(taDS2PRO[nTempNumeroLinha])
   R_30PRODUCTINFORMATION_ABCSTS(taABCSTS_ABCPRO[nTempNumeroLinha])! ver
   R_30PRODUCTINFORMATION_ABCPRO(taABCSTS_ABCPRO[nTempNumeroLinha])
   R_30PRODUCTINFORMATION_COLCOU(build(number(taCOLCOU[nTempNumeroLinha]):R04)) !ver
   R_30PRODUCTINFORMATION_COLCOU2(build(number(taCOLCOU[nTempNumeroLinha]):R04)) !ver
   R_30PRODUCTINFORMATION_COUPAL(build(number(taCOUPAL[nTempNumeroLinha] ):R04)) !ver
   R_30PRODUCTINFORMATION_COUPAL2(build(number(taCOUPAL[nTempNumeroLinha] ):R04)) !ver
   

      tCont := build(number(taPDBCOL[nTempNumeroLinha]) )
 
   R_30PRODUCTINFORMATION_PDBCOL(build(number(tCont):R07)) 
   
tCont1 := build(number(taHAUCOU_HAUCOL2[nTempNumeroLinha])  * 1)
	!R_30PRODUCTINFORMATION_HAUCOU(build(number(taHAUCOU_HAUCOL2[nTempNumeroLinha] ):R03)) 
   R_30PRODUCTINFORMATION_HAUCOU(substr(build(number(tCont1 ):R03.0),1,3)) 
   
   

   
   
   

      tCont := build(number(taPDBUVC[nTempNumeroLinha]) )
log("peso ",tCont,NL)
   
   R_30PRODUCTINFORMATION_PDBUVC(build(number(tCont ):R07)) 
	R_30PRODUCTINFORMATION_PDNUVC(build(number(tCont ):R07))    
 
 
 !fazer NBJDLV = 4/5 do NBJFVI 
 /*
taCalculoQuinto[nTempNumeroLinha] := build(number(taNBJFVI[nTempNumeroLinha]) / 5)
	log("taCalculoQuinto ",taCalculoQuinto[nTempNumeroLinha],NL)  
	  					nPosicaoPonto := 0
					   nPosicaoPonto := index(taCalculoQuinto[nTempNumeroLinha],".")
					   log("nPosicaoPonto ",nPosicaoPonto,NL)
					   if (nPosicaoPonto) > 0 then
	
						  tCont1 := build(number(substr(taCalculoQuinto[nTempNumeroLinha],1,nPosicaoPonto-1)))
						  log("tCont1 ",tCont1,NL) 
						else
							tCont1 := taCalculoQuinto[nTempNumeroLinha]
							log("tCont1 ",tCont1,NL) 
						  
					   endif
					   taCalculoQuinto[nTempNumeroLinha] := tCont1
tConta := build(number(taNBJFVI[nTempNumeroLinha]) - number(taCalculoQuinto[nTempNumeroLinha]))
 */
    tConta := build(number(taNBJDLV[nTempNumeroLinha]))
	log("tConta ",tConta,NL)
   if number(tConta) >= 1000 then
	tConta := "999"
   endif
	
   R_30PRODUCTINFORMATION_NBJDLV(build(number(tConta ):R03))

   
   
   
   
   
   
   R_30PRODUCTINFORMATION_CODMDR(taCODMDR[nTempNumeroLinha] )
   R_30PRODUCTINFORMATION_CODMDS(taCODMDS[nTempNumeroLinha] )
   
   R_30PRODUCTINFORMATION_ZONPRF(taZONPRF[nTempNumeroLinha] )
   R_30PRODUCTINFORMATION_ALLPRF(taALLPRF[nTempNumeroLinha] )
   R_30PRODUCTINFORMATION_CODMDP(taCODMDP[nTempNumeroLinha] )
	
   
   
   nContadorLinhasEscritas++
   flush(0,0,NL) >> tFileOutTemp   !ESCRITA DO HEADER M00.00



   
R_3001_CODEXC("30")
R_3001_SEPEXC(".")
R_3001_SCOEXC("01") 
R_3001_TRTEXC("2")
 R_3001_CODACT(taCODACT[nTempNumeroLinha] )
 R_3001_CODPRO(taCODPRO[nTempNumeroLinha])
  R_3001_CIRDET(taCIRDET[nTempNumeroLinha])
 R_3001_CIRPAL(taCIRPAL[nTempNumeroLinha])
   
   
	
	
   nContadorLinhasEscritas++
   flush(0,0,NL) >> tFileOutTemp   !ESCRITA DO HEADER M00.00



R_GEEX3002_CODEXC("30")
R_GEEX3002_SEPEXC(".")
R_GEEX3002_SCOEXC("02") 
R_GEEX3002_TRTEXC("2")
 R_GEEX3002_CODACT(taCODACT[nTempNumeroLinha] )
 R_GEEX3002_CODPRO(taCODPRO[nTempNumeroLinha])
 
 
 tConta := build(number(taSECDLV[nTempNumeroLinha]))
   if number(tConta) >= 1000 then
	tConta := "999"
   endif
   R_GEEX3002_SECDLV(build(number(tConta ):R03))
   
   
   
    tConta := build(number(taNBJFVI[nTempNumeroLinha]))
   if number(tConta) >= 10000 then
	tConta := "9999"
   endif

   R_GEEX3002_NBJFVI(build(number(tConta ):R04))
   
   

R_GEEX3002_CODTMD(taCODTMD[nTempNumeroLinha])


 
      tCont1 := build(number(taHAUUVC2[nTempNumeroLinha]) * 100)
      tCont2 := build(number(taLNGUVC2[nTempNumeroLinha]) * 100)
      tCont3 := build(number(taLRGUVC2[nTempNumeroLinha]) * 100)


R_GEEX3002_HAUUVC2(build(number(tCont1 ):R05))
R_GEEX3002_LNGUVC2(build(number(tCont2 ):R05))
R_GEEX3002_LRGUVC2(build(number(tCont3 ):R05))


	  
 
      tCont1 := build(number(taHAUSPC2[nTempNumeroLinha]) * 100)
      tCont2 := build(number(taLNGSPC2[nTempNumeroLinha]) * 100)
      tCont3 := build(number(taLRGSPC2[nTempNumeroLinha]) * 100)
 

	  
R_GEEX3002_HAUSPC2(build(number(tCont1):R05))
R_GEEX3002_LNGSPC2(build(number(tCont2):R05))
R_GEEX3002_LRGSPC2(build(number(tCont3):R05))

   tCont := build(number(taPDBSPC[nTempNumeroLinha]) )
   R_GEEX3002_PDBSPC(build(number(tCont ):R07)) 


   
   
      tCont1 := build(number(taHAUCOU_HAUCOL2[nTempNumeroLinha])  * 100)
      tCont2 := build(number(taLNGCOL2[nTempNumeroLinha])  * 100)
      tCont3 := build(number(taLRGCOL2[nTempNumeroLinha])  * 100)
 

	  
R_GEEX3002_HAUCOL2(build(number(tCont1):R05))
R_GEEX3002_LNGCOL2(build(number(tCont2):R05))
R_GEEX3002_LRGCOL2(build(number(tCont3):R05))



   R_GEEX3002_CODRDS(taCODRDS[nTempNumeroLinha])
 
   
   nContadorLinhasEscritas++
   flush(0,0,NL) >> tFileOutTemp   !ESCRITA DO HEADER M00.00




    if length(taEDIPRO[nTempNumeroLinha]) > 0 then

      R_30EANINFORMATION_CODEXC("30")
      R_30EANINFORMATION_SEPEXC(".")
      R_30EANINFORMATION_SCOEXC("20")
      R_30EANINFORMATION_TRTEXC("2")
      R_30EANINFORMATION_CODACT(taCODACT[nTempNumeroLinha] ) 
      R_30EANINFORMATION_CODPRO(taCODPRO[nTempNumeroLinha])
      R_30EANINFORMATION_EDIPRO(taEDIPRO[nTempNumeroLinha])
	  if taEDIPRM[nTempNumeroLinha] = "S" then
		R_30EANINFORMATION_EDIPRN("1")
	endif
	if taEDIPRM[nTempNumeroLinha] = "N" then
		R_30EANINFORMATION_EDIPRN("0")
	endif
      R_30EANINFORMATION_EDIQLF("0")
      R_30EANINFORMATION_DS1PRO(taDS1PRO[nTempNumeroLinha])

      nContadorLinhasEscritas++
      flush(0,0,NL) >> tFileOutTemp   !ESCRITA DO HEADER M00.00   
    endif
    
    
    if length(taEDIPRO2[nTempNumeroLinha]) > 0 then

      R_30EANINFORMATION_CODEXC("30")
      R_30EANINFORMATION_SEPEXC(".")
      R_30EANINFORMATION_SCOEXC("20")
      R_30EANINFORMATION_TRTEXC("2")
      R_30EANINFORMATION_CODACT(taCODACT[nTempNumeroLinha] ) 
      R_30EANINFORMATION_CODPRO(taCODPRO[nTempNumeroLinha])
      R_30EANINFORMATION_EDIPRO(taEDIPRO2[nTempNumeroLinha])
        if taEDIPRM2[nTempNumeroLinha] = "S" then
		R_30EANINFORMATION_EDIPRN("1")
	endif
	if taEDIPRM2[nTempNumeroLinha] = "N" then
		R_30EANINFORMATION_EDIPRN("0")
	endif
      R_30EANINFORMATION_EDIQLF("2")
      R_30EANINFORMATION_DS1PRO(taDS1PRO[nTempNumeroLinha])

      nContadorLinhasEscritas++
      flush(0,0,NL) >> tFileOutTemp   !ESCRITA DO HEADER M00.00   
    endif
	
	
    if length(taEDIPRO3[nTempNumeroLinha]) > 0 then

      R_30EANINFORMATION_CODEXC("30")
      R_30EANINFORMATION_SEPEXC(".")
      R_30EANINFORMATION_SCOEXC("20")
      R_30EANINFORMATION_TRTEXC("2")
      R_30EANINFORMATION_CODACT(taCODACT[nTempNumeroLinha] ) 
      R_30EANINFORMATION_CODPRO(taCODPRO[nTempNumeroLinha])
      R_30EANINFORMATION_EDIPRO(taEDIPRO3[nTempNumeroLinha])
        if taEDIPRM3[nTempNumeroLinha] = "S" then
		R_30EANINFORMATION_EDIPRN("1")
	endif
	if taEDIPRM3[nTempNumeroLinha] = "N" then
		R_30EANINFORMATION_EDIPRN("0")
	endif
      R_30EANINFORMATION_EDIQLF("3")
      R_30EANINFORMATION_DS1PRO(taDS1PRO[nTempNumeroLinha])

      nContadorLinhasEscritas++
      flush(0,0,NL) >> tFileOutTemp   !ESCRITA DO HEADER M00.00   
    endif
	


	





	
	
	
	
	
	
	


   nTempNumeroLinha++
endwhile

    R_99FILEFOOTER_CODEXC("99")
    R_99FILEFOOTER_SEPEXC(".")
    R_99FILEFOOTER_SCOEXC("00")
    R_99FILEFOOTER_TRTEXC("")
    R_99FILEFOOTER_EMTEXC("FM")
    R_99FILEFOOTER_RCTEXC("")
    R_99FILEFOOTER_DATEXC(time("now" ,"%Y%m%d"))
    R_99FILEFOOTER_HEUEXC(time("now" ,"H%M%S"))
    R_99FILEFOOTER_NUMEXC("")
    tContadorLinhasEscritas := build(nContadorLinhasEscritas)
    !print(tContadorLinhasEscritas) > "c:/influe/tContadorLinhasEscritas.txt"
    R_99FILEFOOTER_CPTEXC(build(number(tContadorLinhasEscritas):R08.0)) !VER NUMERO DE REGISTOS EXEPTO HEADER E TRAILLER
    !R_99FILEFOOTER_NOMSYS("")
    !R_99FILEFOOTER_NOMDTQ("")
    !R_99FILEFOOTER_BIBDTQ("")
    !R_99FILEFOOTER_IDEMSG("")
    !R_99FILEFOOTER_DISEXC("")

    flush(0,0,NL)  >> tFileOutTemp
    close(tFileOutTemp)

copy(tFileOutTemp,tFileOut)
    close(tFileOutTemp)
	remove(tFileOutTemp)
	    close(tFileOut)

bfMajtrace("Recebida","0",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos","")


exit(0)

endend

!===========================================================


!===========================================================



function bfMajtrace(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
   TRACE:=new(build(sHOME,"/trace"))
   TRACE.ESTADO := tStatus
   TRACE.ERRO := tError
   TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
   TRACE.MENSAGEM := tTipoDocumento

   TRACE.PERFIL := "GAMA ITALY"
   TRACE.SENTIDO := "I"
   TRACE.MENSAGEM := "PRODUTOS"
   TRACE.NUMDOC := time("now","%Y-%m-%d %H:%M:%S")
   TRACE.DATDOC := time("now","%Y-%m-%d")
   TRACE.MESSAGEID := build(nMessageID:R010)   

    TRACE.REDE := substr(pEDISEND.ORIGINAL.NAME,1,20)

  TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
 TRACE.FICHEIROSAIDA := tNameOut

   if tStatus = "Recebida" then
    print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
    print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
    print("Traduzida com Sucesso",NL) >> TRACE.Detail
  
  else
          if tStatus = "Erro de Traducao" then

        print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
        print("Erro de Traducao",NL) >> TRACE.Detail
        print(tMensagemErrro,NL) >> TRACE.Detail
        endif
  endif
close(TRACE.Detail)
close(SYSLOG.a)
copy(SYSLOG.a,TRACE.In)
close(SYSLOG.a)
close(TRACE.In)





if tError="0" then
copy(tFileOut,TRACE.Out)
close(tFileOut)
close(TRACE.Out)
endif
flush(TRACE)
endfunction


function nfRetornaMenorValor(nContComprimento,nContAltura,nContLargura )
if nContComprimento <= nContAltura and nContComprimento <= nContLargura then 
   return nContComprimento
else
   if nContAltura <= nContComprimento  and nContAltura <= nContLargura then 
      return nContAltura 
   else
      if nContLargura <= nContComprimento  and nContLargura  <= nContAltura then 
         return nContLargura 
      endif
   endif
endif



endfunction


