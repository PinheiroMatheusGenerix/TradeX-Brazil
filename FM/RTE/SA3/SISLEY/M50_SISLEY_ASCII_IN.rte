%@(#)  source_filename.rte     modif:01-12-2017
!==============================================================================
% File          : source_filename.rte   version 1.0
!------------------------------------------------------------------------------
% Description   : <short program description>
!------------------------------------------------------------------------------
% Author        : <developer name> - COMPANY
!==============================================================================
! 01-12-2017  XX  Creation
! 01-12-2017  XX  <comments>
!==============================================================================
!
! <detailed program description>
!
!==============================================================================
! input file     : <name or rule for naming input file>
! output file    : <name or rule for naming output file> 
! temporary file : <name or rule for naming temporary file> 
!==============================================================================

!base "syslog.cfg" SYSLOG
base "../trace/trace.cfg" TRACE,autoflush off

!===========================================================

! Input/output macros file
#define TX_PROG_INFO "M50_SYSLEY_ASCII_IN"
#include "include/generix_func.inc"
#include "include/NfVendaSYSLEY.inc"
#include "include/GEEXM50.inc"

!===========================================================

! Initialization section

begin
   !PROCESS_ERRONEOUS := TRUE
   nPos := 1
   nRec := 1
   SYSLOG := find(sSYSLOG,INDEX=number(pINDEX))
   nMessageID := cMessageID

   load (0, build(sHOME,"/config/FM_wms_configuration.properties"), taPARAM)
   tToInfologPrefixFilename := taPARAM["ToInfologPrefixFilenameGAMAITALY"]

   tDbBase		:= "FMWMS"
   tDbUsername	:= taPARAM["WMSDBUSER"]
   tDbPassword	:= taPARAM["WMSDBPASS"]
   tDbUrl		:= taPARAM["WMSDBURL"]

   bfSqlInit()
   if not bfSqlJdbc(tDbBase, tDbUsername, tDbPassword, tDbUrl) then
      bfSqlErro()
      exit(1)
   endif

   tFileOut := build(sHOME,"/ToInfolog/",tToInfologPrefixFilename,"50",build(nMessageID:R015),".DAT")
   tFileOutTemp := build(sHOME,"/ToInfolog/Temp/",tToInfologPrefixFilename,"50",build(nMessageID:R015),".DAT")
   tNameOut := build(tToInfologPrefixFilename,"50",build(nMessageID:R015),".DAT")

   nContadorLinhasEscritas  := 0
   nContadorHeader := 0
   nContadorItems := 0
   nMainIndex := 0
endbegin

!===========================================================
line(1:"0")
   tCODACT := substr(pEDISEND.ORIGINAL.NAME,4,3)
endline

line(1:"1")
   tCODTLI := S_HeaderOrdemCarga_TipoOperacao
   tCODTRA := substr(S_HeaderOrdemCarga_CNPJTRANSPORTADORA,2,14)
endline

line(1:"2")
   nContadorHeader++
   
	taCODACTObtido[nContadorHeader] := tCODACT
   taCODTLI[nContadorHeader] := tCODTLI	
   taCODTRA[nContadorHeader] := tCODTRA	
   taREFLIV[nContadorHeader] := build(number(S_HeaderPedido_NumeroPedido ))
   taDTILIV[nContadorHeader] := S_HeaderPedido_DataPedido
   taNOMCLI[nContadorHeader] := S_HeaderPedido_Nome
   taAD1CLI[nContadorHeader] := substr(build(S_HeaderPedido_Endereco," ",S_HeaderPedido_NumeroEndereco," ",S_HeaderPedido_ComplementoEndereco),1,30)
   taAD2CLI[nContadorHeader] := substr(build(S_HeaderPedido_Endereco," ",S_HeaderPedido_NumeroEndereco," ",S_HeaderPedido_ComplementoEndereco),31,30)
   taAD1CLI_5011[nContadorHeader] := substr(build(S_HeaderPedido_Endereco," ",S_HeaderPedido_NumeroEndereco," ",S_HeaderPedido_ComplementoEndereco),1,38)
   taAD2CLI_5011[nContadorHeader] := substr(build(S_HeaderPedido_Endereco," ",S_HeaderPedido_NumeroEndereco," ",S_HeaderPedido_ComplementoEndereco),39,38)
   taAD3CLI_5011[nContadorHeader] := S_HeaderPedido_Bairro_Entrega
   taVILCLI[nContadorHeader] := substr(build(S_HeaderPedido_Municipio,"/",S_HeaderPedido_Estado),1,26)
   taCODCLI[nContadorHeader] := substr(S_HeaderPedido_EmissorCNPJ,2,14)
   taCPICLI[nContadorHeader] := S_HeaderPedido_Cep
   taMSGLIV[nContadorHeader] := S_HeaderPedido_Email
   taDIPLIV[nContadorHeader] := build(substr(S_HeaderPedido_Valor_Frete, 1 , length(S_HeaderPedido_Valor_Frete) - 2), ".", substr(S_HeaderPedido_Valor_Frete, length(S_HeaderPedido_Valor_Frete) - 1, 2))
endline

line(1:"3")
   nContadorItems++

   taITEMS_ReferenciaHeaer[nContadorItems] := build(nContadorHeader)
   taNLILIV[nContadorItems] := S_DetalhePedido_ItemdoPedido
   taCODPRO[nContadorItems] := S_DetalhePedido_Produto 
   taQTECDE[nContadorItems] := S_DetalhePedido_Quantidade
   taUNICDE[nContadorItems] := "UNI"
   taPRILIV[nContadorItems] := substr(S_DetalhePedido_ValorUnitario,12,8)
endline

line(1:"9")
   tCUMLIG := S_Trailler_TotalLinhas
endline

! Default statements section
default

enddefault

!===========================================================

! End statements section

end
   nContadorHeaderTmp := 1

   while nContadorHeaderTmp <= nContadorHeader do
      if nContadorLinhasEscritas = 0 then
         R_GEEX0000_CODEXC("00")
         R_GEEX0000_SEPEXC(".")
         R_GEEX0000_SCOEXC("00")
         R_GEEX0000_EMTEXC("FM") 
         R_GEEX0000_DATEXC(time("now" ,"%Y%m%d"))
         R_GEEX0000_HEUEXC(time("now" ,"%H%M%S"))
         R_GEEX0000_NUMEXC("0000000")
         R_GEEX0000_ACQEXC("0")
         R_GEEX0000_VEREXC("5.00") 
         R_GEEX0000_NOMDTQ("M40")
         R_GEEX0000_LIBEXC(build(nMessageID:R010))
     
         flush(0,0,NL) >> tFileOutTemp
         nContadorLinhasEscritas++
      endif
   
      R_GEEX5000_CODEXC("50")
      R_GEEX5000_SEPEXC(".")
      R_GEEX5000_SCOEXC("00")
      R_GEEX5000_CODACT(taCODACTObtido[nContadorHeaderTmp])
      R_GEEX5000_CODCLI(taCODCLI[nContadorHeaderTmp])  
      R_GEEX5000_REFLIV(taREFLIV[nContadorHeaderTmp])
      R_GEEX5000_DTILIV(tfConvertDate(taDTILIV[nContadorHeaderTmp], "DDMMYYYY" , "YYYYMMDD"))
      R_GEEX5000_MSGLIV1(taMSGLIV[nContadorHeaderTmp])
      R_GEEX5000_CODTRA(taCODTRA[nContadorHeaderTmp])
      R_GEEX5000_CODTLI(taCODTLI[nContadorHeaderTmp])

      flush(0,0,NL) >> tFileOutTemp
      nContadorLinhasEscritas++

      R_GEEX5001_CODEXC("50")
      R_GEEX5001_SEPEXC(".")
      R_GEEX5001_SCOEXC("01")
      R_GEEX5001_CODACT(taCODACTObtido[nContadorHeaderTmp])
      R_GEEX5001_CODCLI(taCODCLI[nContadorHeaderTmp])  
      R_GEEX5001_REFLIV(taREFLIV[nContadorHeaderTmp])
      R_GEEX5001_REFCLI(taDIPLIV[nContadorHeaderTmp])
   
      flush(0,0,NL) >> tFileOutTemp
      nContadorLinhasEscritas++


      if taCODTLI[nContadorHeaderTmp] = "VD" then
         R_GEEX5005_CODEXC("50")
         R_GEEX5005_SEPEXC(".")
         R_GEEX5005_SCOEXC("05")
         R_GEEX5005_CODACT(taCODACTObtido[nContadorHeaderTmp])
         R_GEEX5005_CODCLI(taCODCLI[nContadorHeaderTmp])
         R_GEEX5005_REFLIV(taREFLIV[nContadorHeaderTmp])
         R_GEEX5005_CODRUB("*GM1")
         R_GEEX5005_VALRUB("PED.VENDA - FALTA NF")

         flush(0,0,NL) >> tFileOutTemp
         nContadorLinhasEscritas++
      endif

      if taCODTLI[nContadorHeaderTmp] = "EC" then
         R_GEEX5005_CODEXC("50")
         R_GEEX5005_SEPEXC(".")
         R_GEEX5005_SCOEXC("05")
         R_GEEX5005_CODACT(taCODACTObtido[nContadorHeaderTmp])
         R_GEEX5005_CODCLI(taCODCLI[nContadorHeaderTmp])
         R_GEEX5005_REFLIV(taREFLIV[nContadorHeaderTmp])
         R_GEEX5005_CODRUB("*GM1")
         R_GEEX5005_VALRUB("ECOMMERCE - FALTA NF")

         flush(0,0,NL) >> tFileOutTemp
         nContadorLinhasEscritas++
      endif

      R_GEEX5005_CODEXC("50")
      R_GEEX5005_SEPEXC(".")
      R_GEEX5005_SCOEXC("05")
      R_GEEX5005_CODACT(taCODACTObtido[nContadorHeaderTmp])
      R_GEEX5005_CODCLI(taCODCLI[nContadorHeaderTmp])
      R_GEEX5005_REFLIV(taREFLIV[nContadorHeaderTmp])
      R_GEEX5005_CODRUB("FRET")
      R_GEEX5005_VALRUB(taDIPLIV[nContadorHeaderTmp])

      flush(0,0,NL) >> tFileOutTemp
      nContadorLinhasEscritas++
   
      tQuery := build("SELECT CATCLI", NL," "\
                        "FROM FGE50FM",tToInfologPrefixFilename,".GECLI", NL," "\
                        "WHERE CODCLI = '",taCODCLI[nContadorHeaderTmp],"'")   

      log("------------------------------------------------------------", NL)
      log(tQuery,NL)
      log("------------------------------------------------------------", NL)

      if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
         bfSqlErro()
         exit(1)	
      endif

      if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
         bfSqlErro()
         exit(1)	
      endif

      while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do	
         taCATCLI[nContadorHeaderTmp] := peel(taDb2Array["CATCLI"], " ")

         remove(taDb2Array)
      endwhile

      if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
         bfSqlErro()
         exit(1)	
      endif

      R_GEEX5010_CODEXC("50")
      R_GEEX5010_SEPEXC(".")
      R_GEEX5010_SCOEXC("10")
      R_GEEX5010_CODACT(taCODACTObtido[nContadorHeaderTmp])
      R_GEEX5010_NOMCLI(taNOMCLI[nContadorHeaderTmp])
      R_GEEX5010_AD1CLI(taAD1CLI[nContadorHeaderTmp])
      R_GEEX5010_AD2CLI(taAD2CLI[nContadorHeaderTmp])
      R_GEEX5010_VILCLI(taVILCLI[nContadorHeaderTmp])
      R_GEEX5010_CPICLI(taCPICLI[nContadorHeaderTmp])
      if length(taCATCLI[nContadorHeaderTmp]) > 0 then
         R_GEEX5010_CATCLI(taCATCLI[nContadorHeaderTmp])
      else
         R_GEEX5010_CATCLI("STD")
      endif
      R_GEEX5010_CODCLI(taCODCLI[nContadorHeaderTmp]) 
      R_GEEX5010_REFLIV(taREFLIV[nContadorHeaderTmp])

      flush(0,0,NL) >> tFileOutTemp
      nContadorLinhasEscritas++

      R_GEEX5011_CODEXC("50")
      R_GEEX5011_SEPEXC(".")
      R_GEEX5011_SCOEXC("11")
      R_GEEX5011_CODACT(taCODACTObtido[nContadorHeaderTmp])
      R_GEEX5011_CODCLI(taCODCLI[nContadorHeaderTmp])
      R_GEEX5011_REFLIV(taREFLIV[nContadorHeaderTmp])
      R_GEEX5011_AD1CLI(taAD1CLI_5011[nContadorHeaderTmp])
      R_GEEX5011_AD2CLI(taAD2CLI_5011[nContadorHeaderTmp])
      R_GEEX5011_AD3CLI(taAD3CLI_5011[nContadorHeaderTmp])

      flush(0,0,NL) >> tFileOutTemp
      nContadorLinhasEscritas++

      nContadorLinhasEncomenda := 0
      nContador := 8
      print("ve ",peel(taREGISTO[nContador+1],"\""),NL)
      nContadorTmpTOTAL := 1

      while nContadorTmpTOTAL <= nContadorItems do  
         if taITEMS_ReferenciaHeaer[nContadorTmpTOTAL] = build(nContadorHeaderTmp) then
            R_GEEX5020_CODEXC("50")
            R_GEEX5020_SEPEXC(".")
            R_GEEX5020_SCOEXC("20")
            R_GEEX5020_CODACT(taCODACTObtido[nContadorHeaderTmp])
            R_GEEX5020_CODCLI(taCODCLI[nContadorHeaderTmp])
            R_GEEX5020_CODPRO(taCODPRO[nContadorTmpTOTAL])
            R_GEEX5020_UNICDE(taUNICDE[nContadorTmpTOTAL])
            nNumeroAuxTemp := number(substr(taQTECDE[nContadorTmpTOTAL],4,16)) / 1000
            R_GEEX5020_UVCCDE(build(nNumeroAuxTemp:R09))
            R_GEEX5020_REFLIV(taREFLIV[nContadorHeaderTmp])
            R_GEEX5020_NLILIV(build(number(taNLILIV[nContadorTmpTOTAL]):R05.0))
            R_GEEX5020_PRILIV(taPRILIV[nContadorTmpTOTAL])
            R_GEEX5020_AIGPRI("1")
            flush(0,0,NL) >> tFileOutTemp
            nContadorLinhasEscritas++
         endif
   
         nContadorLinhasEncomenda++
         nContadorTmpTOTAL++
      endwhile
    
      R_GEEX5099_CODEXC("50")
      R_GEEX5099_SEPEXC(".")
      R_GEEX5099_SCOEXC("99")
      R_GEEX5099_CUMLIG(build(nContadorLinhasEncomenda))
      R_GEEX5099_CODACT(taCODACTObtido[nContadorHeaderTmp])
      R_GEEX5099_CODCLI(taCODCLI[nContadorHeaderTmp])
      R_GEEX5099_REFLIV(taREFLIV[nContadorHeaderTmp])

      flush(0,0,NL) >> tFileOutTemp
      nContadorLinhasEscritas++

      bfMajtrace("Recebida","0",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos","")
      nContadorHeaderTmp++
   endwhile
   
   R_GEEX9900_CODEXC("99")
   R_GEEX9900_SEPEXC(".")
   R_GEEX9900_SCOEXC("00")
   R_GEEX9900_TRTEXC("")
   R_GEEX9900_EMTEXC("FM")
   R_GEEX9900_RCTEXC("")
   R_GEEX9900_DATEXC(time("now" ,"%Y%m%d"))
   R_GEEX9900_HEUEXC(time("now" ,"%H%M%S"))
   R_GEEX9900_NUMEXC("")
   tContadorLinhasEscritas := build(nContadorLinhasEscritas)
   R_GEEX9900_CPTEXC(build(number(tContadorLinhasEscritas):R08.0))

   flush(0,0,NL)  >> tFileOutTemp
   close(tFileOutTemp)

   copy(tFileOutTemp,tFileOut)
   close(tFileOutTemp)
   remove(tFileOutTemp)
   close(tFileOut)

   bfSqlClose(tDbBase)
   exit(0)
endend

!===========================================================

function bfMajtrace(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
   TRACE:=new(build(sHOME,"/trace"))
   TRACE.ESTADO := tStatus
   TRACE.ERRO := tError
   TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
   TRACE.MENSAGEM := tTipoDocumento
   TRACE.PERFIL := "SISLEY"
   TRACE.SENTIDO := "I"
   TRACE.MENSAGEM := "PEDIDO"
   TRACE.NUMDOC := taREFLIV[nContadorHeaderTmp] 
   TRACE.DATDOC := tfConvertDate(substr(taDTILIV[nContadorHeaderTmp],1,8), "DDMMYYYY" , "YYYYMMDD") 
   TRACE.MESSAGEID := build(nMessageID:R010)   
   TRACE.REDE := pEDISEND.ORIGINAL.NAME
   TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
   TRACE.FICHEIROSAIDA := tNameOut
   TRACE.LIBEXC := tLIBEXC

	SYSLOG.REFERENCE := build(nMessageID)

   if tStatus = "Recebida" then
      print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
      print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
      print("Traduzida com Sucesso",NL) >> TRACE.Detail
   else
      if tStatus = "Erro de Traducao" then
         print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
         print("Erro de Traducao",NL) >> TRACE.Detail
         print(tMensagemErrro,NL) >> TRACE.Detail
      endif
   endif

   close(TRACE.Detail)

   if nMainIndex = 0 then
      close(SYSLOG.a)
      copy(SYSLOG.a,TRACE.In)
      close(SYSLOG.a)
      close(TRACE.In)
      nMainIndex := TRACE.INDEX
   else
      tCmd := build("ln -s ", sHOME, "/trace/files/In/", nMainIndex, " ", TRACE.In)
      system(tCmd)
   endif

   if tError="0" then
      close(tFileOutTemp)
      copy(tFileOutTemp,TRACE.Out)
      close(tFileOutTemp)
      close(TRACE.Out)
   endif

   flush(TRACE)
endfunction

!===========================================================

function bfSqlErro()
    print("FATAL: ",tfSqlErrorStr())
    bfMajtrace("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"PEDIDO","")     
endfunction
