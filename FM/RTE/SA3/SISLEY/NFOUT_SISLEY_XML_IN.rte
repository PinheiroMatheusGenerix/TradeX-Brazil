%@(#)  NFOUT_SISLEY_XML_IN.rte     modif:21-11-2017
!==============================================================================
% File          : NFOUT_SISLEY_XML_IN.rte   version 1.0
!------------------------------------------------------------------------------
% Description   : <short program description>
!------------------------------------------------------------------------------
% Author        : <developer name> - COMPANY
!==============================================================================
! 21-11-2017  XX  Creation
! 21-11-2017  XX  <comments>
!==============================================================================
!
! <detailed program description>
!
!==============================================================================
! input file     : <name or rule for naming input file>
! output file    : <name or rule for naming output file> 
! temporary file : <name or rule for naming temporary file> 
!==============================================================================

! Message definition
schema "XML/FMBrasil/NFE/procNFe_v4.00.xsd" validating
message "XML/FMBrasil/nfeProc.dtd" receiving, passthru

base "../trace/trace.cfg" TRACE
#define TX_PROG_INFO "NFOUT_SISLEY_XML_IN"
#include "include/generix_func.inc"

!===========================================================

! Initialization section

begin
	nPos := 1
	nRec := 1
	SYSLOG := find(sSYSLOG,INDEX=number(pINDEX))
	nMessageID := cMessageID

	! PROCESS_ERRONEOUS := TRUE
	pXML.INCONVIN := "UTF-8"
	pXML.INCOVIN := "UTF-8"
	pXML.ENCODING := "UTF-8"

	load (0, build(sHOME,"/config/FM_wms_configuration.properties"), taPARAM)

	tToInfologPrefixFilename := taPARAM["ToInfologPrefixFilenameGAMAITALY"] 

	nMainIndex := 0
	nCountItem := 0

	tDbBase		:= "FMWMS"
	tDbBase2	:= "FMWMS2"
	tDbUsername	:= taPARAM["WMSDBUSER"]
	tDbPassword	:= taPARAM["WMSDBPASS"]
	tDbUrl		:= taPARAM["WMSDBURL"] 
endbegin

!===========================================================


segment Sserie gGnfeProc,gGNFe,gGinfNFe,gGide     ! M 1/1 
	tVALRUBSerie := eEserie
	tNumeroSerie := eEserie   ! M 
endsegment

segment SnNF gGnfeProc,gGNFe,gGinfNFe,gGide     ! M 1/1 
	tNumeroDocumento := eEnNF   ! M 
	tVALRUBNF := eEnNF
endsegment

segment SdhEmi gGnfeProc,gGNFe,gGinfNFe,gGide     ! M 1/1 
	tDATEXP := tfConvertDate(eEdhEmi, "YYYY-MM-DDTHH:MM:SS" , "YYYYMMDD") 
	tDhEmi := eEdhEmi
endsegment

segment SdhSaiEnt gGnfeProc,gGNFe,gGinfNFe,gGide     ! C 1/1 
	tSaiEnt := eEdhSaiEnt
endsegment

segment StpNF gGnfeProc,gGNFe,gGinfNFe,gGide     ! M 1/1 
	tTipoDocumento := eEtpNF   ! M  
	tTpNF := eEtpNF
endsegment

segment SidDest gGnfeProc,gGNFe,gGinfNFe,gGide     ! M 1/1 

endsegment

segment ScMunFG gGnfeProc,gGNFe,gGinfNFe,gGide     ! M 1/1 

endsegment

segment StpImp gGnfeProc,gGNFe,gGinfNFe,gGide     ! M 1/1 

endsegment

segment StpEmis gGnfeProc,gGNFe,gGinfNFe,gGide     ! M 1/1 
	tIdeTPEmis := eEtpEmis   ! M  
endsegment

segment ScDV gGnfeProc,gGNFe,gGinfNFe,gGide     ! M 1/1 

endsegment

segment StpAmb gGnfeProc,gGNFe,gGinfNFe,gGide     ! M 1/1 

endsegment

segment SfinNFe gGnfeProc,gGNFe,gGinfNFe,gGide     ! M 1/1 

endsegment

segment SindFinal gGnfeProc,gGNFe,gGinfNFe,gGide     ! M 1/1 

endsegment

segment SindPres gGnfeProc,gGNFe,gGinfNFe,gGide     ! M 1/1 

endsegment

segment SprocEmi gGnfeProc,gGNFe,gGinfNFe,gGide     ! M 1/1 

endsegment

segment SverProc gGnfeProc,gGNFe,gGinfNFe,gGide     ! M 1/1 

endsegment

segment SdhCont gGnfeProc,gGNFe,gGinfNFe,gGide     ! M 1/1 

endsegment

segment SxJust gGnfeProc,gGNFe,gGinfNFe,gGide     ! M 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref : C 1/500 
segment SrefNFe gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref     ! C 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref,gGrefNF : C 1/1 
segment ScUF gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref,gGrefNF     ! M 1/1 

endsegment

segment SAAMM gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref,gGrefNF     ! M 1/1 

endsegment

segment SCNPJ gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref,gGrefNF     ! M 1/1 

endsegment

segment Smod gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref,gGrefNF     ! M 1/1 

endsegment

segment Sserie gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref,gGrefNF     ! M 1/1 

endsegment

segment SnNF gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref,gGrefNF     ! M 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref,gGrefNFP : C 1/1 
segment ScUF gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref,gGrefNFP     ! M 1/1 

endsegment

segment SAAMM gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref,gGrefNFP     ! M 1/1 

endsegment

segment SCNPJ gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref,gGrefNFP     ! C 1/1 

endsegment

segment SCPF gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref,gGrefNFP     ! C 1/1 

endsegment

segment SIE gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref,gGrefNFP     ! M 1/1 

endsegment

segment Smod gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref,gGrefNFP     ! M 1/1 

endsegment

segment Sserie gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref,gGrefNFP     ! M 1/1 

endsegment

segment SnNF gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref,gGrefNFP     ! M 1/1 

endsegment

segment SrefCTe gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref     ! C 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref,gGrefECF : C 1/1 
segment Smod gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref,gGrefECF     ! M 1/1 

endsegment

segment SnECF gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref,gGrefECF     ! M 1/1 

endsegment

segment SnCOO gGnfeProc,gGNFe,gGinfNFe,gGide,gGNFref,gGrefECF     ! M 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGemit : M 1/1 
segment SCNPJ gGnfeProc,gGNFe,gGinfNFe,gGemit     ! C 1/1 
	tEmitCNPJ := eECNPJ   ! C
endsegment

segment SCPF gGnfeProc,gGNFe,gGinfNFe,gGemit     ! C 1/1 

endsegment

segment SxNome gGnfeProc,gGNFe,gGinfNFe,gGemit     ! M 1/1 

endsegment

segment SxFant gGnfeProc,gGNFe,gGinfNFe,gGemit     ! C 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGemit,gGenderEmit : M 1/1 
segment SxLgr gGnfeProc,gGNFe,gGinfNFe,gGemit,gGenderEmit     ! M 1/1 

endsegment

segment Snro gGnfeProc,gGNFe,gGinfNFe,gGemit,gGenderEmit     ! M 1/1 

endsegment

segment SxCpl gGnfeProc,gGNFe,gGinfNFe,gGemit,gGenderEmit     ! C 1/1 

endsegment

segment SxBairro gGnfeProc,gGNFe,gGinfNFe,gGemit,gGenderEmit     ! M 1/1 

endsegment

segment ScMun gGnfeProc,gGNFe,gGinfNFe,gGemit,gGenderEmit     ! M 1/1 

endsegment

segment SxMun gGnfeProc,gGNFe,gGinfNFe,gGemit,gGenderEmit     ! M 1/1 

endsegment

segment SUF gGnfeProc,gGNFe,gGinfNFe,gGemit,gGenderEmit     ! M 1/1 

endsegment

segment SCEP gGnfeProc,gGNFe,gGinfNFe,gGemit,gGenderEmit     ! M 1/1 

endsegment

segment ScPais gGnfeProc,gGNFe,gGinfNFe,gGemit,gGenderEmit     ! C 1/1 

endsegment

segment SxPais gGnfeProc,gGNFe,gGinfNFe,gGemit,gGenderEmit     ! C 1/1 

endsegment

segment Sfone gGnfeProc,gGNFe,gGinfNFe,gGemit,gGenderEmit     ! C 1/1 

endsegment

segment SIE gGnfeProc,gGNFe,gGinfNFe,gGemit     ! M 1/1 
	tIEemit := eEIE
endsegment

segment SIEST gGnfeProc,gGNFe,gGinfNFe,gGemit     ! C 1/1 

endsegment

segment SIM gGnfeProc,gGNFe,gGinfNFe,gGemit     ! M 1/1 

endsegment

segment SCNAE gGnfeProc,gGNFe,gGinfNFe,gGemit     ! C 1/1 

endsegment

segment SCRT gGnfeProc,gGNFe,gGinfNFe,gGemit     ! M 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGavulsa : C 1/1 
segment SCNPJ gGnfeProc,gGNFe,gGinfNFe,gGavulsa     ! M 1/1 

endsegment

segment SxOrgao gGnfeProc,gGNFe,gGinfNFe,gGavulsa     ! M 1/1 

endsegment

segment Smatr gGnfeProc,gGNFe,gGinfNFe,gGavulsa     ! M 1/1 

endsegment

segment SxAgente gGnfeProc,gGNFe,gGinfNFe,gGavulsa     ! M 1/1 

endsegment

segment Sfone gGnfeProc,gGNFe,gGinfNFe,gGavulsa     ! C 1/1 

endsegment

segment SUF gGnfeProc,gGNFe,gGinfNFe,gGavulsa     ! M 1/1 

endsegment

segment SnDAR gGnfeProc,gGNFe,gGinfNFe,gGavulsa     ! C 1/1 

endsegment

segment SdEmi gGnfeProc,gGNFe,gGinfNFe,gGavulsa     ! C 1/1 

endsegment

segment SvDAR gGnfeProc,gGNFe,gGinfNFe,gGavulsa     ! C 1/1 

endsegment

segment SrepEmi gGnfeProc,gGNFe,gGinfNFe,gGavulsa     ! M 1/1 

endsegment

segment SdPag gGnfeProc,gGNFe,gGinfNFe,gGavulsa     ! C 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGdest : C 1/1 
segment SCNPJ gGnfeProc,gGNFe,gGinfNFe,gGdest     ! C 1/1 

endsegment

segment SCPF gGnfeProc,gGNFe,gGinfNFe,gGdest     ! C 1/1 

endsegment

segment SidEstrangeiro gGnfeProc,gGNFe,gGinfNFe,gGdest     ! C 1/1 

endsegment

segment SxNome gGnfeProc,gGNFe,gGinfNFe,gGdest     ! C 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGdest,gGenderDest : C 1/1 
segment SxLgr gGnfeProc,gGNFe,gGinfNFe,gGdest,gGenderDest     ! M 1/1 

endsegment

segment Snro gGnfeProc,gGNFe,gGinfNFe,gGdest,gGenderDest     ! M 1/1 

endsegment

segment SxCpl gGnfeProc,gGNFe,gGinfNFe,gGdest,gGenderDest     ! C 1/1 

endsegment

segment SxBairro gGnfeProc,gGNFe,gGinfNFe,gGdest,gGenderDest     ! M 1/1 

endsegment

segment ScMun gGnfeProc,gGNFe,gGinfNFe,gGdest,gGenderDest     ! M 1/1 

endsegment

segment SxMun gGnfeProc,gGNFe,gGinfNFe,gGdest,gGenderDest     ! M 1/1 

endsegment

segment SUF gGnfeProc,gGNFe,gGinfNFe,gGdest,gGenderDest     ! M 1/1 

endsegment

segment SCEP gGnfeProc,gGNFe,gGinfNFe,gGdest,gGenderDest     ! C 1/1 

endsegment

segment ScPais gGnfeProc,gGNFe,gGinfNFe,gGdest,gGenderDest     ! C 1/1 

endsegment

segment SxPais gGnfeProc,gGNFe,gGinfNFe,gGdest,gGenderDest     ! C 1/1 

endsegment

segment Sfone gGnfeProc,gGNFe,gGinfNFe,gGdest,gGenderDest     ! C 1/1 
	tFone := eEfone
endsegment

segment SindIEDest gGnfeProc,gGNFe,gGinfNFe,gGdest     ! M 1/1 

endsegment

segment SIE gGnfeProc,gGNFe,gGinfNFe,gGdest     ! C 1/1 
	tIEdest := eEIE
endsegment

segment SISUF gGnfeProc,gGNFe,gGinfNFe,gGdest     ! C 1/1 

endsegment

segment SIM gGnfeProc,gGNFe,gGinfNFe,gGdest     ! C 1/1 

endsegment

segment Semail gGnfeProc,gGNFe,gGinfNFe,gGdest     ! C 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGretirada : C 1/1 
segment SCNPJ gGnfeProc,gGNFe,gGinfNFe,gGretirada     ! C 1/1 

endsegment

segment SCPF gGnfeProc,gGNFe,gGinfNFe,gGretirada     ! C 1/1 

endsegment

segment SxLgr gGnfeProc,gGNFe,gGinfNFe,gGretirada     ! M 1/1 

endsegment

segment Snro gGnfeProc,gGNFe,gGinfNFe,gGretirada     ! M 1/1 

endsegment

segment SxCpl gGnfeProc,gGNFe,gGinfNFe,gGretirada     ! C 1/1 

endsegment

segment SxBairro gGnfeProc,gGNFe,gGinfNFe,gGretirada     ! M 1/1 

endsegment

segment ScMun gGnfeProc,gGNFe,gGinfNFe,gGretirada     ! M 1/1 

endsegment

segment SxMun gGnfeProc,gGNFe,gGinfNFe,gGretirada     ! M 1/1 

endsegment

segment SUF gGnfeProc,gGNFe,gGinfNFe,gGretirada     ! M 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGentrega : C 1/1 
segment SCNPJ gGnfeProc,gGNFe,gGinfNFe,gGentrega     ! C 1/1 

endsegment

segment SCPF gGnfeProc,gGNFe,gGinfNFe,gGentrega     ! C 1/1 

endsegment

segment SxLgr gGnfeProc,gGNFe,gGinfNFe,gGentrega     ! M 1/1 

endsegment

segment Snro gGnfeProc,gGNFe,gGinfNFe,gGentrega     ! M 1/1 

endsegment

segment SxCpl gGnfeProc,gGNFe,gGinfNFe,gGentrega     ! C 1/1 

endsegment

segment SxBairro gGnfeProc,gGNFe,gGinfNFe,gGentrega     ! M 1/1 

endsegment

segment ScMun gGnfeProc,gGNFe,gGinfNFe,gGentrega     ! M 1/1 

endsegment

segment SxMun gGnfeProc,gGNFe,gGinfNFe,gGentrega     ! M 1/1 

endsegment

segment SUF gGnfeProc,gGNFe,gGinfNFe,gGentrega     ! M 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGautXML : C 1/10 
segment SCNPJ gGnfeProc,gGNFe,gGinfNFe,gGautXML     ! C 1/1 

endsegment

segment SCPF gGnfeProc,gGNFe,gGinfNFe,gGautXML     ! C 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGdet : M 1/990 
segment Sdet gGnfeProc,gGNFe,gGinfNFe,gGdet     ! M 1/990 
	nCountItem++
endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod : M 1/1 
segment ScProd gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! M 1/1 
	taProd[nContadorItem] := eEcProd
endsegment

segment ScEAN gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! M 1/1 

endsegment

segment SxProd gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! M 1/1 

endsegment

segment SNCM gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! M 1/1 

endsegment

segment SNVE gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! C 1/8 

endsegment

segment SCEST gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! M 1/1 

endsegment

segment SindEscala gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! C 1/1 

endsegment

segment SCNPJFab gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! C 1/1 

endsegment

segment ScBenef gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! C 1/1 

endsegment

segment SEXTIPI gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! C 1/1 

endsegment

segment SCFOP gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! M 1/1 

endsegment

segment SuCom gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! M 1/1 

endsegment

segment SqCom gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! M 1/1 

endsegment

segment SvUnCom gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! M 1/1 
	taUnCom[nContadorItem] := eEvUnCom
	taUnComProd[taProd[nContadorItem]] := eEvUnCom
endsegment

segment SvProd gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! M 1/1 

endsegment

segment ScEANTrib gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! M 1/1 

endsegment

segment SuTrib gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! M 1/1 

endsegment

segment SqTrib gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! M 1/1 

endsegment

segment SvUnTrib gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! M 1/1 

endsegment

segment SvFrete gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! C 1/1 

endsegment

segment SvSeg gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! C 1/1 

endsegment

segment SvDesc gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! C 1/1 

endsegment

segment SvOutro gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! C 1/1 

endsegment

segment SindTot gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! M 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGDI : C 1/100 
segment SnDI gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGDI     ! M 1/1 

endsegment

segment SdDI gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGDI     ! M 1/1 

endsegment

segment SxLocDesemb gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGDI     ! M 1/1 

endsegment

segment SUFDesemb gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGDI     ! M 1/1 

endsegment

segment SdDesemb gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGDI     ! M 1/1 

endsegment

segment StpViaTransp gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGDI     ! M 1/1 

endsegment

segment SvAFRMM gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGDI     ! C 1/1 

endsegment

segment StpIntermedio gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGDI     ! M 1/1 

endsegment

segment SCNPJ gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGDI     ! C 1/1 

endsegment

segment SUFTerceiro gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGDI     ! C 1/1 

endsegment

segment ScExportador gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGDI     ! M 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGDI,gGadi : M 1/100 
segment SnAdicao gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGDI,gGadi     ! M 1/1 

endsegment

segment SnSeqAdic gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGDI,gGadi     ! M 1/1 

endsegment

segment ScFabricante gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGDI,gGadi     ! M 1/1 

endsegment

segment SvDescDI gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGDI,gGadi     ! C 1/1 

endsegment

segment SnDraw gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGDI,gGadi     ! C 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGdetExport : C 1/500 
segment SnDraw gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGdetExport     ! C 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGdetExport,gGexportInd : C 1/1 
segment SnRE gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGdetExport,gGexportInd     ! M 1/1 

endsegment

segment SchNFe gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGdetExport,gGexportInd     ! M 1/1 

endsegment

segment SqExport gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGdetExport,gGexportInd     ! M 1/1 

endsegment

segment SxPed gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! C 1/1 
	tREFLIV := eExPed
endsegment

segment SnItemPed gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! C 1/1 

endsegment

segment SnFCI gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! C 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGrastro : C 1/500 
segment SnLote gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGrastro     ! M 1/1 

endsegment

segment SqLote gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGrastro     ! M 1/1 

endsegment

segment SdFab gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGrastro     ! M 1/1 

endsegment

segment SdVal gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGrastro     ! M 1/1 

endsegment

segment ScAgreg gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGrastro     ! C 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd : C 1/1 
segment StpOp gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment Schassi gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment ScCor gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment SxCor gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment Spot gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment Scilin gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment SpesoL gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment SpesoB gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment SnSerie gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment StpComb gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment SnMotor gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment SCMT gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment Sdist gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment SanoMod gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment SanoFab gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment StpPint gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment StpVeic gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment SespVeic gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment SVIN gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment ScondVeic gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment ScMod gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment ScCorDENATRAN gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment Slota gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

segment StpRest gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGveicProd     ! M 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGmed : C 1/1 
segment ScProdANVISA gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGmed     ! M 1/1 

endsegment

segment SvPMC gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGmed     ! M 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGarma : C 1/500 
segment StpArma gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGarma     ! M 1/1 

endsegment

segment SnSerie gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGarma     ! M 1/1 

endsegment

segment SnCano gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGarma     ! M 1/1 

endsegment

segment Sdescr gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGarma     ! M 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGcomb : C 1/1 
segment ScProdANP gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGcomb     ! M 1/1 

endsegment

segment SdescANP gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGcomb     ! M 1/1 

endsegment

segment SpGLP gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGcomb     ! C 1/1 

endsegment

segment SpGNn gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGcomb     ! C 1/1 

endsegment

segment SpGNi gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGcomb     ! C 1/1 

endsegment

segment SvPart gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGcomb     ! C 1/1 

endsegment

segment SCODIF gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGcomb     ! C 1/1 

endsegment

segment SqTemp gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGcomb     ! C 1/1 

endsegment

segment SUFCons gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGcomb     ! M 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGcomb,gGCIDE : C 1/1 
segment SqBCProd gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGcomb,gGCIDE     ! M 1/1 

endsegment

segment SvAliqProd gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGcomb,gGCIDE     ! M 1/1 

endsegment

segment SvCIDE gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGcomb,gGCIDE     ! M 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGcomb,gGencerrante : C 1/1 
segment SnBico gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGcomb,gGencerrante     ! M 1/1 

endsegment

segment SnBomba gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGcomb,gGencerrante     ! C 1/1 

endsegment

segment SnTanque gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGcomb,gGencerrante     ! M 1/1 

endsegment

segment SvEncIni gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGcomb,gGencerrante     ! M 1/1 

endsegment

segment SvEncFin gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod,gGcomb,gGencerrante     ! M 1/1 

endsegment

segment SnRECOPI gGnfeProc,gGNFe,gGinfNFe,gGdet,gGprod     ! C 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGdet,gGimposto : M 1/1 
segment SvTotTrib gGnfeProc,gGNFe,gGinfNFe,gGdet,gGimposto     ! C 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGdet,gGimposto,gGPISST : C 1/1 
segment SvPIS gGnfeProc,gGNFe,gGinfNFe,gGdet,gGimposto,gGPISST     ! M 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGdet,gGimposto,gGCOFINSST : C 1/1 
segment SvCOFINS gGnfeProc,gGNFe,gGinfNFe,gGdet,gGimposto,gGCOFINSST     ! M 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGdet,gGimposto,gGICMSUFDest : C 1/1 
segment SvBCUFDest gGnfeProc,gGNFe,gGinfNFe,gGdet,gGimposto,gGICMSUFDest     ! M 1/1 

endsegment

segment SpFCPUFDest gGnfeProc,gGNFe,gGinfNFe,gGdet,gGimposto,gGICMSUFDest     ! M 1/1 

endsegment

segment SpICMSUFDest gGnfeProc,gGNFe,gGinfNFe,gGdet,gGimposto,gGICMSUFDest     ! M 1/1 

endsegment

segment SpICMSInter gGnfeProc,gGNFe,gGinfNFe,gGdet,gGimposto,gGICMSUFDest     ! M 1/1 

endsegment

segment SpICMSInterPart gGnfeProc,gGNFe,gGinfNFe,gGdet,gGimposto,gGICMSUFDest     ! M 1/1 

endsegment

segment SvFCPUFDest gGnfeProc,gGNFe,gGinfNFe,gGdet,gGimposto,gGICMSUFDest     ! M 1/1 

endsegment

segment SvICMSUFDest gGnfeProc,gGNFe,gGinfNFe,gGdet,gGimposto,gGICMSUFDest     ! M 1/1 

endsegment

segment SvICMSUFRemet gGnfeProc,gGNFe,gGinfNFe,gGdet,gGimposto,gGICMSUFDest     ! M 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGdet,gGimpostoDevol : C 1/1 
segment SpDevol gGnfeProc,gGNFe,gGinfNFe,gGdet,gGimpostoDevol     ! M 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGdet,gGimpostoDevol,gGIPI : M 1/1 
segment SvIPIDevol gGnfeProc,gGNFe,gGinfNFe,gGdet,gGimpostoDevol,gGIPI     ! M 1/1 

endsegment

segment SinfAdProd gGnfeProc,gGNFe,gGinfNFe,gGdet     ! C 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGtotal : M 1/1 
! Group gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot : M 1/1 
segment SvBC gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! M 1/1 

endsegment

segment SvICMS gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! M 1/1 

endsegment

segment SvICMSDeson gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! M 1/1 

endsegment

segment SvFCPUFDest gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! C 1/1 

endsegment

segment SvICMSUFDest gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! C 1/1 

endsegment

segment SvICMSUFRemet gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! C 1/1 

endsegment

segment SvFCP gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! M 1/1 

endsegment

segment SvBCST gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! M 1/1 

endsegment

segment SvST gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! M 1/1 

endsegment

segment SvFCPST gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! M 1/1 

endsegment

segment SvFCPSTRet gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! M 1/1 

endsegment

segment SvProd gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! M 1/1 

endsegment

segment SvFrete gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! M 1/1 

endsegment

segment SvSeg gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! M 1/1 

endsegment

segment SvDesc gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! M 1/1 

endsegment

segment SvII gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! M 1/1 

endsegment

segment SvIPI gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! M 1/1 

endsegment

segment SvIPIDevol gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! M 1/1 

endsegment

segment SvPIS gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! M 1/1 

endsegment

segment SvCOFINS gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! M 1/1 

endsegment

segment SvOutro gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! M 1/1 

endsegment

segment SvNF gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! M 1/1 
	tVALRUBVNF := eEvNF 
	tTotalvNF := eEvNF   ! M  
endsegment

segment SvTotTrib gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGICMSTot     ! C 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGISSQNtot : C 1/1 
segment SvServ gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGISSQNtot     ! C 1/1 

endsegment

segment SvBC gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGISSQNtot     ! C 1/1 

endsegment

segment SvISS gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGISSQNtot     ! C 1/1 

endsegment

segment SvPIS gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGISSQNtot     ! C 1/1 

endsegment

segment SvCOFINS gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGISSQNtot     ! C 1/1 

endsegment

segment SdCompet gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGISSQNtot     ! M 1/1 

endsegment

segment SvDeducao gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGISSQNtot     ! C 1/1 

endsegment

segment SvOutro gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGISSQNtot     ! C 1/1 

endsegment

segment SvDescIncond gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGISSQNtot     ! C 1/1 

endsegment

segment SvDescCond gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGISSQNtot     ! C 1/1 

endsegment

segment SvISSRet gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGISSQNtot     ! C 1/1 

endsegment

segment ScRegTrib gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGISSQNtot     ! C 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGretTrib : C 1/1 
segment SvRetPIS gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGretTrib     ! C 1/1 

endsegment

segment SvRetCOFINS gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGretTrib     ! C 1/1 

endsegment

segment SvRetCSLL gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGretTrib     ! C 1/1 

endsegment

segment SvBCIRRF gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGretTrib     ! C 1/1 

endsegment

segment SvIRRF gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGretTrib     ! C 1/1 

endsegment

segment SvBCRetPrev gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGretTrib     ! C 1/1 

endsegment

segment SvRetPrev gGnfeProc,gGNFe,gGinfNFe,gGtotal,gGretTrib     ! C 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGtransp : M 1/1 
segment SmodFrete gGnfeProc,gGNFe,gGinfNFe,gGtransp     ! M 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGtransporta : C 1/1 
segment SCNPJ gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGtransporta     ! C 1/1 

endsegment

segment SCPF gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGtransporta     ! C 1/1 

endsegment

segment SxNome gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGtransporta     ! C 1/1 

endsegment

segment SIE gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGtransporta     ! C 1/1 

endsegment

segment SxEnder gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGtransporta     ! C 1/1 

endsegment

segment SxMun gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGtransporta     ! C 1/1 

endsegment

segment SUF gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGtransporta     ! C 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGretTransp : C 1/1 
segment SvServ gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGretTransp     ! M 1/1 

endsegment

segment SvBCRet gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGretTransp     ! M 1/1 

endsegment

segment SpICMSRet gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGretTransp     ! M 1/1 

endsegment

segment SvICMSRet gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGretTransp     ! M 1/1 

endsegment

segment SCFOP gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGretTransp     ! M 1/1 

endsegment

segment ScMunFG gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGretTransp     ! M 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGveicTransp : C 1/1 
segment Splaca gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGveicTransp     ! M 1/1 

endsegment

segment SUF gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGveicTransp     ! M 1/1 

endsegment

segment SRNTC gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGveicTransp     ! C 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGreboque : C 1/5 
segment Splaca gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGreboque     ! M 1/1 

endsegment

segment SUF gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGreboque     ! M 1/1 

endsegment

segment SRNTC gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGreboque     ! C 1/1 

endsegment

segment Svagao gGnfeProc,gGNFe,gGinfNFe,gGtransp     ! C 1/1 

endsegment

segment Sbalsa gGnfeProc,gGNFe,gGinfNFe,gGtransp     ! C 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGvol : C 1/5000 
segment SqVol gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGvol     ! C 1/1 
	tVALRUBQvol := eEqVol
	tDIPLIV5121 := eEqVol
endsegment

segment Sesp gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGvol     ! C 1/1 
	
endsegment

segment Smarca gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGvol     ! C 1/1 

endsegment

segment SnVol gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGvol     ! C 1/1 

endsegment

segment SpesoL gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGvol     ! C 1/1 

endsegment

segment SpesoB gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGvol     ! C 1/1 
	tVALRUBPesoB := eEpesoB
endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGvol,gGlacres : C 1/5000 
segment SnLacre gGnfeProc,gGNFe,gGinfNFe,gGtransp,gGvol,gGlacres     ! M 1/1 

endsegment

segment Scobr gGnfeProc,gGNFe,gGinfNFe     ! C 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGpag : M 1/1 
! Group gGnfeProc,gGNFe,gGinfNFe,gGpag,gGdetPag : M 1/100 
segment StPag gGnfeProc,gGNFe,gGinfNFe,gGpag,gGdetPag     ! M 1/1 

endsegment

segment SvPag gGnfeProc,gGNFe,gGinfNFe,gGpag,gGdetPag     ! M 1/1 

endsegment

segment SinfAdic gGnfeProc,gGNFe,gGinfNFe     ! C 1/1 

endsegment

segment SinfCpl gGnfeProc,gGNFe,gGinfNFe,gGinfAdic     ! C 1/1 
	tRastreio := build(index(eEinfCpl, "RASTREIO: ")) 
	if tRastreio <> "0" then
		tLIBTXL20 := substr(eEinfCpl, index(eEinfCpl, "RASTREIO: ") + 10, length(eEinfCpl) - (index(eEinfCpl, "RASTREIO: ") + 9))
		log("tLIBTXL20 = |", tLIBTXL20, "|", NL)
	endif
endsegment

segment SinfAdFisco gGnfeProc,gGNFe,gGinfNFe,gGinfAdic     ! C 1/1 

endsegment

segment SobsCont gGnfeProc,gGNFe,gGinfNFe,gGinfAdic    ! C 1/1
    tXCampo := eAxCampo
endsegment

segment SxTexto gGnfeProc,gGNFe,gGinfNFe,gGinfAdic,gGobsCont     ! C 1/1
    if tXCampo = "xCub" then
        tXtexto := eExTexto
    endif
endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGexporta : C 1/1 
segment SUFSaidaPais gGnfeProc,gGNFe,gGinfNFe,gGexporta     ! M 1/1 

endsegment

segment SxLocExporta gGnfeProc,gGNFe,gGinfNFe,gGexporta     ! M 1/1 

endsegment

segment Scompra gGnfeProc,gGNFe,gGinfNFe     ! C 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGcana : C 1/1 
segment Ssafra gGnfeProc,gGNFe,gGinfNFe,gGcana     ! M 1/1 

endsegment

segment Sref gGnfeProc,gGNFe,gGinfNFe,gGcana     ! M 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFe,gGcana,gGforDia : M 1/31 
segment SforDia gGnfeProc,gGNFe,gGinfNFe,gGcana,gGforDia     ! M 1/31 

endsegment

segment Sqtde gGnfeProc,gGNFe,gGinfNFe,gGcana,gGforDia     ! M 1/1 

endsegment

segment SqTotMes gGnfeProc,gGNFe,gGinfNFe,gGcana     ! M 1/1 

endsegment

segment SqTotAnt gGnfeProc,gGNFe,gGinfNFe,gGcana     ! M 1/1 

endsegment

segment SqTotGer gGnfeProc,gGNFe,gGinfNFe,gGcana     ! M 1/1 

endsegment

segment SvFor gGnfeProc,gGNFe,gGinfNFe,gGcana     ! M 1/1 

endsegment

segment SvTotDed gGnfeProc,gGNFe,gGinfNFe,gGcana     ! M 1/1 

endsegment

segment SvLiqFor gGnfeProc,gGNFe,gGinfNFe,gGcana     ! M 1/1 

endsegment

! Group gGnfeProc,gGNFe,gGinfNFeSupl : C 1/1 
segment SqrCode gGnfeProc,gGNFe,gGinfNFeSupl     ! M 1/1 

endsegment

segment SurlChave gGnfeProc,gGNFe,gGinfNFeSupl     ! M 1/1 

endsegment

segment Sds:Signature gGnfeProc,gGNFe,gGds:Signature     ! M 1/1 

endsegment

! Group gGnfeProc,gGprotNFe : M 1/1 
segment SprotNFe gGnfeProc,gGprotNFe     ! M 1/1 

endsegment

! Group gGnfeProc,gGprotNFe,gGinfProt : M 1/1 
segment SinfProt gGnfeProc,gGprotNFe,gGinfProt     ! C 1/1 

endsegment

segment StpAmb gGnfeProc,gGprotNFe,gGinfProt     ! M 1/1 

endsegment

segment SverAplic gGnfeProc,gGprotNFe,gGinfProt     ! M 1/1 

endsegment

segment SchNFe gGnfeProc,gGprotNFe,gGinfProt     ! M 1/1 
	tChNFe := eEchNFe
endsegment

segment SdhRecbto gGnfeProc,gGprotNFe,gGinfProt     ! M 1/1 

endsegment

segment SnProt gGnfeProc,gGprotNFe,gGinfProt     ! C 1/1 
	tNProt := eEnProt
endsegment

segment SdigVal gGnfeProc,gGprotNFe,gGinfProt     ! C 1/1 

endsegment

segment ScStat gGnfeProc,gGprotNFe,gGinfProt     ! M 1/1 

endsegment

segment SxMotivo gGnfeProc,gGprotNFe,gGinfProt     ! M 1/1 

endsegment

! Group gGnfeProc,gGprotNFe,gGds:Signature : C 1/1 
! Group gGnfeProc,gGprotNFe,gGds:Signature,gGds:SignedInfo : M 1/1 
segment Sds:CanonicalizationMethod gGnfeProc,gGprotNFe,gGds:Signature,gGds:SignedInfo     ! M 1/1 

endsegment

segment Sds:SignatureMethod gGnfeProc,gGprotNFe,gGds:Signature,gGds:SignedInfo     ! M 1/1 

endsegment

! Group gGnfeProc,gGprotNFe,gGds:Signature,gGds:SignedInfo,gGds:Reference : M 1/1 
segment Sds:Reference gGnfeProc,gGprotNFe,gGds:Signature,gGds:SignedInfo,gGds:Reference     ! M 1/1 

endsegment

! Group gGnfeProc,gGprotNFe,gGds:Signature,gGds:SignedInfo,gGds:Reference,gGds:Transforms : M 1/1 
segment Sds:Transform gGnfeProc,gGprotNFe,gGds:Signature,gGds:SignedInfo,gGds:Reference,gGds:Transforms     ! M 1/2 

endsegment

segment Sds:DigestMethod gGnfeProc,gGprotNFe,gGds:Signature,gGds:SignedInfo,gGds:Reference     ! M 1/1 

endsegment

segment Sds:DigestValue gGnfeProc,gGprotNFe,gGds:Signature,gGds:SignedInfo,gGds:Reference     ! M 1/1 

endsegment

segment Sds:SignatureValue gGnfeProc,gGprotNFe,gGds:Signature     ! M 1/1 

endsegment

! Group gGnfeProc,gGprotNFe,gGds:Signature,gGds:KeyInfo : M 1/1 
! Group gGnfeProc,gGprotNFe,gGds:Signature,gGds:KeyInfo,gGds:X509Data : M 1/1 
segment Sds:X509Certificate gGnfeProc,gGprotNFe,gGds:Signature,gGds:KeyInfo,gGds:X509Data     ! M 1/1 

endsegment

! Default statements section
default

enddefault

!===========================================================

! End statements section

end
	bfSqlInit()

	if not bfSqlJdbc(tDbBase, tDbUsername, tDbPassword, tDbUrl) then
		print("FATAL ",tfSqlErrorStr())
		bfSqlClose(tDbBase)
		bfMajtraceJamRub("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na abertura do banco de dados: ",tfSqlErrorStr()))
		exit(1)
	endif

	if not bfSqlJdbc(tDbBase2, tDbUsername, tDbPassword, tDbUrl) then
		print("FATAL ",tfSqlErrorStr())
		bfSqlClose(tDbBase2)
		bfMajtraceJamRub("Erro de Traducao","1",tNumeroDocumento,tDataDocumento,tFileInput,tFileOut,"Produtos",build("Erro na abertura do banco de dados: ",tfSqlErrorStr()))
		exit(1)
	endif
	
	if tEmitCNPJ = "16587166000439" then
		bPrimeiroRegistoCSV := TRUE
		bPrimeiroRegistoCSV2 := TRUE
		bPrimeiroRegistoCSV3 := TRUE
		nSeqCsv := cSeqCsvSignify

		tFileOutCSV := build(sHOME,"/ToInfolog/I-FGE50FM",tToInfologPrefixFilename,"GELIRUB_SIS_",time("now" ,"%Y%m%d"),"_",build(nSeqCsv:R010),".DAT")
		tFileOutTempCSV := build(sHOME,"/ToInfolog/Temp/I-FGE50FM",tToInfologPrefixFilename,"GELIRUB_SIS_",time("now" ,"%Y%m%d"),"_",build(nSeqCsv:R010),".DAT")
		tNameOutCSV := build("I-FGE50FM",tToInfologPrefixFilename,"GELIRUB_SIS_",time("now" ,"%Y%m%d"),"_",build(nSeqCsv:R010),".DAT")

		tFileOutCSV2 := build(sHOME,"/ToInfolog/I-FGE50FM",tToInfologPrefixFilename,"GETXL_SIS_",time("now" ,"%Y%m%d"),"_",build(nSeqCsv:R010),".DAT")
		tFileOutTempCSV2 := build(sHOME,"/ToInfolog/Temp/I-FGE50FM",tToInfologPrefixFilename,"GETXL_SIS_",time("now" ,"%Y%m%d"),"_",build(nSeqCsv:R010),".DAT")
		tNameOutCSV2 := build("I-FGE50FM",tToInfologPrefixFilename,"GETXL_SIS_",time("now" ,"%Y%m%d"),"_",build(nSeqCsv:R010),".DAT")

		tFileOutCSV3 := build(sHOME,"/ToInfolog/I-FGE50FM",tToInfologPrefixFilename,"GERILP_SIS_",time("now" ,"%Y%m%d"),"_",build(nSeqCsv:R010),".DAT")
		tFileOutTempCSV3 := build(sHOME,"/ToInfolog/Temp/I-FGE50FM",tToInfologPrefixFilename,"GERILP_SIS_",time("now" ,"%Y%m%d"),"_",build(nSeqCsv:R010),".DAT")
		tNameOutCSV3 := build("I-FGE50FM",tToInfologPrefixFilename,"GERILP_SIS_",time("now" ,"%Y%m%d"),"_",build(nSeqCsv:R010),".DAT")

		if bPrimeiroRegistoCSV = TRUE then
			bPrimeiroRegistoCSV := FALSE
			print("NUMLIV;SNULIV;TYPRUB;CODRUB;VALRUB;VALNUM;DISPO;MAJCRE;MAJDAT;MAJHMS;MAJPGM;MAJUTI;MAJECR",NL) >> tFileOutTempCSV
		endif

		tQuery := build("SELECT NUMLIV, SNULIV, CODTLI ", NL," "\
						"	FROM FGE50FM",tToInfologPrefixFilename,".GELIVE ", NL," "\
						"	WHERE REFLIV = '",tREFLIV,"'")

		log("----------------------------------------", NL)
		log(tQuery,NL)
		log("----------------------------------------", NL)

		if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
			print("FATAL ", tfSqlErrorStr())
			bfMajtraceJamRub("Erro de Traducao","1",tREFLIV,tVALRUBNF,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
			exit(1)
		endif

		if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
			print("FATAL ", tfSqlErrorStr())
			bfMajtraceJamRub("Erro de Traducao","1",tREFLIV,tVALRUBNF,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
			exit(1)
		endif

		while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
			tNUMLIVQur := peel(taDb2Array["NUMLIV"]," ")
			tSNULIVQur := peel(taDb2Array["SNULIV"]," ")
			tCODTLIQur := peel(taDb2Array["CODTLI"]," ")
			remove(taDb2Array)
		endwhile

		if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
			print("FATAL", tfSqlErrorStr())
			bfMajtraceJamRub("Erro de Traducao","1",tREFLIV,tVALRUBNF,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
			exit(1)
		endif

		tNUMLIVCSV := tNUMLIVQur
		tSNULIVCSV := tSNULIVQur
		tTYPRUBCSV := "2"
		tCODRUBCSV := "*GM1"
		if tCODTLIQur = "VD" then
			tVALRUBCSV := "PED.VENDA - NF OK"
		else
			tVALRUBCSV := "ECOMMERCE - NF OK"
		endif
		tVALNUMCSV := ""
		tDISPOCSV  := ""
		tMAJCRECSV := time("now" ,"%Y%m%d")
		tMAJDATCSV := time("now" ,"%Y%m%d")
		tMAJHMSCSV := time("now" ,"%H%M%S")
		tMAJPGMCSV := "GEPR1RUB2"
		tMAJUTICSV := build("UFM",tToInfologPrefixFilename)
		tMAJECRCSV := "QPADEV001"

		print(tNUMLIVCSV,";",tSNULIVCSV,";",tTYPRUBCSV \
			,";",tCODRUBCSV,";",tVALRUBCSV,";",tVALNUMCSV \
			,";",tDISPOCSV,";",tMAJCRECSV,";",tMAJDATCSV,";" \
			,tMAJHMSCSV,";",tMAJPGMCSV,";",tMAJUTICSV,";" \
			,tMAJECRCSV,";", NL) >> tFileOutTempCSV	

		tNUMLIVCSV := tNUMLIVQur
		tSNULIVCSV := tSNULIVQur
		tTYPRUBCSV := "2"
		tCODRUBCSV := "DT01"
		tVALRUBCSV := build(tfConvertDate(tDATEXP, "YYYYMMDD" , "DD/MM/YYYY"))
		tVALNUMCSV := ""
		tDISPOCSV  := ""
		tMAJCRECSV := time("now" ,"%Y%m%d")
		tMAJDATCSV := time("now" ,"%Y%m%d")
		tMAJHMSCSV := time("now" ,"%H%M%S")
		tMAJPGMCSV := "GEPR1RUB2"
		tMAJUTICSV := build("UFM",tToInfologPrefixFilename)
		tMAJECRCSV := "QPADEV001"

		print(tNUMLIVCSV,";",tSNULIVCSV,";",tTYPRUBCSV \
			,";",tCODRUBCSV,";",tVALRUBCSV,";",tVALNUMCSV \
			,";",tDISPOCSV,";",tMAJCRECSV,";",tMAJDATCSV,";" \
			,tMAJHMSCSV,";",tMAJPGMCSV,";",tMAJUTICSV,";" \
			,tMAJECRCSV,";", NL) >> tFileOutTempCSV

		tNUMLIVCSV := tNUMLIVQur
		tSNULIVCSV := tSNULIVQur
		tTYPRUBCSV := "2"
		tCODRUBCSV := "NF01"
		tVALRUBCSV := tVALRUBNF
		tVALNUMCSV := ""
		tDISPOCSV  := ""
		tMAJCRECSV := time("now" ,"%Y%m%d")
		tMAJDATCSV := time("now" ,"%Y%m%d")
		tMAJHMSCSV := time("now" ,"%H%M%S")
		tMAJPGMCSV := "GEPR1RUB2"
		tMAJUTICSV := build("UFM",tToInfologPrefixFilename)
		tMAJECRCSV := "QPADEV001"

		print(tNUMLIVCSV,";",tSNULIVCSV,";",tTYPRUBCSV \
			,";",tCODRUBCSV,";",tVALRUBCSV,";",tVALNUMCSV \
			,";",tDISPOCSV,";",tMAJCRECSV,";",tMAJDATCSV,";" \
			,tMAJHMSCSV,";",tMAJPGMCSV,";",tMAJUTICSV,";" \
			,tMAJECRCSV,";", NL) >> tFileOutTempCSV

		tNUMLIVCSV := tNUMLIVQur
		tSNULIVCSV := tSNULIVQur
		tTYPRUBCSV := "2"
		tCODRUBCSV := "PS01"
		tVALRUBCSV := tVALRUBPesoB
		tVALNUMCSV := ""
		tDISPOCSV  := ""
		tMAJCRECSV := time("now" ,"%Y%m%d")
		tMAJDATCSV := time("now" ,"%Y%m%d")
		tMAJHMSCSV := time("now" ,"%H%M%S")
		tMAJPGMCSV := "GEPR1RUB2"
		tMAJUTICSV := build("UFM",tToInfologPrefixFilename)
		tMAJECRCSV := "QPADEV001"

		print(tNUMLIVCSV,";",tSNULIVCSV,";",tTYPRUBCSV \
			,";",tCODRUBCSV,";",tVALRUBCSV,";",tVALNUMCSV \
			,";",tDISPOCSV,";",tMAJCRECSV,";",tMAJDATCSV,";" \
			,tMAJHMSCSV,";",tMAJPGMCSV,";",tMAJUTICSV,";" \
			,tMAJECRCSV,";", NL) >> tFileOutTempCSV

		tNUMLIVCSV := tNUMLIVQur
		tSNULIVCSV := tSNULIVQur
		tTYPRUBCSV := "2"
		tCODRUBCSV := "QLIN"
		tVALRUBCSV := build(nCountItem)
		tVALNUMCSV := ""
		tDISPOCSV  := ""
		tMAJCRECSV := time("now" ,"%Y%m%d")
		tMAJDATCSV := time("now" ,"%Y%m%d")
		tMAJHMSCSV := time("now" ,"%H%M%S")
		tMAJPGMCSV := "GEPR1RUB2"
		tMAJUTICSV := build("UFM",tToInfologPrefixFilename)
		tMAJECRCSV := "QPADEV001"

		print(tNUMLIVCSV,";",tSNULIVCSV,";",tTYPRUBCSV \
			,";",tCODRUBCSV,";",tVALRUBCSV,";",tVALNUMCSV \
			,";",tDISPOCSV,";",tMAJCRECSV,";",tMAJDATCSV,";" \
			,tMAJHMSCSV,";",tMAJPGMCSV,";",tMAJUTICSV,";" \
			,tMAJECRCSV,";", NL) >> tFileOutTempCSV

		tNUMLIVCSV := tNUMLIVQur
		tSNULIVCSV := tSNULIVQur
		tTYPRUBCSV := "2"
		tCODRUBCSV := "SE01"
		tVALRUBCSV := tVALRUBSerie
		tVALNUMCSV := ""
		tDISPOCSV  := ""
		tMAJCRECSV := time("now" ,"%Y%m%d")
		tMAJDATCSV := time("now" ,"%Y%m%d")
		tMAJHMSCSV := time("now" ,"%H%M%S")
		tMAJPGMCSV := "GEPR1RUB2"
		tMAJUTICSV := build("UFM",tToInfologPrefixFilename)
		tMAJECRCSV := "QPADEV001"

		print(tNUMLIVCSV,";",tSNULIVCSV,";",tTYPRUBCSV \
			,";",tCODRUBCSV,";",tVALRUBCSV,";",tVALNUMCSV \
			,";",tDISPOCSV,";",tMAJCRECSV,";",tMAJDATCSV,";" \
			,tMAJHMSCSV,";",tMAJPGMCSV,";",tMAJUTICSV,";" \
			,tMAJECRCSV,";", NL) >> tFileOutTempCSV

		tNUMLIVCSV := tNUMLIVQur
		tSNULIVCSV := tSNULIVQur
		tTYPRUBCSV := "2"
		tCODRUBCSV := "VC01"
		tVALRUBCSV := tXtexto
		tVALNUMCSV := ""
		tDISPOCSV  := ""
		tMAJCRECSV := time("now" ,"%Y%m%d")
		tMAJDATCSV := time("now" ,"%Y%m%d")
		tMAJHMSCSV := time("now" ,"%H%M%S")
		tMAJPGMCSV := "GEPR1RUB2"
		tMAJUTICSV := build("UFM",tToInfologPrefixFilename)
		tMAJECRCSV := "QPADEV001"

		print(tNUMLIVCSV,";",tSNULIVCSV,";",tTYPRUBCSV \
			,";",tCODRUBCSV,";",tVALRUBCSV,";",tVALNUMCSV \
			,";",tDISPOCSV,";",tMAJCRECSV,";",tMAJDATCSV,";" \
			,tMAJHMSCSV,";",tMAJPGMCSV,";",tMAJUTICSV,";" \
			,tMAJECRCSV,";", NL) >> tFileOutTempCSV
										
		tNUMLIVCSV := tNUMLIVQur
		tSNULIVCSV := tSNULIVQur
		tTYPRUBCSV := "2"
		tCODRUBCSV := "VL01"
		tVALRUBCSV := tVALRUBVNF
		tVALNUMCSV := ""
		tDISPOCSV  := ""
		tMAJCRECSV := time("now" ,"%Y%m%d")
		tMAJDATCSV := time("now" ,"%Y%m%d")
		tMAJHMSCSV := time("now" ,"%H%M%S")
		tMAJPGMCSV := "GEPR1RUB2"
		tMAJUTICSV := build("UFM",tToInfologPrefixFilename)
		tMAJECRCSV := "QPADEV001"

		print(tNUMLIVCSV,";",tSNULIVCSV,";",tTYPRUBCSV \
			,";",tCODRUBCSV,";",tVALRUBCSV,";",tVALNUMCSV \
			,";",tDISPOCSV,";",tMAJCRECSV,";",tMAJDATCSV,";" \
			,tMAJHMSCSV,";",tMAJPGMCSV,";",tMAJUTICSV,";" \
			,tMAJECRCSV,";", NL) >> tFileOutTempCSV

		tNUMLIVCSV := tNUMLIVQur
		tSNULIVCSV := tSNULIVQur
		tTYPRUBCSV := "2"
		tCODRUBCSV := "VO01"
		tVALRUBCSV := tVALRUBQvol
		tVALNUMCSV := ""
		tDISPOCSV  := ""
		tMAJCRECSV := time("now" ,"%Y%m%d")
		tMAJDATCSV := time("now" ,"%Y%m%d")
		tMAJHMSCSV := time("now" ,"%H%M%S")
		tMAJPGMCSV := "GEPR1RUB2"
		tMAJUTICSV := build("UFM",tToInfologPrefixFilename)
		tMAJECRCSV := "QPADEV001"

		print(tNUMLIVCSV,";",tSNULIVCSV,";",tTYPRUBCSV \
			,";",tCODRUBCSV,";",tVALRUBCSV,";",tVALNUMCSV \
			,";",tDISPOCSV,";",tMAJCRECSV,";",tMAJDATCSV,";" \
			,tMAJHMSCSV,";",tMAJPGMCSV,";",tMAJUTICSV,";" \
			,tMAJECRCSV,";", NL) >> tFileOutTempCSV

		tNUMLIVCSV := tNUMLIVQur
		tSNULIVCSV := tSNULIVQur
		tTYPRUBCSV := "2"
		tCODRUBCSV := "XPT1"
		tVALRUBCSV := tNProt
		tVALNUMCSV := ""
		tDISPOCSV  := ""
		tMAJCRECSV := time("now" ,"%Y%m%d")
		tMAJDATCSV := time("now" ,"%Y%m%d")
		tMAJHMSCSV := time("now" ,"%H%M%S")
		tMAJPGMCSV := "GEPR1RUB2"
		tMAJUTICSV := build("UFM",tToInfologPrefixFilename)
		tMAJECRCSV := "QPADEV001"

		print(tNUMLIVCSV,";",tSNULIVCSV,";",tTYPRUBCSV \
			,";",tCODRUBCSV,";",tVALRUBCSV,";",tVALNUMCSV \
			,";",tDISPOCSV,";",tMAJCRECSV,";",tMAJDATCSV,";" \
			,tMAJHMSCSV,";",tMAJPGMCSV,";",tMAJUTICSV,";" \
			,tMAJECRCSV,";", NL) >> tFileOutTempCSV

		if tRastreio <> "0" then
			tNUMLIVCSV := tNUMLIVQur
			tSNULIVCSV := tSNULIVQur
			tTYPRUBCSV := "2"
			tCODRUBCSV := "RAST"
			tVALRUBCSV := peel(tLIBTXL20, " ")
			tVALNUMCSV := ""
			tDISPOCSV  := ""
			tMAJCRECSV := time("now" ,"%Y%m%d")
			tMAJDATCSV := time("now" ,"%Y%m%d")
			tMAJHMSCSV := time("now" ,"%H%M%S")
			tMAJPGMCSV := "GEPR1RUB2"
			tMAJUTICSV := build("UFM",tToInfologPrefixFilename)
			tMAJECRCSV := "QPADEV001"


			print(tNUMLIVCSV,";",tSNULIVCSV,";",tTYPRUBCSV \
				,";",tCODRUBCSV,";",tVALRUBCSV,";",tVALNUMCSV \
				,";",tDISPOCSV,";",tMAJCRECSV,";",tMAJDATCSV,";" \
				,tMAJHMSCSV,";",tMAJPGMCSV,";",tMAJUTICSV,";" \
				,tMAJECRCSV,";", NL) >> tFileOutTempCSV
		endif

		tNUMLIVCSV := tNUMLIVQur
		tSNULIVCSV := tSNULIVQur
		tTYPRUBCSV := "2"
		tCODRUBCSV := "XCH1"
		tVALRUBCSV := tVALRUBQvol
		tVALNUMCSV := ""
		tDISPOCSV  := ""
		tMAJCRECSV := time("now" ,"%Y%m%d")
		tMAJDATCSV := time("now" ,"%Y%m%d")
		tMAJHMSCSV := time("now" ,"%H%M%S")
		tMAJPGMCSV := "GEPR1RUB2"
		tMAJUTICSV := build("UFM",tToInfologPrefixFilename)
		tMAJECRCSV := "QPADEV001"

		print(tNUMLIVCSV,";",tSNULIVCSV,";",tTYPRUBCSV \
			,";",tCODRUBCSV,";",tVALRUBCSV,";",tVALNUMCSV \
			,";",tDISPOCSV,";",tMAJCRECSV,";",tMAJDATCSV,";" \
			,tMAJHMSCSV,";",tMAJPGMCSV,";",tMAJUTICSV,";" \
			,tMAJECRCSV,";", NL) >> tFileOutTempCSV

		tNUMLIVCSV := tNUMLIVQur
		tSNULIVCSV := tSNULIVQur
		tTYPRUBCSV := "2"
		tCODRUBCSV := "XIE1"
		tVALRUBCSV := tIEemit
		tVALNUMCSV := ""
		tDISPOCSV  := ""
		tMAJCRECSV := time("now" ,"%Y%m%d")
		tMAJDATCSV := time("now" ,"%Y%m%d")
		tMAJHMSCSV := time("now" ,"%H%M%S")
		tMAJPGMCSV := "GEPR1RUB2"
		tMAJUTICSV := build("UFM",tToInfologPrefixFilename)
		tMAJECRCSV := "QPADEV001"

		print(tNUMLIVCSV,";",tSNULIVCSV,";",tTYPRUBCSV \
			,";",tCODRUBCSV,";",tVALRUBCSV,";",tVALNUMCSV \
			,";",tDISPOCSV,";",tMAJCRECSV,";",tMAJDATCSV,";" \
			,tMAJHMSCSV,";",tMAJPGMCSV,";",tMAJUTICSV,";" \
			,tMAJECRCSV,";", NL) >> tFileOutTempCSV

		tNUMLIVCSV := tNUMLIVQur
		tSNULIVCSV := tSNULIVQur
		tTYPRUBCSV := "2"
		tCODRUBCSV := "XTP1"
		tVALRUBCSV := tTipoDocumento
		tVALNUMCSV := ""
		tDISPOCSV  := ""
		tMAJCRECSV := time("now" ,"%Y%m%d")
		tMAJDATCSV := time("now" ,"%Y%m%d")
		tMAJHMSCSV := time("now" ,"%H%M%S")
		tMAJPGMCSV := "GEPR1RUB2"
		tMAJUTICSV := build("UFM",tToInfologPrefixFilename)
		tMAJECRCSV := "QPADEV001"

		print(tNUMLIVCSV,";",tSNULIVCSV,";",tTYPRUBCSV \
			,";",tCODRUBCSV,";",tVALRUBCSV,";",tVALNUMCSV \
			,";",tDISPOCSV,";",tMAJCRECSV,";",tMAJDATCSV,";" \
			,tMAJHMSCSV,";",tMAJPGMCSV,";",tMAJUTICSV,";" \
			,tMAJECRCSV,";", NL) >> tFileOutTempCSV

		tNUMLIVCSV := tNUMLIVQur
		tSNULIVCSV := tSNULIVQur
		tTYPRUBCSV := "2"
		tCODRUBCSV := "PREC"
		tVALRUBCSV := substr(taUnCom[nContadorTmpTOTAL], 1, index(taUnCom[nContadorTmpTOTAL], ".") + 4)
		tVALNUMCSV := ""
		tDISPOCSV  := ""
		tMAJCRECSV := time("now" ,"%Y%m%d")
		tMAJDATCSV := time("now" ,"%Y%m%d")
		tMAJHMSCSV := time("now" ,"%H%M%S")
		tMAJPGMCSV := "GEPR1RUB2"
		tMAJUTICSV := build("UFM",tToInfologPrefixFilename)
		tMAJECRCSV := "QPADEV001"

		print(tNUMLIVCSV,";",tSNULIVCSV,";",tTYPRUBCSV \
			,";",tCODRUBCSV,";",tVALRUBCSV,";",tVALNUMCSV \
			,";",tDISPOCSV,";",tMAJCRECSV,";",tMAJDATCSV,";" \
			,tMAJHMSCSV,";",tMAJPGMCSV,";",tMAJUTICSV,";" \
			,tMAJECRCSV,";", NL) >> tFileOutTempCSV

		close(tFileOutTempCSV)
		copy(tFileOutTempCSV,tFileOutCSV)
		close(tFileOutTempCSV)
		remove(tFileOutTempCSV)
		close(tFileOutCSV)

		bfMajtraceJamRub("Recebida","0",tREFLIV,tVALRUBNF,tFileInput,tFileOut,"Produtos","")

		if bPrimeiroRegistoCSV2 = TRUE then
			bPrimeiroRegistoCSV2 := FALSE
			print("NUMLIV;SNULIV;SEQTXL;LIBTXL;DISPO;MAJCRE;MAJDAT;MAJHMS;MAJPGM;MAJUTI;MAJECR",NL) >> tFileOutTempCSV2
		endif

		while length(tChNFe) < 44 do
			tChNFe := build(" ", tChNFe)
		endwhile 

		while length(tNProt) < 15 do
			tNProt := build(" ", tNProt)
		endwhile 

		while length(tDhEmi) < 19 do
			tDhEmi := build(" ", tDhEmi)
		endwhile 

		while length(tTotalvNF) < 15 do
			tTotalvNF := build(" ", tTotalvNF)
		endwhile 

		while length(tDIPLIV5121) < 15 do
			tDIPLIV5121 := build(" ", tDIPLIV5121)
		endwhile 

		while length(tNumeroDocumento) < 8 do
			tNumeroDocumento := build(" ", tNumeroDocumento)
		endwhile 	

		while length(tNumeroSerie) < 2 do
			tNumeroSerie := build(" ", tNumeroSerie)
		endwhile 

		tLIBTXL := build(substr(tChNFe, 1, 44), \
						substr(tNProt, 1, 15), \
						substr(tTpNF, 1, 1), \
						substr(tDhEmi, 1, 19), \
						substr(substr(tTotalvNF, 1, index(tTotalvNF, ".") + 2), 1, 15), \
						substr(tDIPLIV5121, 1, 15), \
						substr(tIdeTPEmis, 1, 1), \
						substr(tNumeroDocumento, 1, 8), \
						substr(tNumeroSerie, 1, 2))

		tNUMLIVCSV := tNUMLIVQur
		tSNULIVCSV := tSNULIVQur
		tSEQTXLCSV := "10"
		tLIBTXLCSV := tLIBTXL
		tDISPOCSV  := ""
		tMAJCRECSV := time("now" ,"%Y%m%d")
		tMAJDATCSV := time("now" ,"%Y%m%d")
		tMAJHMSCSV := time("now" ,"%H%M%S")
		tMAJPGMCSV := "APOTCPYS"
		tMAJUTICSV := build("UFM",tToInfologPrefixFilename)
		tMAJECRCSV := "QPADEV001K"

		print(tNUMLIVCSV,";",tSNULIVCSV,";",tSEQTXLCSV \
			,";",tLIBTXLCSV,";",tDISPOCSV,";",tMAJCRECSV \
			,";",tMAJDATCSV,";",tMAJHMSCSV,";",tMAJPGMCSV,";" \
			,tMAJUTICSV,";",tMAJECRCSV,";", NL) >> tFileOutTempCSV2

		if tRastreio <> "0" then
			tNUMLIVCSV := tNUMLIVQur
			tSNULIVCSV := tSNULIVQur
			tSEQTXLCSV := "20"
			tLIBTXLCSV := tLIBTXL20
			tDISPOCSV  := ""
			tMAJCRECSV := time("now" ,"%Y%m%d")
			tMAJDATCSV := time("now" ,"%Y%m%d")
			tMAJHMSCSV := time("now" ,"%H%M%S")
			tMAJPGMCSV := "APOTCPYS"
			tMAJUTICSV := build("UFM",tToInfologPrefixFilename)
			tMAJECRCSV := "QPADEV001K"

			print(tNUMLIVCSV,";",tSNULIVCSV,";",tSEQTXLCSV \
				,";",tLIBTXLCSV,";",tDISPOCSV,";",tMAJCRECSV \
				,";",tMAJDATCSV,";",tMAJHMSCSV,";",tMAJPGMCSV,";" \
				,tMAJUTICSV,";",tMAJECRCSV,";", NL) >> tFileOutTempCSV2

			tQueryUpdade := build("UPDATE FGE50FM",tToInfologPrefixFilename,".GESUPD", NL," "\
									"SET ZONSPF = '",tLIBTXL20,"'", NL," "\
									"WHERE NUMLIV = '",tNUMLIVQur,"' WITH NONE")
			
			log("------------------------------------------------------------", NL)
			log(tQueryUpdade,NL)
			log("------------------------------------------------------------", NL)
			
			if not bfSqlSet(tDbBase2, "Updatedb2", tQueryUpdade) then
				log(tfSqlErrorStr(), NL)
				bfMajtraceJamRubTxl("Erro de Traducao","1",tREFLIV,tVALRUBNF,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
				exit(27)
			endif

			if not bfSqlExec(tDbBase2, "Updatedb2") then
				log(tfSqlErrorStr(), NL)
				bfMajtraceJamRubTxl("Erro de Traducao","1",tREFLIV,tVALRUBNF,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
				exit(28)
			endif

			if not bfSqlCommit(tDbBase2, "Updatedb2") then
				log(tfSqlErrorStr(), NL)
				bfMajtraceJamRubTxl("Erro de Traducao","1",tREFLIV,tVALRUBNF,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
				exit(29)
			endif

			if not bfSqlFree(tDbBase2, "Updatedb2") then
				log(tfSqlErrorStr(), NL)
				bfMajtraceJamRubTxl("Erro de Traducao","1",tREFLIV,tVALRUBNF,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
				exit(30)
			endif
		endif

		tQueryUpdade := build("UPDATE FGE50FM",tToInfologPrefixFilename,".GETOUD", NL," "\
								"SET FAXCLI = '",tIEdest,"', DIPLIV = '",tVALRUBQvol,"', TELCLI = '",tFone,"'", NL," "\
								"WHERE NUMLIV = '",tNUMLIVQur,"' WITH NONE")
		
		log("------------------------------------------------------------", NL)
		log(tQueryUpdade,NL)
		log("------------------------------------------------------------", NL)
		
		if not bfSqlSet(tDbBase2, "Updatedb2", tQueryUpdade) then
			log(tfSqlErrorStr(), NL)
			bfMajtraceJamRubTxl("Erro de Traducao","1",tREFLIV,tVALRUBNF,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
			exit(27)
		endif

		if not bfSqlExec(tDbBase2, "Updatedb2") then
			log(tfSqlErrorStr(), NL)
			bfMajtraceJamRubTxl("Erro de Traducao","1",tREFLIV,tVALRUBNF,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
			exit(28)
		endif

		if not bfSqlCommit(tDbBase2, "Updatedb2") then
			log(tfSqlErrorStr(), NL)
			bfMajtraceJamRubTxl("Erro de Traducao","1",tREFLIV,tVALRUBNF,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
			exit(29)
		endif

		if not bfSqlFree(tDbBase2, "Updatedb2") then
			log(tfSqlErrorStr(), NL)
			bfMajtraceJamRubTxl("Erro de Traducao","1",tREFLIV,tVALRUBNF,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
			exit(30)
		endif

		close(tFileOutTempCSV2)
		copy(tFileOutTempCSV2,tFileOutCSV2)
		close(tFileOutTempCSV2)
		remove(tFileOutTempCSV2)
		close(tFileOutCSV2)

		bfMajtraceJamRubTxl("Recebida","0",tREFLIV,tVALRUBNF,tFileInput,tFileOut,"Produtos","")
		
		! GERILP
		if bPrimeiroRegistoCSV3 = TRUE then
			bPrimeiroRegistoCSV3 := FALSE
			print("NUMLIV;SNULIV;SEQLIV;CODRUB;TYPRUB;VALRUB;VALMIN,VALMAX,NLILIV,DISPO;MAJCRE;MAJDAT;MAJHMS;MAJPGM;MAJUTI;MAJECR",NL) >> tFileOutTempCSV3
		endif

		tQuery := build("SELECT CODPRO, SEQLIV ", NL," "\
						"	FROM FGE50FM",tToInfologPrefixFilename,".GELIVD ", NL," "\
						"	WHERE NUMLIV = '",tNUMLIVQur,"'")

		log("----------------------------------------", NL)
		log(tQuery,NL)
		log("----------------------------------------", NL)

		if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
			print("FATAL ", tfSqlErrorStr())
			bfMajtraceJamRubGerilp("Erro de Traducao","1",tREFLIV,tVALRUBNF,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
			exit(1)
		endif

		if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
			print("FATAL ", tfSqlErrorStr())
			bfMajtraceJamRubGerilp("Erro de Traducao","1",tREFLIV,tVALRUBNF,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
			exit(1)
		endif

		while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
			tNUMLIVCSVGerilp := tNUMLIVQur
			tSNULIVCSVGerilp := tSNULIVQur
			tSEQLIVCSVGerilp := peel(taDb2Array["SEQLIV"]," ")
			tCODRUBCSVGerilp := "PREC"
			tTYPRUBCSVGerilp := "1"
			tVALRUBCSVGerilp := substr(taUnComProd[peel(taDb2Array["CODPRO"]," ")], 1, index(taUnComProd[peel(taDb2Array["CODPRO"]," ")], ".") + 4)
			tVALMINCSVGerilp := "0"
			tVALMAXCSVGerilp := "0"
			tNLILIVCSVGerilp := build(nCountWhile)
			tDISPOCSVGerilp  := ""
			tMAJCRECSVGerilp := time("now" ,"%Y%m%d")
			tMAJDATCSVGerilp := time("now" ,"%Y%m%d")
			tMAJHMSCSVGerilp := time("now" ,"%H%M%S")
			tMAJPGMCSVGerilp := "APOTCPYS"
			tMAJUTICSVGerilp := build("UFM",tToInfologPrefixFilename)
			tMAJECRCSVGerilp := "QPADEV001K"

			print(tNUMLIVCSVGerilp,";", \
					tSNULIVCSVGerilp,";", \
					tSEQLIVCSVGerilp,";", \
					tCODRUBCSVGerilp,";", \
					tTYPRUBCSVGerilp,";", \
					tVALRUBCSVGerilp,";", \
					tVALMINCSVGerilp,";", \
					tVALMAXCSVGerilp,";", \
					tNLILIVCSVGerilp,";", \
					tDISPOCSVGerilp,";", \
					tMAJCRECSVGerilp,";", \
					tMAJDATCSVGerilp,";", \
					tMAJHMSCSVGerilp,";", \
					tMAJPGMCSVGerilp,";", \
					tMAJUTICSVGerilp,";", \
					tMAJECRCSVGerilp,";", NL) >> tFileOutTempCSV3

			remove(taDb2Array)
		endwhile

		if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
			print("FATAL", tfSqlErrorStr())
			bfMajtraceJamRubGerilp("Erro de Traducao","1",tREFLIV,tVALRUBNF,tFileInput,tFileOut,"Produtos",build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
			exit(1)
		endif

		close(tFileOutTempCSV3)
		copy(tFileOutTempCSV3,tFileOutCSV3)
		close(tFileOutTempCSV3)
		remove(tFileOutTempCSV3)
		close(tFileOutCSV3)

		bfMajtraceJamRubGerilp("Recebida","0",tREFLIV,tVALRUBNF,tFileInput,tFileOut,"Produtos","")
	else
		log("O CNPJ Emissor é diferente de '16587166000439'",NL)
		bfMajtraceJamRub("Erro de Traducao","1",tREFLIV,tVALRUBNF,tFileInput,tFileOut,"Produtos",build("O CNPJ Emissor é diferente de '16587166000439'"))
		exit(0)
	endif

	bfSqlClose(tDbBase)
	bfSqlClose(tDbBase2)
	exit(0)
endend

!===========================================================

function bfMajtraceJamRub(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
	TRACE:=new(build(sHOME,"/trace"))
	TRACE.ESTADO := tStatus
	TRACE.ERRO := tError
	TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
	TRACE.MENSAGEM := "NF - RUBRICA"
	TRACE.PERFIL := "SISLEY"
	TRACE.SENTIDO := "I"
	TRACE.NUMDOC := tNumDoc
	TRACE.DATDOC := tDataDoc
	TRACE.MESSAGEID := build(nMessageID)
	if pEDISEND.ORIGINAL.NAME <> build(SYSLOG.INDEX) then
		TRACE.REDE := pEDISEND.ORIGINAL.NAME
	else
		TRACE.REDE := "REPROCESSADO"
	endif
	TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
	TRACE.FICHEIROSAIDA := tNameOutCSV
	TRACE.LIBEXC := tLIBEXC

	SYSLOG.REFERENCE := tNumDoc

	if tStatus = "Recebida" then
		print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
		print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
		print("Traduzida com Sucesso",NL) >> TRACE.Detail
	else
		if tStatus = "Erro de Traducao" then
			print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
			print("Erro de Traducao",NL) >> TRACE.Detail
			print(tMensagemErrro,NL) >> TRACE.Detail
		endif
	endif
	close(TRACE.Detail)

	copy(SYSLOG.a,TRACE.In)
	close(SYSLOG.a)
	close(TRACE.In)

	close(tFileOutCSV)
	copy(tFileOutCSV,TRACE.OutCSV)
	close(tFileOutCSV)
	close(TRACE.OutCSV)

	flush(TRACE)
endfunction

!===========================================================

function bfMajtraceJamRubTxl(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
	TRACE:=new(build(sHOME,"/trace"))
	TRACE.ESTADO := tStatus
	TRACE.ERRO := tError
	TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
	TRACE.MENSAGEM := "NF - RUBRICA TXL"
	TRACE.PERFIL := "SISLEY"
	TRACE.SENTIDO := "I"
	TRACE.NUMDOC := tNumDoc
	TRACE.DATDOC := tDataDoc
	TRACE.MESSAGEID := build(nMessageID)
	if pEDISEND.ORIGINAL.NAME <> build(SYSLOG.INDEX) then
		TRACE.REDE := pEDISEND.ORIGINAL.NAME
	else
		TRACE.REDE := "REPROCESSADO"
	endif
	TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
	TRACE.FICHEIROSAIDA := tNameOutCSV2
	TRACE.LIBEXC := tLIBEXC

	SYSLOG.REFERENCE := build(nMessageID)

	if tStatus = "Recebida" then
		print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
		print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
		print("Traduzida com Sucesso",NL) >> TRACE.Detail
	else
		if tStatus = "Erro de Traducao" then
			print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
			print("Erro de Traducao",NL) >> TRACE.Detail
			print(tMensagemErrro,NL) >> TRACE.Detail
		endif
	endif
	close(TRACE.Detail)

	copy(SYSLOG.a,TRACE.In)
	close(SYSLOG.a)
	close(TRACE.In)

	close(tFileOutCSV2)
	copy(tFileOutCSV2,TRACE.OutCSV_LIB)
	close(tFileOutCSV2)
	close(TRACE.OutCSV_LIB)

	flush(TRACE)
endfunction

!===========================================================

function bfMajtraceJamRubGerilp(tStatus,tError,tNumDoc,tDataDoc,tInput,tFileOut,tTipoDocumento,tMensagemErrro)
	TRACE:=new(build(sHOME,"/trace"))
	TRACE.ESTADO := tStatus
	TRACE.ERRO := tError
	TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
	TRACE.MENSAGEM := "NF - RUBRICA GERILP"
	TRACE.PERFIL := "SISLEY"
	TRACE.SENTIDO := "I"
	TRACE.NUMDOC := tNumDoc
	TRACE.DATDOC := tDataDoc
	TRACE.MESSAGEID := build(nMessageID)
	if pEDISEND.ORIGINAL.NAME <> build(SYSLOG.INDEX) then
		TRACE.REDE := pEDISEND.ORIGINAL.NAME
	else
		TRACE.REDE := "REPROCESSADO"
	endif
	TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
	TRACE.FICHEIROSAIDA := tNameOutCSV3
	TRACE.LIBEXC := tLIBEXC

	SYSLOG.REFERENCE := build(nMessageID)

	if tStatus = "Recebida" then
		print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
		print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
		print("Traduzida com Sucesso",NL) >> TRACE.Detail
	else
		if tStatus = "Erro de Traducao" then
			print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
			print("Erro de Traducao",NL) >> TRACE.Detail
			print(tMensagemErrro,NL) >> TRACE.Detail
		endif
	endif
	close(TRACE.Detail)

	copy(SYSLOG.a,TRACE.In)
	close(SYSLOG.a)
	close(TRACE.In)

	close(tFileOutCSV3)
	copy(tFileOutCSV3,TRACE.OutCSV_GERILP)
	close(tFileOutCSV3)
	close(TRACE.OutCSV_GERILP)

	flush(TRACE)
endfunction
