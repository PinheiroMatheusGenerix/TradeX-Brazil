%@(#)  M06_MARS_CENARIO_26_CSV.rte     modif:23-11-2017
!==============================================================================
% File          : M06_MARS_CENARIO_26_CSV.rte   version 1.0
!------------------------------------------------------------------------------
% Description   : <short program description>
!------------------------------------------------------------------------------
% Author        : <developer name> - COMPANY
!==============================================================================
! 23-11-2017  XX  Creation
! 23-11-2017  XX  <comments>
!==============================================================================
!
! <detailed program description>
!
!==============================================================================
! input file     : <name or rule for naming input file>
! output file    : <name or rule for naming output file> 
! temporary file : <name or rule for naming temporary file> 
!==============================================================================

!base "syslog.cfg" SYSLOG
base "../trace/trace.cfg" TRACE,autoflush off

!===========================================================

! Input/output macros file
#define TX_PROG_INFO "M06_MARS_CENARIO_26_CSV"
#include "include/M06_MARS_CSV.inc"
#include "include/GEEXM06.inc"
#include "include/generix_func.inc"

!===========================================================

! Initialization section

begin
	SYSLOG := find(sSYSLOG,INDEX=number(pINDEX))
	nPos := 1
	nRec := 1
	nMessageID := cMessageID

	load (0, build(sHOME,"/config/FM_wms_configuration.properties"), taPARAM)
	tToInfologPrefixFilename := taPARAM["ToInfologPrefixFilenameXA7"]

	tDbBase		:= "FMWMS"
	tDbUsername	:= taPARAM["WMSDBUSER"]
	tDbPassword	:= taPARAM["WMSDBPASS"]
	tDbUrl		:= taPARAM["WMSDBURL"]
  
    nContadorLinhasEscritas  := 0
	nNumeroAux := 0
	nLinhaArrayAux := 0
    tMENSAGEM := "MOV QUALIDADE PALETE"

	tFileOut := build(sHOME,"/ToInfolog/",tToInfologPrefixFilename,"06",build(nMessageID:R015),".DAT")
	tFileOutTemp := build(sHOME,"/ToInfolog/Temp/",tToInfologPrefixFilename,"06",build(nMessageID:R015),".DAT")
	tNameOut := build(tToInfologPrefixFilename,"06",build(nMessageID:R015),".DAT")

    bfSqlInit()
	if not bfSqlJdbc(tDbBase, tDbUsername, tDbPassword, tDbUrl) then
		print("FATAL ",tfSqlErrorStr())
		bfSqlClose(tDbBase)
		bfMajtrace("Erro de Traducao", \
                    "1", \
                    tNumeroDocumento, \
                    tDataDocumento, \
                    tFileOut, \
                    tMENSAGEM, \
                    build("Erro na abertura do banco de dados: ",tfSqlErrorStr()))
		exit(1)
	endif
endbegin

!===========================================================

line(not "")
    S_REGISTRO
	
	! QUERY tLIBACT
		tQuery := build("SELECT LIBACT ", NL," "\
						"FROM FGE50FM",tToInfologPrefixFilename,".GEACT ", NL," "\
						"WHERE CODACT = '",S_REGISTRO_Atividade,"'")

		log("------------------------------------------------------------", NL)
		log(tQuery,NL)
		log("------------------------------------------------------------", NL)

		if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
			print("FATAL ", tfSqlErrorStr())
			bfMajtrace("Erro de Traducao", \
						"1", \
						tNumeroDocumento, \
						tDataDocumento, \
						tFileOut, \
						tMENSAGEM, \
						build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
			exit(1)
		endif

		if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
			print("FATAL ", tfSqlErrorStr())
			bfMajtrace("Erro de Traducao", \
						"1", \
						tNumeroDocumento, \
						tDataDocumento, \
						tFileOut, \
						tMENSAGEM, \
						build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
			exit(1)
		endif
				
		while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
			tLIBACT := peel(taDb2Array["LIBACT"]," ")
			remove(taDb2Array)
		endwhile

		if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
			print("FATAL", tfSqlErrorStr())
			bfMajtrace("Erro de Traducao", \
						"1", \
						tNumeroDocumento, \
						tDataDocumento, \
						tFileOut, \
						tMENSAGEM, \
						build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
			exit(1)
		endif
	! FIM QUERY LIBACT

    nNumeroAux++
	! LOGS
		log("------------------------------------------------------------", NL)
		log("nContadorLinhasEscritas(LINE) = ", nContadorLinhasEscritas, NL)
		log("S_REGISTRO_CodPalete = ", S_REGISTRO_CodPalete, NL)
		log("nNumeroAux = ", nNumeroAux, NL)
		log("S_REGISTRO_Qualidade = ", S_REGISTRO_Qualidade, NL)
		log("tZONSTS = ", tZONSTS, NL)
		log("tMOTIMMAntigo = ", tMOTIMMAntigo, NL, NL)
		log("------------------------------------------------------------", NL)
	! FIM LOGS

	if length(S_REGISTRO_CodPalete) > 0 and nNumeroAux > 1 then
		if nContadorLinhasEscritas = 0 then
			R_GEEX0000_CODEXC("00")
			R_GEEX0000_SEPEXC(".")
			R_GEEX0000_SCOEXC("00")
			R_GEEX0000_EMTEXC("FM") 
			R_GEEX0000_DATEXC(time("now" ,"%Y%m%d"))
			R_GEEX0000_HEUEXC(time("now" ,"%H%M%S"))
			R_GEEX0000_NUMEXC("0000000")
			R_GEEX0000_ACQEXC("0")
			R_GEEX0000_VEREXC("5.00") 
			R_GEEX0000_NOMDTQ("M06")
			R_GEEX0000_LIBEXC(build(nMessageID:R010))
			R_GEEX0000_EDISIT(build(number(tCentro_De_Custo)))

			flush(0,0,NL) >> tFileOutTemp
		endif
			
		bFaz06VerificaQuery := TRUE
		bTeveResultados := FALSE

		! QUERY tZONSTS, tMOTIMMAntigo, tNUMPAL, tCODACTQuery, bFaz06VerificaQueryUmaVEZ
			tQuery := build("SELECT ZONSTS ", NL," "\
							"      ,ALLSTS ", NL," "\
							"      ,DPLSTS ", NL," "\
							"      ,NIVSTS ", NL," "\
							"      ,MOTIMM ", NL," "\
							"      ,NUMPAL ", NL," "\
							"      ,CODACT ", NL," "\
							"FROM FGE50FM",tToInfologPrefixFilename,".GEPAL ", NL," "\
							"WHERE CODPAL = '",S_REGISTRO_CodPalete,"' ", NL," "\
							"AND CODACT = '",S_REGISTRO_Atividade,"'")

			log("------------------------------------------------------------", NL)
			log(tQuery,NL)
			log("------------------------------------------------------------", NL)

			if bfSqlSet(tDbBase, "SELECTdb2", tQuery) = FALSE then
				print("FATAL ", tfSqlErrorStr())
				bfMajtrace("Erro de Traducao", \
							"1", \
							tNumeroDocumento, \
							tDataDocumento, \
							tFileOut, \
							tMENSAGEM, \
							build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
				exit(1)
			endif

			if bfSqlOpen(tDbBase, "SELECTdb2") = FALSE then
				print("FATAL ", tfSqlErrorStr())
				bfMajtrace("Erro de Traducao", \
							"1", \
							tNumeroDocumento, \
							tDataDocumento, \
							tFileOut, \
							tMENSAGEM, \
							build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
				exit(1)
			endif

			bFaz06VerificaQueryUmaVEZ := FALSE
					
			while bfSqlFetchArray(tDbBase, "SELECTdb2", taDb2Array) = TRUE do
				bTeveResultados := TRUE

				if bFaz06VerificaQueryUmaVEZ = FALSE then
					tZONSTS := peel(taDb2Array["ZONSTS"]," ")
					tMOTIMMAntigo := peel(taDb2Array["MOTIMM"]," ")
					tNUMPAL := peel(taDb2Array["NUMPAL"]," ")
					tCODACTQuery := peel(taDb2Array["CODACT"]," ")
				
					bFaz06VerificaQueryUmaVEZ := TRUE
				endif

				remove(taDb2Array)
			endwhile

			if bfSqlFree(tDbBase, "SELECTdb2") = FALSE then
				print("FATAL", tfSqlErrorStr())
				bfMajtrace("Erro de Traducao", \
							"1", \
							tNumeroDocumento, \
							tDataDocumento, \
							tFileOut, \
							tMENSAGEM, \
							build("Erro na execucao da query ",tQuery," do banco de dados: ",tfSqlErrorStr()))
				exit(1)
			endif
		! FIM QUERY

		! LOGS
			if bFaz06VerificaQueryUmaVEZ = TRUE then
				log("------------------------------------------------------------", NL)
				log("bFaz06VerificaQueryUmaVEZ(1) = TRUE", NL)
				log("------------------------------------------------------------", NL)
			else
				log("------------------------------------------------------------", NL)
				log("bFaz06VerificaQueryUmaVEZ(1) = FALSE", NL)
				log("------------------------------------------------------------", NL)
			endif
		! FIM LOGS

		if bFaz06VerificaQueryUmaVEZ = TRUE then
			if S_REGISTRO_Qualidade = "RET" and tMOTIMMAntigo = "HEL" then
				R_GEEX0600_CODEXC("06")
				R_GEEX0600_SEPEXC(".")
				R_GEEX0600_SCOEXC("00")
				R_GEEX0600_TRTEXC("2")
				R_GEEX0600_CODACT(S_REGISTRO_Atividade)
				R_GEEX0600_CODPAL(S_REGISTRO_CodPalete)
				R_GEEX0600_MOTIMM("HEL")
				R_GEEX0600_CODTRT("2")
				R_GEEX0600_NUMPAL(tNUMPAL)
				R_GEEX0600_CODPRO(S_REGISTRO_CodProduto)
				R_GEEX0600_CODLOT(S_REGISTRO_Lote)
				R_GEEX0600_DATFVI(tfConvertDate(S_REGISTRO_DataValidade, "DD/MM/YYYY" , "YYYYMMDD"))
				R_GEEX0600_DATMVT(time("now","%Y%m%d"))
				R_GEEX0600_IDEMSG("CSV")
				
				flush(0,0,NL) >> tFileOutTemp

				nContadorLinhasEscritas++			
				nLinhaArrayAux++
				taStringDetails[nLinhaArrayAux] := build(S_REGISTRO_CodPalete, " - SUCESSO - MOTIMM ",tMOTIMMAntigo," ZONSTS ",tZONSTS," e CODACT ",tCODACTQuery,NL)			   

				R_GEEX0600_CODEXC("06")
				R_GEEX0600_SEPEXC(".")
				R_GEEX0600_SCOEXC("00")
				R_GEEX0600_TRTEXC("2")
				R_GEEX0600_CODACT(S_REGISTRO_Atividade)
				R_GEEX0600_CODPAL(S_REGISTRO_CodPalete)
				R_GEEX0600_MOTIMM("RET")
				R_GEEX0600_CODTRT("1")
				R_GEEX0600_NUMPAL(tNUMPAL)
				R_GEEX0600_CODPRO(S_REGISTRO_CodProduto)
				R_GEEX0600_CODLOT(S_REGISTRO_Lote)
				R_GEEX0600_DATFVI(tfConvertDate(S_REGISTRO_DataValidade, "DD/MM/YYYY" , "YYYYMMDD"))
				R_GEEX0600_DATMVT(time("now","%Y%m%d"))
				R_GEEX0600_IDEMSG("CSV")
				
				flush(0,0,NL) >> tFileOutTemp

				nContadorLinhasEscritas++			
				nLinhaArrayAux++
				taStringDetails[nLinhaArrayAux] := build(S_REGISTRO_CodPalete, " - SUCESSO - MOTIMM ",tMOTIMMAntigo," ZONSTS ",tZONSTS," e CODACT ",tCODACTQuery,NL)			   
			else
				R_GEEX0600_CODEXC("06")
				R_GEEX0600_SEPEXC(".")
				R_GEEX0600_SCOEXC("00")
				R_GEEX0600_TRTEXC("2")
				R_GEEX0600_CODACT(S_REGISTRO_Atividade)
				R_GEEX0600_CODPAL(S_REGISTRO_CodPalete)
				R_GEEX0600_MOTIMM(S_REGISTRO_Qualidade)
				if length(S_REGISTRO_Qualidade) > 0 and length(S_REGISTRO_CodPalete) > 0 then 
					R_GEEX0600_CODTRT("1")
				else
					if length(S_REGISTRO_Qualidade) = 0 and length(S_REGISTRO_CodPalete) > 0 then
						R_GEEX0600_CODTRT("2")
					else
						if length(S_REGISTRO_Qualidade) > 0 and length(S_REGISTRO_CodPalete) = 0 and length(S_REGISTRO_Lote) > 0 then
							R_GEEX0600_CODTRT("3")
						else
							if length(S_REGISTRO_Qualidade) = 0 and length(S_REGISTRO_CodPalete) = 0 and length(S_REGISTRO_Lote) > 0 then
								R_GEEX0600_CODTRT("4")
							endif
						endif
					endif
				endif
				R_GEEX0600_NUMPAL(tNUMPAL)
				R_GEEX0600_CODPRO(S_REGISTRO_CodProduto)
				R_GEEX0600_CODLOT(S_REGISTRO_Lote)
				R_GEEX0600_DATFVI(tfConvertDate(S_REGISTRO_DataValidade, "DD/MM/YYYY" , "YYYYMMDD"))
				R_GEEX0600_DATMVT(time("now","%Y%m%d"))
				R_GEEX0600_IDEMSG("CSV")
				
				flush(0,0,NL) >> tFileOutTemp

				nContadorLinhasEscritas++			
				nLinhaArrayAux++
				taStringDetails[nLinhaArrayAux] := build(S_REGISTRO_CodPalete, " - SUCESSO - MOTIMM ",tMOTIMMAntigo," ZONSTS ",tZONSTS," e CODACT ",tCODACTQuery,NL)			   
			endif
		else
			nLinhaArrayAux++
			taStringDetails[nLinhaArrayAux] := build(S_REGISTRO_CodPalete, " - ERRO - MOTIMM ",tMOTIMMAntigo," ZONSTS ",tZONSTS," e CODACT ",tCODACTQuery,NL)
		endif
    else
		if length(S_REGISTRO_CodPalete) = 0 and nNumeroAux > 1 then
			if nContadorLinhasEscritas = 0 then
				R_GEEX0000_CODEXC("00")
				R_GEEX0000_SEPEXC(".")
				R_GEEX0000_SCOEXC("00")
				R_GEEX0000_TRTEXC("")
				R_GEEX0000_EMTEXC("FM") 
				R_GEEX0000_RCTEXC("")
				R_GEEX0000_DATEXC(time("now" ,"%Y%m%d"))
				R_GEEX0000_HEUEXC(time("now" ,"%H%M%S"))
				R_GEEX0000_NUMEXC("0000000")
				R_GEEX0000_ACQEXC("0")
				R_GEEX0000_VEREXC("5.00") 
				R_GEEX0000_NOMSYS("")  
				R_GEEX0000_NOMDTQ("M06")
				R_GEEX0000_BIBDTQ("")
				R_GEEX0000_LIBEXC(build(nMessageID:R010))
				R_GEEX0000_BIBDST("")
				R_GEEX0000_PGMDST("")
				R_GEEX0000_PARDST("")
				R_GEEX0000_CODACT("")
				R_GEEX0000_IGLSIT("")
				R_GEEX0000_EDISIT(build(number(tCentro_De_Custo)))
				R_GEEX0000_IMAEXC("")  
				R_GEEX0000_DISEXC("")

				flush(0,0,NL) >> tFileOutTemp
			endif
				
			R_GEEX0600_CODEXC("06")
			R_GEEX0600_SEPEXC(".")
			R_GEEX0600_SCOEXC("00")
			R_GEEX0600_TRTEXC("2")
			R_GEEX0600_CODACT(S_REGISTRO_Atividade)
			R_GEEX0600_CODPAL(S_REGISTRO_CodPalete)
			R_GEEX0600_MOTIMM(S_REGISTRO_Qualidade)
			if length(S_REGISTRO_Qualidade) > 0 and length(S_REGISTRO_CodPalete) > 0 then 
				R_GEEX0600_CODTRT("1")
			else
				if length(S_REGISTRO_Qualidade) = 0 and length(S_REGISTRO_CodPalete) > 0 then
					R_GEEX0600_CODTRT("2")
				else
					if length(S_REGISTRO_Qualidade) > 0 and length(S_REGISTRO_CodPalete) = 0 and length(S_REGISTRO_Lote) > 0 then
						R_GEEX0600_CODTRT("3")
					else
						if length(S_REGISTRO_Qualidade) = 0 and length(S_REGISTRO_CodPalete) = 0 and length(S_REGISTRO_Lote) > 0 then
							R_GEEX0600_CODTRT("4")
						endif
					endif
				endif
			endif
			R_GEEX0600_CODPRO(S_REGISTRO_CodProduto)
			R_GEEX0600_CODLOT(S_REGISTRO_Lote)
			R_GEEX0600_DATFVI(tfConvertDate(S_REGISTRO_DataValidade, "DD/MM/YYYY" , "YYYYMMDD"))
			R_GEEX0600_DATMVT(time("now","%Y%m%d"))
			R_GEEX0600_IDEMSG("CSV")
			
			flush(0,0,NL) >> tFileOutTemp

			nContadorLinhasEscritas++			
			nLinhaArrayAux++
		endif
	endif
endline

! Default statements section
default

enddefault

!===========================================================

! End statements section

end 
	if nContadorLinhasEscritas > 0 then
		bfSqlClose(tDbBase)

		R_GEEX9900_CODEXC("99")
		R_GEEX9900_SEPEXC(".")
		R_GEEX9900_SCOEXC("00")
		R_GEEX9900_TRTEXC("")
		R_GEEX9900_EMTEXC("FM")
		R_GEEX9900_RCTEXC("")
		R_GEEX9900_DATEXC(time("now" ,"%Y%m%d"))
		R_GEEX9900_HEUEXC(time("now" ,"H%M%S"))
		R_GEEX9900_NUMEXC("")
		tContadorLinhasEscritas := build(nContadorLinhasEscritas)
		R_GEEX9900_CPTEXC(build(number(tContadorLinhasEscritas):R08.0))

		flush(0,0,NL)  >> tFileOutTemp
		close(tFileOutTemp)

		copy(tFileOutTemp,tFileOut)
		close(tFileOutTemp)
		remove(tFileOutTemp)
		close(tFileOut)

		bfMajtrace("Recebida", \
                    "0", \
                    tNumeroDocumento, \
                    tDataDocumento, \
                    tFileOut, \
                    tMENSAGEM, \
                    "")										
	else
		bfMajtrace("Erro de Traducao", \
                    "1", \
                    tNumeroDocumento, \
                    tDataDocumento, \
                    tFileOut, \
                    tMENSAGEM, \
                    build("Nao foi gerado arquivo de output"))

		close(tFileOutTemp)
		remove(tFileOutTemp)
	endif

	exit(0)
endend

!===========================================================

function bfMajtrace(tStatus, tError, tNumDoc, tDataDoc, tFileOut, tFileMessage, tMensagemErro)
	TRACE:=new(build(sHOME,"/trace"))
	TRACE.ESTADO := tStatus
	TRACE.ERRO := tError
	TRACE.DATATRADUCAO := time("now","%Y-%m-%dT%H:%M:%S")
	TRACE.MENSAGEM := tFileMessage
	TRACE.PERFIL := tLIBACT
	TRACE.SENTIDO := "I"
	TRACE.NUMDOC := time("now","%Y-%m-%d")
	TRACE.DATDOC := time("now","%Y-%m-%d")
	TRACE.MESSAGEID := build(nMessageID)   
	if pEDISEND.ORIGINAL.NAME <> build(SYSLOG.INDEX) then
		TRACE.REDE := pEDISEND.ORIGINAL.NAME
	else
		TRACE.REDE := "REPROCESSADO"
	endif
	TRACE.SYSLOG_INDEX := build(SYSLOG.INDEX)
	TRACE.FICHEIROSAIDA := tNameOut

	SYSLOG.REFERENCE := build(nMessageID)

	if tStatus = "Recebida" then
		print(build("Ficheiro de Saida: "),tFileOut,NL,NL) >> TRACE.Detail
		print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
		print("Traduzida com Sucesso",NL) >> TRACE.Detail
	else
		if tStatus = "Erro de Traducao" then
			print(build(time("now" ,"%Y-%m-%dT%H:%M:%S"),"\t|\t")) >> TRACE.Detail
			print("Erro de Traducao",NL) >> TRACE.Detail
			print(tMensagemErro,NL) >> TRACE.Detail
		endif
	endif

	nTempLinhaArrayAux := 1

	while nTempLinhaArrayAux <= nLinhaArrayAux do
		print(taStringDetails[nTempLinhaArrayAux]) >> TRACE.Detail
		nTempLinhaArrayAux++
	endwhile

	close(TRACE.Detail)
	close(SYSLOG.a)
	copy(SYSLOG.a,TRACE.In)
	close(SYSLOG.a)
	close(TRACE.In)

	if tError = "0" then
		close(tFileOut)
		copy(tFileOut,TRACE.Out)
		close(tFileOut)
		close(TRACE.Out)
	endif

	flush(TRACE)
endfunction


